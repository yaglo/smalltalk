/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    float _field1;
    float _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    float _field1;
    float _field2;
};

struct InternalInit {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    char _field5;
    long long _field6;
};

struct NSSlice {
    void **items;
    char wantsStrong;
    char wantsWeak;
    char wantsARC;
    char shouldCopyIn;
    char usesStrong;
    char usesWeak;
    char usesARC;
    char usesSentinel;
    char pointerPersonality;
    char integerPersonality;
    char simpleReadClear;
    NSWeakCallback *callback;
    void *sizeFunction;
    void *hashFunction;
    void *isEqualFunction;
    void *describeFunction;
    void *acquireFunction;
    void *relinquishFunction;
    void *allocateFunction;
    void *freeFunction;
    void *readAt;
    void *clearAt;
    void *storeAt;
};

struct _NSLTToken {
    unsigned short _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned int _field4;
    union {
        void *_field1;
        struct {
            unsigned char _field1;
            unsigned char _field2;
        } _field2;
    } _field5;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRefCountedRunArray {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct _NSRunArrayItem _field8[0];
};

struct _NSRunArrayItem {
    unsigned int _field1;
    id _field2;
};

struct _NSSimpleAttributeDictionaryElement {
    unsigned int hash;
    id key;
    id value;
};

struct _ftsent {
    struct _ftsent *_field1;
    struct _ftsent *_field2;
    struct _ftsent *_field3;
    long _field4;
    void *_field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned long long _field12;
    int _field13;
    unsigned short _field14;
    short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    struct stat *_field19;
    char _field20[1];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserCtxt {
    struct _xmlSAXHandler *_field1;
    void *_field2;
    struct _xmlDoc *_field3;
    int _field4;
    int _field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    struct _xmlParserInput *_field10;
    int _field11;
    int _field12;
    struct _xmlParserInput **_field13;
    struct _xmlNode *_field14;
    int _field15;
    int _field16;
    struct _xmlNode **_field17;
    int _field18;
    struct _xmlParserNodeInfoSeq {
        unsigned long _field1;
        unsigned long _field2;
        struct _xmlParserNodeInfo *_field3;
    } _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct _xmlValidCtxt {
        void *_field1;
        void *_field2;
        void *_field3;
        struct _xmlNode *_field4;
        int _field5;
        int _field6;
        struct _xmlNode **_field7;
        unsigned int _field8;
        struct _xmlDoc *_field9;
        int _field10;
        struct _xmlValidState *_field11;
        int _field12;
        int _field13;
        struct _xmlValidState *_field14;
        struct _xmlAutomata *_field15;
        struct _xmlAutomataState *_field16;
    } _field26;
    int _field27;
    int _field28;
    char *_field29;
    char *_field30;
    int _field31;
    int _field32;
    char **_field33;
    long _field34;
    long _field35;
    int _field36;
    int _field37;
    int _field38;
    char *_field39;
    char *_field40;
    char *_field41;
    int *_field42;
    int _field43;
    int _field44;
    int *_field45;
    int _field46;
    struct _xmlParserInput *_field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    void *_field52;
    int _field53;
    int _field54;
    void *_field55;
    int _field56;
    int _field57;
    struct _xmlDict *_field58;
    char **_field59;
    int _field60;
    int _field61;
    char *_field62;
    char *_field63;
    char *_field64;
    int _field65;
    int _field66;
    int _field67;
    char **_field68;
    int *_field69;
    void **_field70;
    struct _xmlHashTable *_field71;
    struct _xmlHashTable *_field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    struct _xmlNode *_field77;
    int _field78;
    struct _xmlAttr *_field79;
    struct _xmlError {
        int _field1;
        int _field2;
        char *_field3;
        int _field4;
        char *_field5;
        int _field6;
        char *_field7;
        char *_field8;
        char *_field9;
        int _field10;
        int _field11;
        void *_field12;
        void *_field13;
    } _field80;
    int _field81;
    unsigned long _field82;
    unsigned long _field83;
    struct _xmlParserNodeInfo *_field84;
    int _field85;
    int _field86;
    struct _xmlParserNodeInfo *_field87;
};

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    void *_field6;
    void *_field7;
    void *_field8;
    void *_field9;
    void *_field10;
    void *_field11;
    void *_field12;
    void *_field13;
    void *_field14;
    void *_field15;
    void *_field16;
    void *_field17;
    void *_field18;
    void *_field19;
    void *_field20;
    void *_field21;
    void *_field22;
    void *_field23;
    void *_field24;
    void *_field25;
    void *_field26;
    void *_field27;
    unsigned int _field28;
    void *_field29;
    void *_field30;
    void *_field31;
    void *_field32;
};

struct _xmlValidState;

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct internal_state;

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct sockaddr;

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    int tv_sec;
    long tv_nsec;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    void *zalloc;
    void *zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    int _field5;
    id _field6;
    id _field7;
    id _field8;
} CDStruct_2b292156;

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    id _field1;
    void *_field2;
} CDStruct_c69bce23;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned int kind;
    NSObject *oldValue;
    NSObject *newValue;
    NSIndexSet *indexes;
    id extraData;
} CDStruct_26283fc3;

typedef struct {
    unsigned int _field1;
    id _field2[4];
} CDStruct_e8a1eea0;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

typedef struct {
    unsigned int :8;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :18;
    unsigned short _field1[8];
} CDStruct_5fe7aead;

typedef struct {
    float m11;
    float m12;
    float m21;
    float m22;
    float tX;
    float tY;
} CDStruct_a65eae4f;

typedef struct {
    int _field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
} CDStruct_60d14f2d;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

#pragma mark Typedef'd Unions

typedef union {
    id _field1;
    id _field2;
} CDUnion_a1fd0927;

#pragma mark -

/*
 * File: Foundation.framework/Foundation
 * UUID: 6D016F0E-F671-327E-85BA-B07944826F97
 * Arch: Intel 80x86 (i386)
 *       Current version: 993.0.0, Compatibility version: 300.0.0
 *
 *       Objective-C Garbage Collection: Unsupported
 */

@protocol NSCoding
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@protocol NSConnectionVersionedProtocol
- (id)keyedRootObject;
- (id)rootObject;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDecimalNumberBehaviors
- (id)exceptionDuringOperation:(SEL)arg1 error:(unsigned int)arg2 leftOperand:(id)arg3 rightOperand:(id)arg4;
- (short)scale;
- (unsigned int)roundingMode;
@end

@protocol NSDeserializerStream
- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (void)readData:(void *)arg1 length:(unsigned int)arg2;
- (unsigned int)readAlignedDataSize;
- (int)readInt;
@end

@protocol NSDiscardableContent
- (BOOL)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (BOOL)beginContentAccess;
@end

@protocol NSFastEnumeration
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
@end

@protocol NSFileAccessArbiter <NSObject>
- (void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (id)grantAccessClaim:(id)arg1 synchronouslyIfPossible:(BOOL)arg2;
@end

@protocol NSFilePresenter <NSObject>
@property(readonly) NSOperationQueue *presentedItemOperationQueue;
@property(readonly) NSURL *presentedItemURL;

@optional
@property(readonly) NSURL *primaryPresentedItemURL;
- (void)presentedSubitemAtURL:(id)arg1 didResolveConflictVersion:(id)arg2;
- (void)presentedSubitemAtURL:(id)arg1 didLoseVersion:(id)arg2;
- (void)presentedSubitemAtURL:(id)arg1 didGainVersion:(id)arg2;
- (void)presentedSubitemDidChangeAtURL:(id)arg1;
- (void)presentedSubitemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)presentedSubitemDidAppearAtURL:(id)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(id)arg1 completionHandler:(id)arg2;
- (void)presentedItemDidResolveConflictVersion:(id)arg1;
- (void)presentedItemDidLoseVersion:(id)arg1;
- (void)presentedItemDidGainVersion:(id)arg1;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(id)arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(id)arg1;
- (void)relinquishPresentedItemToWriter:(id)arg1;
- (void)relinquishPresentedItemToReader:(id)arg1;
@end

@protocol NSISConstraint <NSISVariableDelegate>
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)arg1;
@end

@protocol NSISRowBody <NSObject>
- (void)replaceVariable:(id)arg1 withExpression:(id)arg2 processVariableNewToReceiver:(id)arg3 processVariableDroppedFromReceiver:(void)arg4;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2 timesVariable:(id)arg3 processVariableNewToReceiver:(id)arg4 processVariableDroppedFromReceiver:(void)arg5;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2;
- (id)allVariables;
- (void)enumerateVariables:(id)arg1;
- (void)removeVariable:(id)arg1;
@end

@protocol NSISVariableDelegate <NSObject>
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
@end

@protocol NSKeyValueProxyCaching
+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;
@end

@protocol NSLocking
- (void)unlock;
- (void)lock;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (id)debugDescription;
@end

@protocol NSProgressPublisher <NSObject>
- (oneway void)appWithBundleID:(id)arg1 didAcknowledgeWithSuccess:(BOOL)arg2;
- (oneway void)pause;
- (oneway void)cancel;
- (oneway void)stopProvidingValues;
- (oneway void)startProvidingValuesWithInitialAcceptor:(id)arg1;
@end

@protocol NSProgressRegistrar
- (oneway void)removeSubscriberForID:(id)arg1;
- (oneway void)addSubscriber:(id)arg1 forID:(id)arg2 appBundleID:(id)arg3 fileURL:(id)arg4;
- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(BOOL)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 acknowledgementAppBundleIDs:(id)arg3 fileURL:(id)arg4;
@end

@protocol NSProgressSubscriber <NSObject>
- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(BOOL)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 withValues:(id)arg3 isOld:(BOOL)arg4;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol NSSerializerStream
- (void)copySerializationInto:(void *)arg1;
- (void)writeDelayedInt:(unsigned int)arg1 for:(int)arg2;
- (unsigned int)writeRoomForInt:(int *)arg1;
- (unsigned int)writeData:(const void *)arg1 length:(unsigned int)arg2;
- (unsigned int)writeAlignedDataSize:(unsigned int)arg1;
- (unsigned int)writeInt:(unsigned int)arg1;
@end

@protocol NSURLAuthenticationChallengeSender <NSObject>
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;

@optional
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
@end

@protocol NSURLConnectionRequired <NSObject>

@optional
- (void)_setShouldSkipCancelOnRelease:(_Bool)arg1;
- (void)_resumeLoading;
- (void)_suspendLoading;
- (void)_setDelegateQueue:(id)arg1;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)cancel;
- (void)start;
@end

@protocol NSURLDataDecoder
- (BOOL)isFinishedDecoding;
- (id)decodeData:(id)arg1;
@end

@protocol NSURLDownloadDecoder <NSObject>
+ (id)MIMEType;
+ (BOOL)canDecodeDownloadHeaderData:(id)arg1;
- (id)filenameWithOriginalFilename:(id)arg1;
- (id)fileAttributes;
- (BOOL)finishDownloadDecoding;
- (BOOL)decodeDownloadData:(id)arg1 dataForkData:(id *)arg2 resourceForkData:(id *)arg3;
@end

@protocol NSURLProtocolCFRunloopScheduling
- (void)unscheduleOnRunloop:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)scheduleOnRunloop:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
@end

@protocol NSURLProtocolClient <NSObject>
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(unsigned int)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
@end

@protocol NSXPCProxyCreating
- (id)remoteObjectProxyWithErrorHandler:(id)arg1;
- (id)remoteObjectProxy;
@end

@protocol SSDownloadHandlerDelegate <NSObject>

@optional
- (void)downloadHandler:(id)arg1 handleAuthenticationSession:(id)arg2;
- (BOOL)downloadHandler:(id)arg1 pauseSession:(id)arg2;
- (void)downloadHandler:(id)arg1 cancelSession:(id)arg2;
- (void)downloadHandler:(id)arg1 handleSession:(id)arg2;
- (void)downloadHandlerDidDisconnect:(id)arg1;
@end

@protocol SSDownloadManagerObserver <NSObject>

@optional
- (void)downloadManagerNetworkUsageDidChange:(id)arg1;
- (void)downloadManagerDownloadsDidChange:(id)arg1;
- (void)downloadManagerActiveDownloadsDidChange:(id)arg1;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
@end

@interface NSBigMutableString : NSMutableString
{
    struct {
        unsigned int isStorage:1;
        unsigned int isUnicode:1;
        unsigned int hasBOM:1;
        unsigned int swap:1;
        unsigned int immutable:1;
        unsigned int :27;
    } flags;
    unsigned int length;
    union {
        struct {
            NSData *data;
            char *dataBytes;
        } d;
        struct {
            struct __CFStorage *storage;
        } s;
    } contents;
}

+ (void)initialize;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_createSubstringWithRange:(struct _NSRange)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (id)_newBigSubstringWithRange:(struct _NSRange)arg1 wantsMutable:(BOOL)arg2 zone:(struct _NSZone *)arg3;
- (id)_newSmallImmutableSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (BOOL)_isCString;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (BOOL)_setData:(id)arg1 encoding:(unsigned int)arg2;
- (BOOL)_setStorage:(struct __CFStorage *)arg1 encoding:(unsigned int)arg2;
- (BOOL)_copyStorage:(struct __CFStorage **)arg1 encoding:(unsigned int *)arg2;
- (BOOL)_getData:(id *)arg1 encoding:(unsigned int *)arg2;
- (BOOL)_isMarkedAsImmutable;
- (void)_markAsImmutable;
- (void)_checkForInvalidMutationWithSelector:(SEL)arg1;
- (void)dealloc;
- (id)initWithStorage:(struct __CFStorage *)arg1 length:(unsigned int)arg2 isUnicode:(BOOL)arg3;
- (id)initWithString:(id)arg1;

@end

@interface NSAffineTransform : NSObject <NSCopying, NSCoding>
{
    CDStruct_a65eae4f _transformStruct;
}

+ (id)transform;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setTransformStruct:(CDStruct_a65eae4f)arg1;
- (CDStruct_a65eae4f)transformStruct;
- (struct CGSize)transformSize:(struct CGSize)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1;
- (void)prependTransform:(id)arg1;
- (void)appendTransform:(id)arg1;
- (void)invert;
- (void)scaleXBy:(float)arg1 yBy:(float)arg2;
- (void)scaleBy:(float)arg1;
- (void)rotateByRadians:(float)arg1;
- (void)rotateByDegrees:(float)arg1;
- (void)translateXBy:(float)arg1 yBy:(float)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTransform:(id)arg1;
- (id)init;

@end

@interface NSArchiver : NSCoder
{
    void *mdata;
    void *pointerTable;
    void *stringTable;
    void *ids;
    void *map;
    void *replacementTable;
    void *reserved;
}

+ (BOOL)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (id)classNameEncodedForTrueClassName:(id)arg1;
+ (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
+ (void)initialize;
- (id)classNameEncodedForTrueClassName:(id)arg1;
- (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned int)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (int)versionForClassName:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)data;
- (id)archiverData;
- (id)initForWritingWithMutableData:(id)arg1;

@end

@interface NSUnarchiver : NSCoder
{
    void *datax;
    unsigned int cursor;
    struct _NSZone *objectZone;
    unsigned int systemVersion;
    BOOL streamerVersion;
    BOOL swap;
    BOOL unused1;
    BOOL unused2;
    void *pointerTable;
    void *stringTable;
    id classVersions;
    int lastLabel;
    void *map;
    void *allUnarchivedObjects;
    id reserved;
}

+ (id)classNameDecodedForArchiveClassName:(id)arg1;
+ (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (void)initialize;
- (id)classNameDecodedForArchiveClassName:(id)arg1;
- (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
- (id)decodeDataObject;
- (id)decodeObject;
- (void *)decodeBytesWithReturnedLength:(unsigned int *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (id)data;
- (int)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;
- (BOOL)isAtEnd;
- (struct _NSZone *)objectZone;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (void)_setAllowedClasses:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1;

@end

@interface NSCFArray : NSMutableArray
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjects:(id *)arg2 count:(unsigned int)arg3;
- (void)sortUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)exchangeObjectAtIndex:(unsigned int)arg1 withObjectAtIndex:(unsigned int)arg2;
- (void)removeAllObjects;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (BOOL)containsObject:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)removeLastObject;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addObject:(id)arg1;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSAutoreleasePool : NSObject
{
    void *_token;
    void *_reserved3;
    void *_reserved2;
    void *_reserved;
}

+ (void)resetTotalAutoreleasedObjects;
+ (unsigned int)totalAutoreleasedObjects;
+ (void)setPoolCountHighWaterResolution:(unsigned int)arg1;
+ (unsigned int)poolCountHighWaterResolution;
+ (void)setPoolCountHighWaterMark:(unsigned int)arg1;
+ (unsigned int)poolCountHighWaterMark;
+ (void)enableFreedObjectCheck:(BOOL)arg1;
+ (void)enableRelease:(BOOL)arg1;
+ (BOOL)autoreleasePoolExists;
+ (unsigned int)topAutoreleasePoolCount;
+ (unsigned int)autoreleasedObjectCount;
+ (void)releaseAllPools;
+ (void)showPools;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)addObject:(id)arg1;
- (void)dealloc;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)retain;
- (void)addObject:(id)arg1;
- (id)initWithCapacity:(unsigned int)arg1;
- (oneway void)release;
- (void)drain;
- (id)init;

@end

@interface NSDebugString : NSString
{
    NSString *string;
}

- (void)finalize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (id)initWithString:(id)arg1;

@end

@interface NSBundle : NSObject
{
    unsigned int _flags;
    id _cfBundle;
    unsigned int _reserved2;
    Class _principalClass;
    id _tmp1;
    id _tmp2;
    void *_reserved1;
    void *_reserved0;
}

+ (id)preferredLocalizationsFromArray:(id)arg1 forPreferences:(id)arg2;
+ (id)preferredLocalizationsFromArray:(id)arg1;
+ (id)debugDescription;
+ (id)mainBundle;
+ (id)allFrameworks;
+ (id)allBundles;
+ (id)loadedBundles;
+ (id)bundleForClass:(Class)arg1;
+ (id)bundleWithIdentifier:(id)arg1;
+ (id)bundleWithURL:(id)arg1;
+ (id)bundleWithPath:(id)arg1;
+ (void)setSystemLanguages:(id)arg1;
+ (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 inBundleWithURL:(id)arg3;
+ (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
+ (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4;
+ (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
+ (id)findBundleResourceURLsCallingMethod:(SEL)arg1 baseURL:(id)arg2 passingTest:(id)arg3;
+ (id)findBundleResourceURLs:(id)arg1 callingMethod:(SEL)arg2 bundleURL:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned int)arg7;
+ (id)findBundleResources:(id)arg1 callingMethod:(SEL)arg2 directory:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned int)arg7;
- (id)executableArchitectures;
- (BOOL)preflightAndReturnError:(id *)arg1;
- (id)localizationsToSearch;
- (id)developmentLocalization;
- (id)preferredLocalizations;
- (id)localizations;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLanguage:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLanguage:(id)arg4;
- (id)_pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forRegion:(id)arg3;
- (id)_pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forRegion:(id)arg4;
- (id)_regionsArray;
- (id)description;
- (id)objectForInfoDictionaryKey:(id)arg1;
- (id)localizedInfoDictionary;
- (id)infoDictionary;
- (Class)principalClass;
- (Class)classNamed:(id)arg1;
- (id)defaultsDictionary;
- (void)invalidateResourceCache;
- (id)bundleLanguages;
- (unsigned int)versionNumber;
- (id)bundleIdentifier;
- (id)builtInPlugInsURL;
- (id)builtInPlugInsPath;
- (id)sharedSupportURL;
- (id)sharedSupportPath;
- (id)sharedFrameworksURL;
- (id)sharedFrameworksPath;
- (id)privateFrameworksURL;
- (id)privateFrameworksPath;
- (id)URLForAuxiliaryExecutable:(id)arg1;
- (id)pathForAuxiliaryExecutable:(id)arg1;
- (id)appStoreReceiptURL;
- (id)executableURL;
- (id)executablePath;
- (id)resourceURL;
- (id)resourcePath;
- (id)bundleURL;
- (id)bundlePath;
- (id)_compatibility_bundleURL;
- (id)_compatility_bundlePath;
- (void)_initInfoDictionary;
- (id)initWithPath:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (oneway void)release;
- (BOOL)isLoaded;
- (BOOL)unload;
- (BOOL)loadAndReturnError:(id *)arg1;
- (BOOL)load;
- (id)_computeExecutablePath;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 localization:(id)arg3;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLocalization:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)pathForResource:(id)arg1 ofType:(id)arg2;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 localization:(id)arg4;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLocalization:(id)arg4;
- (id)findBundleResourceURLsCallingMethod:(SEL)arg1 passingTest:(id)arg2;
- (struct __CFBundle *)_cfBundle;

@end

@interface NSAutoCalendar : NSCalendar
{
    NSCalendar *cal;
    NSLocale *changedLocale;
    NSTimeZone *changedTimeZone;
    unsigned int changedFirstWeekday;
    unsigned int changedMinimumDaysinFirstWeek;
    NSDate *changedGregorianStartDate;
}

+ (BOOL)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned int)arg4;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned int)arg3;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2;
- (id)dateFromComponents:(id)arg1;
- (BOOL)rangeOfUnit:(unsigned int)arg1 startDate:(id *)arg2 interval:(double *)arg3 forDate:(id)arg4;
- (unsigned int)ordinalityOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)rangeOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)maximumRangeOfUnit:(unsigned int)arg1;
- (struct _NSRange)minimumRangeOfUnit:(unsigned int)arg1;
- (id)gregorianStartDate;
- (void)setGregorianStartDate:(id)arg1;
- (unsigned int)minimumDaysInFirstWeek;
- (void)setMinimumDaysInFirstWeek:(unsigned int)arg1;
- (unsigned int)firstWeekday;
- (void)setFirstWeekday:(unsigned int)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)calendarIdentifier;
- (void)dealloc;
- (id)initWithCalendarIdentifier:(id)arg1;
- (id)init;
- (void)_update:(id)arg1;

@end

@interface NSCalendarDate : NSDate
{
    unsigned int refCount;
    double _timeIntervalSinceReferenceDate;
    NSTimeZone *_timeZone;
    NSString *_formatString;
    void *_reserved;
}

+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;
+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2;
+ (id)dateWithYear:(int)arg1 month:(unsigned int)arg2 day:(unsigned int)arg3 hour:(unsigned int)arg4 minute:(unsigned int)arg5 second:(unsigned int)arg6 timeZone:(id)arg7;
+ (id)calendarDate;
+ (id)distantPast;
+ (id)distantFuture;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;
- (id)descriptionWithCalendarFormat:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2;
- (id)descriptionWithCalendarFormat:(id)arg1;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)addTimeInterval:(double)arg1;
- (void)years:(int *)arg1 months:(int *)arg2 days:(int *)arg3 hours:(int *)arg4 minutes:(int *)arg5 seconds:(int *)arg6 sinceDate:(id)arg7;
- (id)dateByAddingYears:(int)arg1 months:(int)arg2 days:(int)arg3 hours:(int)arg4 minutes:(int)arg5 seconds:(int)arg6;
- (int)microsecondOfSecond;
- (int)secondOfMinute;
- (int)minuteOfHour;
- (int)hourOfDay;
- (int)dayOfYear;
- (int)dayOfWeek;
- (int)dayOfMonth;
- (int)monthOfYear;
- (int)yearOfCommonEra;
- (int)dayOfCommonEra;
- (void)setCalendarFormat:(id)arg1;
- (id)calendarFormat;
- (void)setTimeZone:(id)arg1;
- (id)timeZone;
- (id)timeZoneDetail;
- (double)timeIntervalSinceReferenceDate;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithYear:(int)arg1 month:(unsigned int)arg2 day:(unsigned int)arg3 hour:(unsigned int)arg4 minute:(unsigned int)arg5 second:(unsigned int)arg6 timeZone:(id)arg7;
- (id)init;
- (id)initWithTimeIntervalSinceReferenceDate:(double)arg1;
- (oneway void)release;
- (void)dealloc;
- (id)initWithString:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSCharacterSet : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange)arg1;
+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)newlineCharacterSet;
+ (id)symbolCharacterSet;
+ (id)illegalCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)letterCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)controlCharacterSet;
+ (void)initialize;
- (id)_retainedBitmapRepresentation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)bitmapRepresentation;
- (BOOL)isEqual:(id)arg1;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)longCharacterIsMember:(unsigned long)arg1;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (void)makeImmutable;
- (BOOL)isMutable;
- (unsigned int)count;
- (BOOL)isEmpty;
- (id)invertedSet;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)hash;
- (id)init;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (unsigned long)_cfTypeID;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSMutableCharacterSet : NSCharacterSet <NSCopying, NSMutableCopying>
{
}

+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)newlineCharacterSet;
+ (id)symbolCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)illegalCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)letterCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)controlCharacterSet;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isMutable;
- (void)invert;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSCFCharacterSet : NSMutableCharacterSet
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForKeyedArchiver;
- (Class)classForArchiver;
- (void)makeCharacterSetFast;
- (void)makeCharacterSetCompact;
- (void)invert;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (id)invertedSet;
- (id)bitmapRepresentation;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)longCharacterIsMember:(unsigned long)arg1;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface _NSPlaceholderCharacterSet : NSCharacterSet
{
    NSCharacterSet *_original;
    NSCharacterSet *_invertedSet;
    struct {
        unsigned int _inverted:1;
        unsigned int _builtin:1;
        unsigned int _isCF:1;
        unsigned int _reserved:29;
    } _flags;
}

- (id)replacementObjectForCoder:(id)arg1;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (void)dealloc;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;
- (id)autorelease;
- (id)invertedSet;
- (BOOL)isEmpty;
- (id)bitmapRepresentation;
- (BOOL)isEqual:(id)arg1;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)longCharacterIsMember:(unsigned long)arg1;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)_expandInverted;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (id)initWithSet:(id)arg1 options:(unsigned int)arg2;

@end

@interface NSPointerArray : NSObject <NSFastEnumeration, NSCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)pointerArrayWithPointerFunctions:(id)arg1;
+ (id)pointerArrayWithOptions:(unsigned int)arg1;
+ (id)weakObjectsPointerArray;
+ (id)strongObjectsPointerArray;
+ (id)pointerArrayWithWeakObjects;
+ (id)pointerArrayWithStrongObjects;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setCount:(unsigned int)arg1;
- (unsigned int)count;
- (void)compact;
- (void)replacePointerAtIndex:(unsigned int)arg1 withPointer:(void *)arg2;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned int)arg2;
- (void)removePointerAtIndex:(unsigned int)arg1;
- (void)addPointer:(void *)arg1;
- (void *)pointerAtIndex:(unsigned int)arg1;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)pointerFunctions;
- (id)initWithCoder:(id)arg1;
- (id)initWithPointerFunctions:(id)arg1;
- (id)initWithOptions:(unsigned int)arg1;
- (id)init;
- (id)allObjects;
- (id)mutableArray;

@end

@interface NSConcretePointerArray : NSPointerArray
{
    struct NSSlice slice;
    unsigned int count;
    unsigned int capacity;
    unsigned int options;
    unsigned int mutations;
    BOOL needsCompaction;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removePointer:(void *)arg1;
- (unsigned int)indexOfPointer:(void *)arg1;
- (void)setCount:(unsigned int)arg1;
- (unsigned int)count;
- (void)compact;
- (void)_markNeedsCompaction;
- (void)replacePointerAtIndex:(unsigned int)arg1 withPointer:(void *)arg2;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned int)arg2;
- (void)removePointerAtIndex:(unsigned int)arg1;
- (void)addPointer:(void *)arg1;
- (void *)pointerAtIndex:(unsigned int)arg1;
- (void)arrayGrow:(unsigned int)arg1;
- (id)pointerFunctions;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)finalize;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithPointerFunctions:(id)arg1;
- (id)initWithOptions:(unsigned int)arg1;
- (void)_initBlock;
- (id)init;

@end

@interface NSCoder : NSObject
{
}

- (void)_validateAllowedClass:(Class)arg1 forKey:(id)arg2 allowingInvocations:(BOOL)arg3;
- (void)validateAllowedClass:(Class)arg1 forKey:(id)arg2;
- (id)allowedClasses;
- (id)decodePropertyListForKey:(id)arg1;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (BOOL)requiresSecureCoding;
- (unsigned int)systemVersion;
- (struct _NSZone *)objectZone;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (void)setAllowedClasses:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned int *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long)decodeLongForKey:(id)arg1;
- (int)decodeIntegerForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (void)encodeBytes:(const char *)arg1 length:(unsigned int)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeLong:(long)arg1 forKey:(id)arg2;
- (void)encodeInteger:(int)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (BOOL)allowsKeyedCoding;
- (void *)decodeBytesWithReturnedLength:(unsigned int *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (id)decodeObject;
- (void)encodeBytes:(const void *)arg1 length:(unsigned int)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (int)versionForClassName:(id)arg1;
- (id)decodeDataObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (struct CGRect)decodeRect;
- (void)encodeRect:(struct CGRect)arg1;
- (struct CGSize)decodeSize;
- (void)encodeSize:(struct CGSize)arg1;
- (struct CGPoint)decodePoint;
- (void)encodePoint:(struct CGPoint)arg1;
- (struct CGRect)decodeRectForKey:(id)arg1;
- (struct CGSize)decodeSizeForKey:(id)arg1;
- (struct CGPoint)decodePointForKey:(id)arg1;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;

@end

@interface NSConstantString : NSSimpleCString
{
}

- (const char *)lossyCString;
- (const char *)cString;
- (void)finalize;
- (void)dealloc;
- (oneway void)release;
- (unsigned int)retainCount;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (id)retain;
- (id)autorelease;
- (unsigned int)hash;
- (int)compare:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (BOOL)isEqualToString:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (BOOL)canBeConvertedToEncoding:(unsigned int)arg1;
- (unsigned int)smallestEncoding;
- (unsigned int)fastestEncoding;
- (unsigned int)cStringLength;
- (unsigned int)length;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned int)arg2;

@end

@interface NSConcreteData : NSData
{
    unsigned int _isInline:1;
    unsigned int _shouldFree:1;
    unsigned int _hasVM:1;
    unsigned int _retainCount:29;
    unsigned int _length;
    unsigned int _capacity;
    void *_bytes;
    unsigned char _space[12];
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned int)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (id)init;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned int)arg2;
- (void)getBytes:(void *)arg1;
- (BOOL)_bytesAreVM;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const void *)bytes;
- (unsigned int)length;

@end

@interface NSConcreteMutableData : NSMutableData
{
    unsigned int _reserved:1;
    unsigned int _needToZero:1;
    unsigned int _hasVM:1;
    unsigned int _retainCount:29;
    unsigned int _length;
    unsigned int _capacity;
    void *_bytes;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned int)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)initWithLength:(unsigned int)arg1;
- (id)init;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)increaseLengthBy:(unsigned int)arg1;
- (void)appendData:(id)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned int)arg2;
- (BOOL)_bytesAreVM;
- (void)setLength:(unsigned int)arg1;
- (void)_freeBytes;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned int)length;

@end

@interface NSPurgeableData : NSMutableData <NSDiscardableContent>
{
    unsigned int _length;
    int _accessCount;
    unsigned char _private[32];
    void *_reserved;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(void *)arg1 length:(unsigned int)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)init;
- (BOOL)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)_destroyMemory;
- (void)endContentAccess;
- (BOOL)beginContentAccess;
- (id)description;
- (void)setLength:(unsigned int)arg1;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned int)length;

@end

@interface NSSubrangeData : NSData
{
    unsigned int _reserved:3;
    unsigned int _retainCount:29;
    struct _NSRange _range;
    NSData *_data;
}

- (void)dealloc;
- (id)initWithData:(id)arg1 range:(struct _NSRange)arg2;
- (id)init;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned int)arg2;
- (void)getBytes:(void *)arg1;
- (BOOL)_bytesAreVM;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const void *)bytes;
- (unsigned int)length;

@end

@interface NSCFData : NSMutableData
{
    unsigned char _cfinfo[4];
    long _length;
    long _capacity;
    struct __CFAllocator *_bytesDeallocator;
    char *_bytes;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setLength:(unsigned int)arg1;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned int)length;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSSharedData : NSData
{
    unsigned int _dataLength;
    unsigned int _memLength;
    char *_mem;
    BOOL _allowWrite;
}

+ (BOOL)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (BOOL)_allowsDirectEncoding;
- (void)finalize;
- (void)dealloc;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2 allowWrite:(BOOL)arg3;
- (const void *)bytes;
- (unsigned int)length;

@end

@interface NSCFDictionary : NSMutableDictionary
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)removeAllObjects;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setObservationInfo:(void *)arg1;

@end

@interface NSError : NSObject <NSCopying, NSSecureCoding>
{
    void *_reserved;
    int _code;
    NSString *_domain;
    NSDictionary *_userInfo;
}

+ (BOOL)supportsSecureCoding;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
+ (void)_registerFormatter:(void *)arg1 forErrorKey:(id)arg2 parameters:(const char *)arg3;
+ (void)_registerBuiltInFormatters;
+ (id)_web_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_web_errorWithDomain:(id)arg1 code:(int)arg2 failingURL:(id)arg3;
+ (void)_web_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
- (unsigned long)_cfTypeID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)helpAnchor;
- (id)recoveryAttempter;
- (id)localizedRecoveryOptions;
- (id)localizedRecoverySuggestion;
- (id)localizedFailureReason;
- (id)localizedDescription;
- (struct __CFString *)_retainedUserInfoCallBackForKey:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1 variant:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)userInfo;
- (id)domain;
- (int)code;
- (void)finalize;
- (void)dealloc;
- (id)initWithDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
- (id)_cocoaErrorString:(id)arg1;
- (id)_cocoaErrorString:(id)arg1 fromBundle:(id)arg2 tableName:(id)arg3;
- (id)_formatCocoaErrorString:(id)arg1 parameters:(const char *)arg2 applicableFormatters:(struct **)arg3 count:(int)arg4;
- (int)_collectApplicableUserInfoFormatters:(struct **)arg1 max:(int)arg2;
- (id)_web_failingURL;
- (id)_web_localizedDescription;
- (BOOL)_web_errorIsInDomain:(id)arg1;
- (id)_web_initWithDomain:(id)arg1 code:(int)arg2 failingURL:(id)arg3;
- (id)_web_initWithDomain_nowarn:(id)arg1 code:(int)arg2 URL:(id)arg3;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSCFError : NSError
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (Class)classForCoder;
- (id)userInfo;
- (id)domain;
- (int)code;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSAssertionHandler : NSObject
{
    void *_reserved;
}

+ (id)currentHandler;
- (void)handleFailureInFunction:(id)arg1 file:(id)arg2 lineNumber:(int)arg3 description:(id)arg4;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 file:(id)arg3 lineNumber:(int)arg4 description:(id)arg5;

@end

@interface NSFileHandle : NSObject <NSSecureCoding>
{
}

+ (id)fileHandleForUpdatingURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForWritingToURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForReadingFromURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForUpdatingAtPath:(id)arg1;
+ (id)fileHandleForWritingAtPath:(id)arg1;
+ (id)fileHandleForReadingAtPath:(id)arg1;
+ (BOOL)supportsSecureCoding;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)fileHandleWithNullDevice;
+ (id)fileHandleWithStandardError;
+ (id)fileHandleWithStandardOutput;
+ (id)fileHandleWithStandardInput;
+ (void)initialize;
- (void)setReadabilityHandler:(id)arg1;
- (id)readabilityHandler;
- (void)setWriteabilityHandler:(id)arg1;
- (id)writeabilityHandler;
- (int)fileDescriptor;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned int)arg1;
- (id)readDataToEndOfFile;
- (id)availableData;
- (id)initWithPath:(id)arg1 flags:(int)arg2 createMode:(int)arg3 error:(id *)arg4;
- (id)initWithPath:(id)arg1 flags:(int)arg2 createMode:(int)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;

@end

@interface NSNullFileHandle : NSFileHandle
{
}

- (id)readabilityHandler;
- (void)setReadabilityHandler:(id)arg1;
- (id)writeabilityHandler;
- (void)setWriteabilityHandler:(id)arg1;
- (int)fileDescriptor;
- (void)closeFile;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataOfLength:(unsigned int)arg1;
- (id)readDataToEndOfFile;
- (id)availableData;

@end

@interface NSConcreteFileHandle : NSFileHandle
{
    int _fd;
    void *_nativeHandle;
    NSObject<OS_dispatch_data> *_anchor;
    unsigned short _flags;
    NSObject<OS_dispatch_source> *_dsrc;
    char _padding[2];
    struct __CFRunLoopSource *_source;
    struct __CFRunLoop *_rl;
    unsigned short _activity;
    char _padding2[2];
    int _error;
    void *_resultBytes;
    unsigned long _resultLength;
    int _resultSocket;
    NSObject<OS_dispatch_queue> *_fhLock;
    long long _weakRefCount;
    id _readabilityHandler;
    id _writeabilityHandler;
    NSObject<OS_dispatch_source> *_readMonitoringSource;
    NSObject<OS_dispatch_source> *_writeMonitoringSource;
    NSObject<OS_dispatch_queue> *_readMonitoringQueue;
    NSObject<OS_dispatch_queue> *_writeMonitoringQueue;
}

- (void)setWriteabilityHandler:(id)arg1;
- (void)clearWriteabilityHandler;
- (id)writeabilityHandler;
- (void)setReadabilityHandler:(id)arg1;
- (void)clearReadabilityHandler;
- (id)readabilityHandler;
- (id)_monitor:(const struct dispatch_source_type_s *)arg1 source:(id)arg2 onQueue:(id)arg3;
- (void)waitForDataInBackgroundAndNotify;
- (void)waitForDataInBackgroundAndNotifyForModes:(id)arg1;
- (void)acceptConnectionInBackgroundAndNotify;
- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)arg1;
- (void)readToEndOfFileInBackgroundAndNotify;
- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)arg1;
- (void)readInBackgroundAndNotify;
- (void)readInBackgroundAndNotifyForModes:(id)arg1;
- (void)performActivity:(int)arg1 modes:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)setPort:(id)arg1;
- (id)port;
- (void)closeFile;
- (void)_cancelDispatchSources;
- (void)synchronizeFile;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (unsigned long long)seekToEndOfFile;
- (unsigned long long)offsetInFile;
- (void)writeData:(id)arg1;
- (id)readDataToEndOfFile;
- (id)readDataOfLength:(unsigned int)arg1;
- (unsigned int)readDataOfLength:(unsigned int)arg1 buffer:(char *)arg2;
- (id)availableData;
- (id)initWithPath:(id)arg1 flags:(int)arg2 createMode:(int)arg3;
- (id)initWithPath:(id)arg1 flags:(int)arg2 createMode:(int)arg3 error:(id *)arg4;
- (id)initWithFileDescriptor:(int)arg1;
- (id)initWithFileDescriptor:(int)arg1 closeOnDealloc:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (int)fileDescriptor;
- (void)lockedRelease;
- (id)lockedRetain;
- (oneway void)release;
- (id)retain;

@end

@interface NSPipe : NSObject
{
}

+ (id)pipe;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)fileHandleForWriting;
- (id)fileHandleForReading;
- (id)init;

@end

@interface NSConcretePipe : NSPipe
{
    NSFileHandle *_readHandle;
    NSFileHandle *_writeHandle;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)fileHandleForWriting;
- (id)fileHandleForReading;

@end

@interface _NSFileManagerInfo : NSObject
{
    id _delegate;
    id _handler;
}

@end

@interface NSFileAttributes : NSDictionary
{
    NSMutableDictionary *dict;
    struct stat statInfo;
    struct {
        char extensionHidden;
        NSDate *creationDate;
        struct _fields {
            unsigned int extensionHidden:1;
            unsigned int creationDate:1;
            unsigned int reserved:30;
        } validFields;
    } catInfo;
    NSDictionary *extendedAttrs;
}

+ (id)attributesWithStat:(struct stat *)arg1;
+ (id)_attributesAtURL:(id)arg1 partialReturn:(BOOL)arg2 filterResourceFork:(BOOL)arg3 error:(id *)arg4;
+ (id)_attributesAtPath:(id)arg1 partialReturn:(BOOL)arg2 filterResourceFork:(BOOL)arg3 error:(id *)arg4;
+ (id)attributesAtPath:(id)arg1 traverseLink:(BOOL)arg2;
- (BOOL)isDirectory;
- (unsigned int)fileSystemFileNumber;
- (int)fileSystemNumber;
- (unsigned int)fileGroupOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned int)fileOwnerAccountNumber;
- (id)fileOwnerAccountName;
- (unsigned int)filePosixPermissions;
- (id)fileType;
- (id)fileModificationDate;
- (unsigned long long)fileSize;
- (id)keyEnumerator;
- (unsigned int)count;
- (id)objectForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;

@end

@interface NSDirectoryEnumerator : NSEnumerator
{
}

- (void)skipDescendants;
- (void)skipDescendents;
- (unsigned int)level;
- (id)directoryAttributes;
- (id)fileAttributes;
- (id)nextObject;

@end

@interface NSAllDescendantPathsEnumerator : NSDirectoryEnumerator
{
    NSString *path;
    NSArray *contents;
    unsigned int idx;
    NSString *prepend;
    NSAllDescendantPathsEnumerator *under;
    NSFileAttributes *directoryAttributes;
    NSString *pathToLastReportedItem;
    unsigned int depth;
    BOOL cross;
    char _padding[3];
}

+ (id)newWithPath:(id)arg1 prepend:(id)arg2 attributes:(id)arg3 cross:(BOOL)arg4 depth:(unsigned int)arg5;
- (void)dealloc;
- (void)skipDescendants;
- (void)skipDescendents;
- (id)_under;
- (unsigned int)level;
- (id)currentSubdirectoryAttributes;
- (id)directoryAttributes;
- (id)fileAttributes;
- (id)nextObject;

@end

@interface NSURLDirectoryEnumerator : NSDirectoryEnumerator
{
    struct __CFURLEnumerator *_enumerator;
    id _errorHandler;
    BOOL shouldContinue;
}

@property(copy) id errorHandler; // @synthesize errorHandler=_errorHandler;
- (void)finalize;
- (void)dealloc;
- (id)directoryAttributes;
- (id)fileAttributes;
- (unsigned int)level;
- (void)skipDescendants;
- (void)skipDescendents;
- (id)nextObject;
- (id)initWithURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned int)arg3 errorHandler:(id)arg4;

@end

@interface NSFileManager : NSObject
{
}

+ (id)defaultManager;
- (void)_registerForUbiquityAccountChangeNotifications;
- (id)ubiquityIdentityToken;
- (BOOL)_processHasUbiquityContainerEntitlement;
- (id)URLForPublishingUbiquitousItemAtURL:(id)arg1 expirationDate:(id *)arg2 error:(id *)arg3;
- (id)URLForUbiquityContainerIdentifier:(id)arg1;
- (BOOL)evictUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)isUbiquitousItemAtURL:(id)arg1;
- (BOOL)setUbiquitous:(BOOL)arg1 itemAtURL:(id)arg2 destinationURL:(id)arg3 error:(id *)arg4;
- (BOOL)startDownloadingUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)replaceItemAtURL:(id)arg1 withItemAtURL:(id)arg2 backupItemName:(id)arg3 options:(unsigned int)arg4 resultingItemURL:(id *)arg5 error:(id *)arg6;
- (id)destinationOfSymbolicLinkAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)createSymbolicLinkAtURL:(id)arg1 withDestinationURL:(id)arg2 error:(id *)arg3;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 withDestinationPath:(id)arg2 error:(id *)arg3;
- (id)attributesOfFileSystemForPath:(id)arg1 error:(id *)arg2;
- (id)_attributesOfItemAtURL:(id)arg1 filterResourceFork:(BOOL)arg2 error:(id *)arg3;
- (id)_attributesOfItemAtPath:(id)arg1 filterResourceFork:(BOOL)arg2 error:(id *)arg3;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)subpathsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)contentsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)createDirectoryAtURL:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 error:(id *)arg4;
- (BOOL)createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 error:(id *)arg4;
- (BOOL)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (BOOL)trashItemAtURL:(id)arg1 resultingItemURL:(id *)arg2 error:(id *)arg3;
- (BOOL)removeItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)removeItemAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)filesystemItemRemoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
- (BOOL)filesystemItemRemoveOperation:(id)arg1 shouldRemoveItemAtPath:(id)arg2;
- (BOOL)linkItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)linkItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemLinkOperation:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)filesystemItemLinkOperation:(id)arg1 shouldLinkItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)moveItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemMoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)filesystemItemMoveOperation:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)copyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)copyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (BOOL)setExtendedAttribute:(id)arg1 forKey:(id)arg2 atPath:(id)arg3 error:(id *)arg4;
- (BOOL)removeExtendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (id)extendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (id)extendedAttributesAtPath:(id)arg1 error:(id *)arg2;
- (id)componentsToDisplayForPath:(id)arg1;
- (id)stringWithFileSystemRepresentation:(const char *)arg1 length:(unsigned int)arg2;
- (const char *)fileSystemRepresentationWithPath:(id)arg1;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned int)arg2 withPath:(id)arg3;
- (id)fileSystemAttributesAtPath:(id)arg1;
- (BOOL)contentsEqualAtPath:(id)arg1 andPath:(id)arg2;
- (id)contentsAtPath:(id)arg1;
- (BOOL)createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 pathContent:(id)arg2;
- (id)pathContentOfSymbolicLinkAtPath:(id)arg1;
- (BOOL)createDirectoryAtPath:(id)arg1 attributes:(id)arg2;
- (id)subpathsAtPath:(id)arg1;
- (id)enumeratorAtPath:(id)arg1;
- (id)directoryContentsAtPath:(id)arg1;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(int)arg3 keepExtension:(BOOL)arg4;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(int)arg3 keepExtension:(BOOL)arg4 error:(id *)arg5;
- (BOOL)removeFileAtPath:(id)arg1 handler:(id)arg2;
- (id)displayNameAtPath:(id)arg1;
- (BOOL)isDeletableFileAtPath:(id)arg1;
- (BOOL)isExecutableFileAtPath:(id)arg1;
- (BOOL)isWritableFileAtPath:(id)arg1;
- (BOOL)isReadableFileAtPath:(id)arg1;
- (BOOL)fileExistsAtPath:(id)arg1 isDirectory:(char *)arg2;
- (BOOL)fileExistsAtPath:(id)arg1;
- (BOOL)changeFileAttributes:(id)arg1 atPath:(id)arg2;
- (id)fileAttributesAtPath:(id)arg1 traverseLink:(BOOL)arg2;
- (BOOL)changeCurrentDirectoryPath:(id)arg1;
- (id)currentDirectoryPath;
- (BOOL)directoryCanBeCreatedAtPath:(id)arg1;
- (id)_displayPathForPath:(id)arg1;
- (id)URLForDirectory:(unsigned int)arg1 inDomain:(unsigned int)arg2 appropriateForURL:(id)arg3 create:(BOOL)arg4 error:(id *)arg5;
- (id)_URLForTrashingItemAtURL:(id)arg1 create:(BOOL)arg2 error:(id *)arg3;
- (id)_URLForReplacingItemAtURL:(id)arg1 error:(id *)arg2;
- (id)URLsForDirectory:(unsigned int)arg1 inDomains:(unsigned int)arg2;
- (id)contentsOfDirectoryAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned int)arg3 error:(id *)arg4;
- (id)enumeratorAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned int)arg3 errorHandler:(id)arg4;
- (id)mountedVolumeURLsIncludingResourceValuesForKeys:(id)arg1 options:(unsigned int)arg2;
- (id)_info;
- (id)_web_pathWithUniqueFilenameForPath:(id)arg1;
- (id)_web_visibleItemsInDirectoryAtPath:(id)arg1;
- (void)_web_backgroundRemoveLeftoverFiles:(id)arg1;
- (BOOL)_web_removeFileOnlyAtPath:(id)arg1;
- (void)_web_backgroundRemoveFileAtPath:(id)arg1;
- (void)_performRemoveFileAtPath:(id)arg1;
- (BOOL)_web_createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (BOOL)_web_changeFinderAttributes:(id)arg1 forFileAtPath:(id)arg2;
- (BOOL)_web_createFileAtPathWithIntermediateDirectories:(id)arg1 contents:(id)arg2 attributes:(id)arg3 directoryAttributes:(id)arg4;
- (BOOL)_web_createDirectoryAtPathWithIntermediateDirectories:(id)arg1 attributes:(id)arg2;
- (BOOL)_web_changeFileAttributes_nowarn:(id)arg1 atPath:(id)arg2;
- (void)_web_noteFileChangedAtPath_nowarn:(id)arg1;
- (BOOL)_web_createIntermediateDirectoriesForPath_nowarn:(id)arg1 attributes:(id)arg2;
- (id)_web_startupVolumeName_nowarn;
- (id)_web_carbonPathForPath_nowarn:(id)arg1;
- (BOOL)_web_fileExistsAtPath_nowarn:(id)arg1 isDirectory:(char *)arg2 traverseLink:(BOOL)arg3;

@end

@interface NSDirectoryTraversalOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSError *_error;
    void *_stream;
    int _optionsFlags;
    int _lastDeviceInode;
    BOOL _shouldFilterUnderbars;
    BOOL _stopped;
}

+ (id)directoryTraversalOperationAtPath:(id)arg1;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (void)main;
- (BOOL)_validatePaths:(id *)arg1;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (BOOL)shouldProceedAfterError:(id)arg1;
- (void)_setError:(id)arg1;
- (id)error;
- (BOOL)_shouldFilterEntry:(struct _ftsent *)arg1;
- (void)handlePathname:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithPath:(id)arg1;

@end

@interface NSDirectorySubpathsOperation : NSDirectoryTraversalOperation
{
    NSMutableArray *_subpaths;
}

+ (id)directorySubpathsOperationAtPath:(id)arg1;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (id)subpaths;
- (void)handlePathname:(id)arg1;

@end

@interface NSFilesystemItemCopyOperation : NSDirectoryTraversalOperation
{
    NSString *_destinationPath;
    NSMutableSet *_skippedPaths;
}

+ (id)filesystemItemCopyOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)dealloc;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (BOOL)_validatePaths:(id *)arg1;
- (BOOL)_shouldProceedAfterErrno:(int)arg1 copyingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (BOOL)shouldProceedAfterError:(id)arg1 copyingItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)_shouldCopyItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (BOOL)shouldCopyItemAtPath:(id)arg1 toPath:(id)arg2;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;

@end

@interface NSFilesystemItemLinkOperation : NSFilesystemItemCopyOperation
{
}

+ (id)filesystemItemLinkOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (BOOL)_validatePaths:(id *)arg1;
- (BOOL)_shouldLinkItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (BOOL)shouldLinkItemAtPath:(id)arg1 toPath:(id)arg2;
- (BOOL)_shouldProceedAfterErrno:(int)arg1 linkingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (BOOL)shouldProceedAfterError:(id)arg1 linkingItemAtPath:(id)arg2 toPath:(id)arg3;

@end

@interface NSFilesystemItemRemoveOperation : NSOperation
{
    id _delegate;
    NSString *_removePath;
    NSError *_error;
    void *_state;
    BOOL _filterUnderbars;
}

+ (id)filesystemItemRemoveOperationWithPath:(id)arg1;
+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
- (void)dealloc;
- (void)main;
- (id)initWithPath:(id)arg1;
- (BOOL)_filtersUnderbars;
- (void)_setFilterUnderbars:(BOOL)arg1;
- (void)_setError:(id)arg1;
- (id)error;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface NSFilesystemItemMoveOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSString *_destinationPath;
    NSError *_error;
}

+ (id)filesystemItemMoveOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
- (void)main;
- (void)_setError:(id)arg1;
- (id)error;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (void)dealloc;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;

@end

@interface NSHashTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)hashTableWithOptions:(unsigned int)arg1;
+ (id)weakObjectsHashTable;
+ (id)hashTableWithWeakObjects;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)setRepresentation;
- (id)mutableSet;
- (void)minusHashTable:(id)arg1;
- (void)unionHashTable:(id)arg1;
- (void)intersectHashTable:(id)arg1;
- (BOOL)isSubsetOfHashTable:(id)arg1;
- (BOOL)isEqualToHashTable:(id)arg1;
- (BOOL)intersectsHashTable:(id)arg1;
- (BOOL)containsObject:(id)arg1;
- (id)anyObject;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (id)member:(id)arg1;
- (id)pointerFunctions;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned int)arg2;
- (void)getKeys:(void **)arg1 count:(unsigned int *)arg2;
- (void)removeAllItems;
- (id)copy;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void *)getItem:(const void *)arg1;
- (unsigned int)weakCount;
- (id)allObjects;
- (unsigned int)count;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)objectEnumerator;
- (id)description;
- (id)init;
- (id)initWithOptions:(unsigned int)arg1 capacity:(unsigned int)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface NSConcreteHashTable : NSHashTable
{
    struct NSSlice slice;
    unsigned int count;
    unsigned int capacity;
    unsigned int options;
    unsigned int mutations;
}

- (id)objectEnumerator;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (void)getKeys:(void **)arg1 count:(unsigned int *)arg2;
- (id)allObjects;
- (void)removeAllItems;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertItem:(const void *)arg1;
- (void *)getItem:(const void *)arg1;
- (void)rehash;
- (void)assign:(unsigned int)arg1 key:(const void *)arg2;
- (void)hashGrow;
- (unsigned int)rehashAround:(unsigned int)arg1;
- (void)raiseCountUnderflowException;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (unsigned int)count;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)pointerFunctions;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned int)arg2;
- (id)initWithOptions:(unsigned int)arg1 capacity:(unsigned int)arg2;
- (id)copy;
- (id)init;
- (void)_initBlock;

@end

@interface NSClassicHashTable : NSHashTable
{
    struct {
        void *hash;
        void *isEqual;
        void *retain;
        void *release;
        void *describe;
    } _callBacks;
    struct __CFBasicHash *_ht;
}

- (void)getKeys:(const void **)arg1 count:(unsigned int *)arg2;
- (id)allObjects;
- (id)description;
- (unsigned int)count;
- (void)removeItem:(const void *)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertItem:(const void *)arg1;
- (void *)getItem:(const void *)arg1;
- (id)copy;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)removeAllItems;
- (void)dealloc;
- (id)init;

@end

@interface __NSHostExtraIvars : NSObject
{
    NSString *thingToResolve;
    int resolveType;
    NSObject<OS_dispatch_queue> *resolveQueue;
    NSObject<OS_dispatch_queue> *cacheAccessQueue;
    NSObject<OS_dispatch_queue> *callbackQueue;
    BOOL startedResolving;
}

@property BOOL startedResolving; // @synthesize startedResolving;
@property(readonly) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue;
@property(readonly) NSObject<OS_dispatch_queue> *cacheAccessQueue; // @synthesize cacheAccessQueue;
@property(readonly) NSObject<OS_dispatch_queue> *resolveQueue; // @synthesize resolveQueue;
@property(retain, nonatomic) NSString *thingToResolve; // @synthesize thingToResolve;
@property(nonatomic) int resolveType; // @synthesize resolveType;
- (void)dealloc;
- (void)finalize;
- (void)cleanup;
- (id)init;

@end

@interface NSHost : NSObject
{
    NSArray *names;
    NSArray *addresses;
    id reserved;
}

+ (void)flushHostCache;
+ (void)setHostCacheEnabled:(BOOL)arg1;
+ (BOOL)isHostCacheEnabled;
+ (id)hostWithAddress:(id)arg1;
+ (id)hostWithName:(id)arg1;
+ (id)currentHost;
@property(nonatomic) __NSHostExtraIvars *reserved; // @synthesize reserved;
- (void)dealloc;
- (id)description;
- (id)localizedName;
- (id)addresses;
- (id)address;
- (id)names;
- (id)name;
- (BOOL)isEqualToHost:(id)arg1;
- (void)resolveCurrentHostWithHandler:(id)arg1;
- (void)__resolveWithFlags:(int)arg1 resultArray:(id)arg2 handler:(id)arg3;
- (void)blockingResolveUntil:(int)arg1;
- (void)resolve:(id)arg1;
- (id)initToResolve:(id)arg1 as:(int)arg2;

@end

@interface NSIndexPath : NSObject <NSCopying, NSCoding>
{
    unsigned int *_indexes;
    unsigned int _hash;
    unsigned int _length;
    void *_reserved;
}

+ (id)indexPathWithIndexes:(const unsigned int *)arg1 length:(unsigned int)arg2;
+ (id)indexPathWithIndex:(unsigned int)arg1;
- (BOOL)isEqual:(id)arg1;
- (int)compare:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (void)getIndexes:(unsigned int *)arg1;
- (unsigned int)indexAtPosition:(unsigned int)arg1;
- (unsigned int)length;
- (id)indexPathByAddingIndex:(unsigned int)arg1;
- (id)indexPathByRemovingLastIndex;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithIndexes:(const unsigned int *)arg1 length:(unsigned int)arg2;
- (id)initWithIndex:(unsigned int)arg1;
- (id)init;

@end

@interface NSIndexSet : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    struct {
        unsigned int _isEmpty:1;
        unsigned int _hasSingleRange:1;
        unsigned int _cacheValid:1;
        unsigned int _reservedArrayBinderController:29;
    } _indexSetFlags;
    union {
        struct {
            struct _NSRange _range;
        } _singleRange;
        struct {
            void *_data;
            void *_reserved;
        } _multipleRanges;
    } _internal;
}

+ (id)indexSetWithIndexes:(const unsigned int *)arg1 count:(unsigned int)arg2;
+ (id)indexSetWithIndexesInRange:(struct _NSRange)arg1;
+ (id)indexSetWithIndex:(unsigned int)arg1;
+ (id)indexSet;
- (void)enumerateRangesInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 usingBlock:(id)arg3;
- (void)enumerateRangesWithOptions:(unsigned int)arg1 usingBlock:(id)arg2;
- (void)enumerateRangesUsingBlock:(id)arg1;
- (id)indexesInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 passingTest:(id)arg3;
- (id)indexesWithOptions:(unsigned int)arg1 passingTest:(id)arg2;
- (id)indexesPassingTest:(id)arg1;
- (unsigned int)indexInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 passingTest:(id)arg3;
- (unsigned int)indexWithOptions:(unsigned int)arg1 passingTest:(id)arg2;
- (unsigned int)indexPassingTest:(id)arg1;
- (void)enumerateIndexesInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 usingBlock:(id)arg3;
- (void)enumerateIndexesWithOptions:(unsigned int)arg1 usingBlock:(id)arg2;
- (void)enumerateIndexesUsingBlock:(id)arg1;
- (id)description;
- (id)_numberEnumerator;
- (BOOL)intersectsIndexesInRange:(struct _NSRange)arg1;
- (BOOL)containsIndexes:(id)arg1;
- (BOOL)containsIndexesInRange:(struct _NSRange)arg1;
- (BOOL)containsIndex:(unsigned int)arg1;
- (struct _NSRange)rangeAtIndex:(unsigned int)arg1;
- (unsigned int)rangeCount;
- (unsigned int)countOfIndexesInRange:(struct _NSRange)arg1;
- (unsigned int)__getContainmentVector:(out char *)arg1 inRange:(struct _NSRange)arg2;
- (unsigned int)getIndexes:(unsigned int *)arg1 maxCount:(unsigned int)arg2 inIndexRange:(struct _NSRange *)arg3;
- (unsigned int)indexLessThanOrEqualToIndex:(unsigned int)arg1;
- (unsigned int)indexGreaterThanOrEqualToIndex:(unsigned int)arg1;
- (unsigned int)indexLessThanIndex:(unsigned int)arg1;
- (unsigned int)indexGreaterThanIndex:(unsigned int)arg1;
- (unsigned int)_indexClosestToIndex:(unsigned int)arg1 equalAllowed:(BOOL)arg2 following:(BOOL)arg3;
- (unsigned int)lastIndex;
- (unsigned int)firstIndex;
- (unsigned int)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToIndexSet:(id)arg1;
- (unsigned int)hash;
- (unsigned int)_indexOfRangeAfterOrContainingIndex:(unsigned int)arg1;
- (unsigned int)_indexOfRangeBeforeOrContainingIndex:(unsigned int)arg1;
- (unsigned int)_indexOfRangeContainingIndex:(unsigned int)arg1;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithIndexes:(const unsigned int *)arg1 count:(unsigned int)arg2;
- (id)initWithIndexSet:(id)arg1;
- (void)_setContentToContentFromIndexSet:(id)arg1;
- (id)initWithIndexesInRange:(struct _NSRange)arg1;
- (id)initWithIndex:(unsigned int)arg1;
- (id)init;
- (id)_init;
- (id)replacementObjectForPortCoder:(id)arg1;
- (unsigned int)_indexAtIndex:(unsigned int)arg1;

@end

@interface NSMutableIndexSet : NSIndexSet
{
    void *_reserved;
}

- (void)shiftIndexesStartingAtIndex:(unsigned int)arg1 by:(int)arg2;
- (void)_removeAndDecrementBy:(unsigned int)arg1 startingAtIndex:(unsigned int)arg2;
- (void)_incrementBy:(unsigned int)arg1 startingAtIndex:(unsigned int)arg2;
- (void)removeAllIndexes;
- (void)removeIndex:(unsigned int)arg1;
- (void)removeIndexesInRange:(struct _NSRange)arg1;
- (void)addIndex:(unsigned int)arg1;
- (void)addIndexesInRange:(struct _NSRange)arg1;
- (void)_mergeOverlappingRangesStartingAtIndex:(unsigned int)arg1;
- (void)removeIndexesFromIndexSet:(id)arg1;
- (void)removeIndexes:(id)arg1;
- (void)addIndexes:(const unsigned int *)arg1 count:(unsigned int)arg2;
- (void)addIndexesFromIndexSet:(id)arg1;
- (void)addIndexes:(id)arg1;
- (void)_replaceRangeInArrayAtIndex:(unsigned int)arg1 withRange:(struct _NSRange)arg2;
- (void)_removeRangeInArrayAtIndex:(unsigned int)arg1;
- (void)_insertRange:(struct _NSRange)arg1 inArrayAtIndex:(unsigned int)arg2;
- (void)_addRangeToArray:(struct _NSRange)arg1;
- (void)_ensureRangeCapacity:(unsigned int)arg1;
- (Class)classForCoder;

@end

@interface _NSIndexSetEnumerator : NSEnumerator
{
    NSIndexSet *_indexSet;
    unsigned int _index;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithIndexSet:(id)arg1;

@end

@interface NSKeyValueNonmutatingCollectionMethodSet : NSObject
{
}

@end

@interface NSKeyValueMutatingCollectionMethodSet : NSObject
{
}

@end

@interface NSKeyValueNonmutatingArrayMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *objectAtIndex;
    struct objc_method *getObjectsRange;
    struct objc_method *objectsAtIndexes;
}

@end

@interface NSKeyValueMutatingArrayMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *insertObjectAtIndex;
    struct objc_method *removeObjectAtIndex;
    struct objc_method *replaceObjectAtIndex;
    struct objc_method *insertObjectsAtIndexes;
    struct objc_method *removeObjectsAtIndexes;
    struct objc_method *replaceObjectsAtIndexes;
}

@end

@interface NSKeyValueNonmutatingOrderedSetMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *objectAtIndex;
    struct objc_method *indexOfObject;
    struct objc_method *getObjectsRange;
    struct objc_method *objectsAtIndexes;
}

@end

@interface NSKeyValueMutatingOrderedSetMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *insertObjectAtIndex;
    struct objc_method *removeObjectAtIndex;
    struct objc_method *replaceObjectAtIndex;
    struct objc_method *insertObjectsAtIndexes;
    struct objc_method *removeObjectsAtIndexes;
    struct objc_method *replaceObjectsAtIndexes;
}

@end

@interface NSKeyValueNonmutatingSetMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *enumerator;
    struct objc_method *member;
}

@end

@interface NSKeyValueMutatingSetMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *addObject;
    struct objc_method *removeObject;
    struct objc_method *intersectSet;
    struct objc_method *minusSet;
    struct objc_method *unionSet;
    struct objc_method *setSet;
}

@end

@interface NSKeyValueAccessor : NSObject
{
    id _containerClassID;
    NSString *_key;
    void *_implementation;
    SEL _selector;
    unsigned int _extraArgumentCount;
    void *_extraArgument1;
    void *_extraArgument2;
    void *_extraArgument3;
}

- (void *)extraArgument2;
- (void *)extraArgument1;
- (unsigned int)extraArgumentCount;
- (id)key;
- (SEL)selector;
- (id)containerClassID;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 implementation:(void *)arg3 selector:(SEL)arg4 extraArguments:(void *[3])arg5 count:(unsigned int)arg6;

@end

@interface NSKeyValueGetter : NSKeyValueAccessor
{
}

@end

@interface NSKeyValueProxyGetter : NSKeyValueGetter
{
    Class _proxyClass;
}

- (Class)proxyClass;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 proxyClass:(Class)arg3;

@end

@interface NSKeyValueSetter : NSKeyValueAccessor
{
}

@end

@interface NSKeyValueMethodGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;

@end

@interface NSKeyValueCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_methods;
}

- (id)methods;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 methods:(id)arg3 proxyClass:(Class)arg4;

@end

@interface NSKeyValueIvarGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 ivar:(struct objc_ivar *)arg3;

@end

@interface NSKeyValueUndefinedGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueMethodSetter : NSKeyValueSetter
{
    struct objc_method *_method;
}

- (struct objc_method *)method;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;

@end

@interface NSKeyValueIvarSetter : NSKeyValueSetter
{
}

- (struct objc_ivar *)ivar;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4;

@end

@interface NSKeyValueUndefinedSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueFastMutableCollection1Getter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_nonmutatingMethods;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)mutatingMethods;
- (id)nonmutatingMethods;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 nonmutatingMethods:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;

@end

@interface NSKeyValueFastMutableCollection2Getter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)mutatingMethods;
- (id)baseGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;

@end

@interface NSKeyValueSlowMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueSetter *_baseSetter;
}

- (BOOL)treatNilValuesLikeEmptyCollections;
- (id)baseSetter;
- (id)baseGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 baseSetter:(id)arg4 containerIsa:(Class)arg5 proxyClass:(Class)arg6;

@end

@interface NSKeyValueIvarMutableCollectionGetter : NSKeyValueProxyGetter
{
    struct objc_ivar *_ivar;
}

- (struct objc_ivar *)ivar;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4 proxyClass:(Class)arg5;

@end

@interface NSKeyValueNotifyingMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueProxyGetter *_mutableCollectionGetter;
}

- (id)mutableCollectionGetter;
- (void)dealloc;
- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 mutableCollectionGetter:(id)arg3 proxyClass:(Class)arg4;

@end

@interface NSKeyValueSlowGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueSlowSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueArray : NSArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingArrayMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueContainerClass : NSObject
{
    Class _originalClass;
    void *_cachedObservationInfoImplementation;
    void *_cachedSetObservationInfoImplementation;
    BOOL _cachedSetObservationInfoTakesAnObject;
    struct {
        Class _field1;
        Class _field2;
        struct __CFSet *_field3;
        struct __CFDictionary *_field4;
    } *_notifyingInfo;
}

- (id)description;
- (id)initWithOriginalClass:(Class)arg1;

@end

@interface NSKeyValueMutableArray : NSMutableArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)setArray:(id)arg1;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

@interface NSKeyValueFastMutableArray : NSKeyValueMutableArray
{
    NSKeyValueMutatingArrayMethodSet *_mutatingMethods;
}

- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addObject:(id)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableArray1 : NSKeyValueFastMutableArray
{
    NSKeyValueNonmutatingArrayMethodSet *_nonmutatingMethods;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableArray2 : NSKeyValueFastMutableArray
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueSlowMutableArray : NSKeyValueMutableArray
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    BOOL _treatNilValuesLikeEmptyArrays;
    char _padding[3];
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)removeLastObject;
- (id)_createNonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (unsigned int)count;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueIvarMutableArray : NSKeyValueMutableArray
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueNotifyingMutableArray : NSKeyValueMutableArray
{
    NSMutableArray *_mutableArray;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)removeLastObject;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addObject:(id)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueNilSetEnumerator : NSEnumerator
{
}

- (id)nextObject;

@end

@interface NSKeyValueMutableSet : NSMutableSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

@interface NSKeyValueFastMutableSet : NSKeyValueMutableSet
{
    NSKeyValueMutatingSetMethodSet *_mutatingMethods;
}

- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableSet1 : NSKeyValueFastMutableSet
{
    NSKeyValueNonmutatingSetMethodSet *_nonmutatingMethods;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableSet2 : NSKeyValueFastMutableSet
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (id)_nonNilSetValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueSlowMutableSet : NSKeyValueMutableSet
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    BOOL _treatNilValuesLikeEmptySets;
    char _padding[3];
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)_createMutableSetValueWithSelector:(SEL)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (id)_setValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueIvarMutableSet : NSKeyValueMutableSet
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueNotifyingMutableSet : NSKeyValueMutableSet
{
    NSMutableSet *_mutableSet;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueShareableObservationInfoKey : NSObject
{
    BOOL _addingNotRemoving;
    NSKeyValueObservationInfo *_baseObservationInfo;
    NSObject *_additionObserver;
    NSKeyValueProperty *_additionProperty;
    unsigned int _additionOptions;
    void *_additionContext;
    NSObject *_additionOriginalObservable;
    NSKeyValueObservance *_removalObservance;
    unsigned int _removalObservanceIndex;
}

@end

@interface NSKeyValueShareableObservanceKey : NSKeyValueObservance
{
}

@end

@interface NSKeyValueObservance : NSWeakCallback
{
    int _retainCountMinusOne;
    NSObject *_observer;
    NSKeyValueProperty *_property;
    unsigned int _options;
    void *_context;
    NSObject *_originalObservable;
    unsigned int _cachedUnrotatedHashComponent;
    BOOL _cachedIsShareable;
    NSPointerArray *_observationInfos;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)_initWithObserver:(id)arg1 property:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4 originalObservable:(id)arg5;

@end

@interface NSKeyValueObservationInfo : NSObject
{
    int _retainCountMinusOne;
    NSArray *_observances;
    unsigned int _cachedHash;
    BOOL _cachedIsShareable;
    NSHashTable *_observables;
}

- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)_initWithObservances:(id *)arg1 count:(unsigned int)arg2;

@end

@interface NSKeyValueProperty : NSObject <NSCopying>
{
    NSKeyValueContainerClass *_containerClass;
    NSString *_keyPath;
}

- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (id)restOfKeyPathIfContainedByValueForKeyPath:(id)arg1;
- (id)dependentValueKeyOrKeysIsASet:(char *)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (Class)isaForAutonotifying;
- (id)keyPath;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

@interface NSKeyValueUnnestedProperty : NSKeyValueProperty
{
    NSArray *_affectingProperties;
    BOOL _cachedIsaForAutonotifyingIsValid;
    Class _cachedIsaForAutonotifying;
}

- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (Class)isaForAutonotifying;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 key:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

@interface NSKeyValueNestedProperty : NSKeyValueProperty
{
    NSString *_relationshipKey;
    NSString *_keyPathFromRelatedObject;
    NSKeyValueUnnestedProperty *_relationshipProperty;
    NSString *_keyPathWithoutOperatorComponents;
    BOOL _isAllowedToResultInForwarding;
    id _dependentValueKeyOrKeys;
    BOOL _dependentValueKeyOrKeysIsASet;
}

- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (id)dependentValueKeyOrKeysIsASet:(char *)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 firstDotIndex:(unsigned int)arg3 propertiesBeingInitialized:(struct __CFSet *)arg4;

@end

@interface NSKeyValueComputedProperty : NSKeyValueProperty
{
    NSString *_operationName;
    NSString *_operationArgumentKeyPath;
    NSKeyValueProperty *_operationArgumentProperty;
}

- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (Class)_isaForAutonotifying;
- (void)_addDependentValueKey:(id)arg1;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;

@end

@interface NSKeyValueProxyShareKey : NSObject <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

@interface NSKeyValueSet : NSSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingSetMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyedArchiver : NSCoder
{
    void *_stream;
    unsigned int _flags;
    id _delegate;
    id _containers;
    id _objects;
    id _objRefMap;
    id _replacementMap;
    id _classNameMap;
    id _conditionals;
    id _classes;
    unsigned int _genericKey;
    void *_cache;
    unsigned int _cacheSize;
    unsigned int _estimatedCount;
    void *_reserved2;
    id _visited;
    void *_reserved0;
}

+ (id)classNameForClass:(Class)arg1;
+ (void)setClassName:(id)arg1 forClass:(Class)arg2;
+ (BOOL)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (void)initialize;
- (void)setRequiresSecureCoding:(BOOL)arg1;
- (BOOL)requiresSecureCoding;
- (unsigned int)systemVersion;
- (int)versionForClassName:(id)arg1;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(const void *)arg3;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned int)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)_encodePropertyList:(id)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned int)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_encodeArrayOfObjects:(id)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)finishEncoding;
- (id)classNameForClass:(Class)arg1;
- (void)setClassName:(id)arg1 forClass:(Class)arg2;
- (unsigned int)outputFormat;
- (void)setOutputFormat:(unsigned int)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1;
- (id)_initWithOutput:(id)arg1;
- (id)init;
- (id)_blobForCurrentObject;
- (void)_setBlobForCurrentObject:(id)arg1;

@end

@interface _NSKeyedUnarchiverHelper : NSObject
{
    NSArray *_white;
    unsigned int _lastRef;
    NSMutableArray *_allowedClasses;
}

- (BOOL)classNameAllowed:(Class)arg1;
- (void)setAllowedClassNames:(id)arg1;
- (id)allowedClassNames;
- (void)dealloc;
- (id)init;

@end

@interface NSKeyedUnarchiver : NSCoder
{
    id _delegate;
    unsigned int _flags;
    id _objRefMap;
    id _replacementMap;
    id _nameClassMap;
    id _tmpRefObjMap;
    id _refObjMap;
    int _genericKey;
    id _data;
    void *_offsetData;
    id _containers;
    id _objects;
    const char *_bytes;
    unsigned long long _len;
    id _helper;
    void *_reserved0;
}

+ (Class)classForClassName:(id)arg1;
+ (void)setClass:(Class)arg1 forClassName:(id)arg2;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (void)initialize;
- (unsigned int)systemVersion;
- (int)versionForClassName:(id)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned int)arg2 at:(void *)arg3;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void *)decodeBytesWithReturnedLength:(unsigned int *)arg1;
- (id)decodeDataObject;
- (id)decodeObject;
- (unsigned int)_currentUniqueIdentifier;
- (id)_decodePropertyListForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned int *)arg2;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (id)_decodeArrayOfObjectsForKey:(id)arg1;
- (void)setRequiresSecureCoding:(BOOL)arg1;
- (BOOL)requiresSecureCoding;
- (id)allowedClasses;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (void)_replaceObject:(id)arg1 withObject:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)_temporaryMapReplaceObject:(id)arg1 withObject:(id)arg2;
- (void)finishDecoding;
- (void)setAllowedClasses:(id)arg1;
- (void)_setAllowedClassNames:(id)arg1;
- (id)_allowedClassNames;
- (Class)classForClassName:(id)arg1;
- (void)setClass:(Class)arg1 forClassName:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initWithStream:(id)arg1;
- (id)initForReadingWithData:(id)arg1;
- (id)_initWithStream:(struct __CFReadStream *)arg1 data:(id)arg2 topDict:(struct __CFDictionary *)arg3;
- (id)init;
- (id)_blobForCurrentObject;

@end

@interface _NSKeyedCoderOldStyleArray : NSObject
{
    void *_addr;
    unsigned int _count;
    unsigned int _size;
    BOOL _type;
    BOOL _decoded;
    char _padding[2];
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)fillObjCType:(BOOL)arg1 count:(unsigned int)arg2 at:(void *)arg3;
- (void)finalize;
- (void)dealloc;
- (id)initWithObjCType:(BOOL)arg1 count:(unsigned int)arg2 at:(const void *)arg3;

@end

@interface NSAutoLocale : NSLocale
{
    NSLocale *loc;
}

+ (BOOL)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)_prefs;
- (id)displayNameForKey:(id)arg1 value:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithLocaleIdentifier:(id)arg1;
- (id)init;
- (void)_update:(id)arg1;

@end

@interface NSCondition : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)broadcast;
- (void)signal;
- (BOOL)waitUntilDate:(id)arg1;
- (void)wait;
- (void)unlock;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)unlock;
- (BOOL)tryLock;
- (BOOL)lockBeforeDate:(id)arg1;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSConditionLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)unlockWithCondition:(int)arg1;
- (void)unlock;
- (BOOL)tryLockWhenCondition:(int)arg1;
- (BOOL)tryLock;
- (BOOL)lockWhenCondition:(int)arg1 beforeDate:(id)arg2;
- (void)lockWhenCondition:(int)arg1;
- (BOOL)lockBeforeDate:(id)arg1;
- (void)lock;
- (int)condition;
- (void)finalize;
- (void)dealloc;
- (id)initWithCondition:(int)arg1;
- (id)init;

@end

@interface NSRecursiveLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isLocking;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)unlock;
- (BOOL)tryLock;
- (BOOL)lockBeforeDate:(id)arg1;
- (void)lock;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSMultiReadUniWriteLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)description;
- (void)unlock;
- (void)lock;
- (BOOL)lockForWritingBeforeDate:(id)arg1;
- (BOOL)tryLockForWriting;
- (void)lockForWriting;
- (BOOL)lockForReadingBeforeDate:(id)arg1;
- (BOOL)tryLockForReading;
- (void)lockForReading;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSMapTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)weakToWeakObjectsMapTable;
+ (id)strongToWeakObjectsMapTable;
+ (id)weakToStrongObjectsMapTable;
+ (id)strongToStrongObjectsMapTable;
+ (id)mapTableWithWeakToWeakObjects;
+ (id)mapTableWithStrongToWeakObjects;
+ (id)mapTableWithWeakToStrongObjects;
+ (id)mapTableWithStrongToStrongObjects;
+ (id)mapTableWithKeyOptions:(unsigned int)arg1 valueOptions:(unsigned int)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentation;
- (id)mutableDictionary;
- (void)removeAllObjects;
- (unsigned int)getKeys:(const void **)arg1 values:(const void **)arg2;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (id)enumerator;
- (void)removeAllItems;
- (id)allValues;
- (id)allKeys;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKey:(const void *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)valuePointerFunctions;
- (id)keyPointerFunctions;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)copy;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (unsigned int)count;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)init;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned int)arg3;
- (id)initWithKeyOptions:(unsigned int)arg1 valueOptions:(unsigned int)arg2 capacity:(unsigned int)arg3;
- (id)initWithCoder:(id)arg1;

@end

@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;
    struct NSSlice values;
    unsigned int count;
    unsigned int capacity;
    unsigned int keyOptions;
    unsigned int valueOptions;
    unsigned int mutations;
    int growLock;
    _Bool shouldRehash;
}

- (id)allValues;
- (id)allKeys;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (unsigned int)getKeys:(const void **)arg1 values:(const void **)arg2;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (void)removeAllItems;
- (void)removeObjectForKey:(id)arg1;
- (void)rehash;
- (unsigned int)rehashAround:(unsigned int)arg1;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)assign:(unsigned int)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(BOOL)arg4;
- (void)grow;
- (id)dump;
- (BOOL)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned int)arg3;
- (unsigned int)count;
- (id)valuePointerFunctions;
- (id)keyPointerFunctions;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned int)arg3;
- (id)initWithKeyOptions:(unsigned int)arg1 valueOptions:(unsigned int)arg2 capacity:(unsigned int)arg3;
- (id)copy;
- (void)_setBackingStore;
- (void)_initBlock;
- (void)zeroPairedEntries;
- (void)checkCount:(const char *)arg1;
- (unsigned int)realCount;
- (void)raiseCountUnderflowException;
- (id)init;

@end

@interface NSConcreteMapTableValueEnumerator : NSEnumerator
{
    NSConcreteMapTable *mapTable;
    unsigned int counter;
}

+ (id)enumeratorWithMapTable:(id)arg1;
- (void)dealloc;
- (id)nextObject;

@end

@interface NSClassicMapTable : NSMapTable
{
    struct {
        void *hash;
        void *isEqual;
        void *retain;
        void *release;
        void *describe;
        void *notAKeyMarker;
    } _keyCallBacks;
    struct {
        void *retain;
        void *release;
        void *describe;
    } _valueCallBacks;
    struct __CFBasicHash *_ht;
}

- (unsigned int)getKeys:(const void **)arg1 values:(const void **)arg2;
- (id)allValues;
- (id)allKeys;
- (id)description;
- (unsigned int)count;
- (void)removeObjectForKey:(id)arg1;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (id)copy;
- (BOOL)isEqual:(id)arg1;
- (void)removeAllItems;
- (void)dealloc;
- (id)init;

@end

@interface NSMutableString : NSString
{
}

+ (id)stringWithCapacity:(unsigned int)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)initWithCapacity:(unsigned int)arg1;
- (Class)classForCoder;
- (unsigned int)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;
- (void)setString:(id)arg1;
- (void)appendFormat:(id)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCharacters:(const unsigned short *)arg2 length:(unsigned int)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCString:(const char *)arg2 length:(unsigned int)arg3;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendString:(id)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned int)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)_cfNormalize:(long)arg1;
- (void)_cfTrimWS;
- (void)_trimWithCharacterSet:(id)arg1;
- (void)_cfTrim:(struct __CFString *)arg1;
- (void)_cfPad:(struct __CFString *)arg1 length:(unsigned int)arg2 padIndex:(unsigned int)arg3;
- (void)_cfCapitalize:(const void *)arg1;
- (void)_cfUppercase:(const void *)arg1;
- (void)_cfLowercase:(const void *)arg1;
- (void)_cfAppendCString:(const char *)arg1 length:(int)arg2;
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
- (id)replacementObjectForPortCoder:(id)arg1;
- (unsigned int)_replaceOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;

@end

@interface NSCheapMutableString : NSMutableString
{
    union {
        unsigned short *fat;
        char *thin;
    } contents;
    struct {
        unsigned int isFat:1;
        unsigned int freeWhenDone:1;
        unsigned int refs:30;
    } flags;
    unsigned int numCharacters;
    void *_reserved;
}

- (unsigned int)cStringLength;
- (const char *)lossyCString;
- (const char *)cString;
- (unsigned int)fastestEncoding;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned int)arg2 usedLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 options:(unsigned int)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned int)length;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (void)finalize;
- (void)dealloc;
- (void)setContentsNoCopy:(void *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3 isUnicode:(BOOL)arg4;

@end

@interface NSPlaceholderMutableString : NSMutableString
{
}

- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(char *)arg3;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned int)arg2;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;
- (id)autorelease;

@end

@interface NSNotification : NSObject <NSCopying, NSCoding>
{
}

+ (id)notificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
+ (id)notificationWithName:(id)arg1 object:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)init;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (id)userInfo;
- (id)object;
- (id)name;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSConcreteNotification : NSNotification
{
    NSString *name;
    id object;
    NSDictionary *userInfo;
    BOOL dyingObject;
}

+ (id)newTempNotificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)recycle;
- (void)dealloc;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)userInfo;
- (id)object;
- (id)name;

@end

@interface _NSLocalNotificationCenter : NSDistributedNotificationCenter
{
}

@end

@interface __NSObserver : NSObject
{
    NSNotificationCenter *nc;
    NSOperationQueue *queue;
    NSString *name;
    id object;
    id block;
}

+ (void)forgetObserver:(id)arg1;
+ (BOOL)isAnObserver:(id)arg1;
+ (id)observerWithCenter:(id)arg1 queue:(id)arg2 name:(id)arg3 object:(id)arg4 block:(id)arg5;
- (void)_doit:(id)arg1;
- (id)object;
- (id)name;
- (void)dealloc;

@end

@interface NSNotificationCenter : NSObject
{
    void *_impl;
    void *_callback;
    void *_pad[11];
}

+ (id)defaultCenter;
- (BOOL)isEmpty;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(id)arg4;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotification:(id)arg1;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (id)description;
- (void)dealloc;
- (void)finalize;
- (id)init;

@end

@interface NSDistributedNotificationCenter : NSNotificationCenter
{
}

+ (id)notificationCenterForType:(id)arg1;
+ (id)defaultCenter;
- (BOOL)suspended;
- (void)setSuspended:(BOOL)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 deliverImmediately:(BOOL)arg4;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 options:(unsigned int)arg4;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(id)arg4;
- (id)addObserverForName:(id)arg1 object:(id)arg2 suspensionBehavior:(unsigned int)arg3 queue:(id)arg4 usingBlock:(id)arg5;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4 suspensionBehavior:(unsigned int)arg5;
- (id)init;

@end

@interface NSNotificationQueue : NSObject
{
    id _notificationCenter;
    id _asapQueue;
    id _asapObs;
    id _idleQueue;
    id _idleObs;
}

+ (id)defaultQueue;
- (void)dequeueNotificationsMatching:(id)arg1 coalesceMask:(unsigned int)arg2;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned int)arg2 coalesceMask:(unsigned int)arg3 forModes:(id)arg4;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned int)arg2;
- (void)_flushNotificationQueue;
- (void)dealloc;
- (id)initWithNotificationCenter:(id)arg1;
- (id)init;

@end

@interface NSWeakCallback : NSObject
{
    id _callback_next;
    void *_callback_function;
    id _callback_target;
}

@end

@interface NSAutoContentAccessingProxy : NSProxy
{
    id _target;
}

+ (id)proxyWithTarget:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface __NSOperationInternal : NSObject
{
    unsigned char __pad1[16];
    NSOperation *__outerOp;
    NSOperation *__prevOp;
    NSOperation *__nextOp;
    NSOperation *__nextPriOp;
    NSOperationQueue *__queue;
    id __dependencies;
    id __down_dependencies;
    long long __unfinished_deps;
    id __completion;
    void *__obsInfo;
    void *__implicitObsInfo;
    long long __seqno;
    double __thread_prio;
    int __RC;
    int __state;
    BOOL __prio;
    unsigned char __cached_isReady;
    unsigned char __isCancelled;
    unsigned char __isBarrier;
    unsigned char __pad2[4];
    struct _opaque_pthread_mutex_t {
        long __sig;
        char __opaque[40];
    } __wait_mutex;
    struct _opaque_pthread_cond_t {
        long __sig;
        char __opaque[24];
    } __wait_cond;
    unsigned char __pad3[40];
}

+ (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 changeKind:(unsigned int)arg3 oldValue:(id)arg4 newValue:(id)arg5 indexes:(id)arg6 context:(void *)arg7;
- (id)__;
- (void)start;
- (id)dependencies;
- (void)removeDependency:(id)arg1;
- (void)addDependency:(id)arg1;
- (void)waitUntilFinishedOrTimeout:(double)arg1;
- (void)waitUntilFinished;
- (void)setCompletionBlock:(id)arg1;
- (id)completionBlock;
- (void)setThreadPriority:(double)arg1;
- (double)threadPriority;
- (void)setQueuePriority:(int)arg1;
- (int)queuePriority;
- (BOOL)isReady;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (void)cancel;
- (BOOL)isCancelled;
- (void)finalize;
- (void)dealloc;
- (void)invalidate;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)init;

@end

@interface NSOperation : NSObject
{
    id _private;
    int _private1;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
- (id)__;
- (void)start;
- (void)main;
- (id)dependencies;
- (void)removeDependency:(id)arg1;
- (void)addDependency:(id)arg1;
- (void)waitUntilFinishedOrTimeout:(double)arg1;
- (void)waitUntilFinished;
- (void)setCompletionBlock:(id)arg1;
- (id)completionBlock;
- (void)setThreadPriority:(double)arg1;
- (double)threadPriority;
- (void)setQueuePriority:(int)arg1;
- (int)queuePriority;
- (BOOL)isReady;
- (BOOL)isAsynchronous;
- (BOOL)isConcurrent;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (void)cancel;
- (BOOL)isCancelled;
- (void)finalize;
- (void)dealloc;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)init;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
- (id)_implicitObservationInfo;

@end

@interface NSBlockOperation : NSOperation
{
    id _private2;
    void *_reserved2;
}

+ (id)blockOperationWithBlock:(id)arg1;
- (id)executionBlocks;
- (void)main;
- (void)addExecutionBlock:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NSInvocationOperation : NSOperation
{
    id _inv;
    id _exception;
    void *_reserved2;
}

- (id)result;
- (void)main;
- (id)invocation;
- (void)dealloc;
- (id)initWithInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)init;

@end

@interface __NSOperationQueueInternal : NSObject
{
    int __queueLock;
    NSOperation *__firstOperation;
    NSOperation *__lastOperation;
    NSOperation *__pendingFirstOperation;
    NSOperation *__pendingLastOperation;
    NSOperation *__firstPriOperation[5];
    NSOperation *__lastPriOperation[5];
    NSObject<OS_dispatch_queue> *__pending_barrier;
    int __maxNumOps;
    int __actualMaxNumOps;
    int __numExecOps;
    unsigned int __poke;
    unsigned char __mainQ;
    unsigned char __suspended;
    unsigned char __overcommit;
    unsigned char __pad1[1];
    char __nameBuffer[160];
}

- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSOperationQueue : NSObject
{
    id _private;
    void *_reserved;
}

+ (id)mainQueue;
+ (id)currentQueue;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)__;
- (void)__:(id)arg1;
- (id)description;
- (void)waitUntilAllOperationsAreFinished;
- (void)cancelAllOperations;
- (void)setName:(id)arg1;
- (id)name;
- (void)setOvercommitsOperations:(BOOL)arg1;
- (BOOL)overcommitsOperations;
- (void)setSuspended:(BOOL)arg1;
- (BOOL)isSuspended;
- (void)setMaxConcurrentOperationCount:(int)arg1;
- (int)maxConcurrentOperationCount;
- (unsigned int)operationCount;
- (id)operations;
- (void)addOperationWithBlock:(id)arg1;
- (void)addOperations:(id)arg1 waitUntilFinished:(BOOL)arg2;
- (void)addOperation:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NSPathStore2 : NSString
{
    unsigned int _lengthAndRefCount;
    unsigned short _characters[0];
}

+ (id)pathWithComponents:(id)arg1;
+ (id)pathStoreWithCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
- (id)stringByResolvingSymlinksInPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(BOOL)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByStandardizingPathUsingCache:(BOOL)arg1;
- (id)stringByExpandingTildeInPath;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByDeletingPathExtension;
- (id)pathExtension;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)stringByDeletingLastPathComponent;
- (id)lastPathComponent;
- (BOOL)isAbsolutePath;
- (id)pathComponents;
- (BOOL)isEqualToString:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;

@end

@interface NSSearchPathEnumerator : NSEnumerator
{
    long state;
    unsigned int directory;
    unsigned int domainMask;
}

- (id)nextObject;
- (id)initWithDirectory:(unsigned int)arg1 domains:(unsigned int)arg2;

@end

@interface NSConcretePointerFunctions : NSPointerFunctions
{
    struct NSSlice slice;
}

+ (_Bool)initializeSlice:(struct NSSlice *)arg1 withOptions:(unsigned int)arg2;
+ (void)initializeBackingStore:(struct NSSlice *)arg1 sentinel:(BOOL)arg2 compactable:(BOOL)arg3;
- (BOOL)usesWeakReadAndWriteBarriers;
- (BOOL)usesStrongWriteBarrier;
- (void *)relinquishFunction;
- (void *)acquireFunction;
- (void *)descriptionFunction;
- (void *)isEqualFunction;
- (void *)hashFunction;
- (void *)sizeFunction;
- (void)setUsesWeakReadAndWriteBarriers:(BOOL)arg1;
- (void)setUsesStrongWriteBarrier:(BOOL)arg1;
- (void)setRelinquishFunction:(void *)arg1;
- (void)setAcquireFunction:(void *)arg1;
- (void)setDescriptionFunction:(void *)arg1;
- (void)setIsEqualFunction:(void *)arg1;
- (void)setHashFunction:(void *)arg1;
- (void)setSizeFunction:(void *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOptions:(unsigned int)arg1;

@end

@interface NSPointerFunctions : NSObject <NSCopying>
{
}

+ (id)pointerFunctionsWithOptions:(unsigned int)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property BOOL usesWeakReadAndWriteBarriers;
@property BOOL usesStrongWriteBarrier;
@property void *relinquishFunction;
@property void *acquireFunction;
@property void *descriptionFunction;
@property void *isEqualFunction;
@property void *hashFunction;
@property void *sizeFunction;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOptions:(unsigned int)arg1;

@end

@interface NSPort : NSObject <NSCopying, NSCoding>
{
}

+ (id)portWithMachPort:(unsigned int)arg1;
+ (id)port;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)removeConnection:(id)arg1 fromRunLoop:(id)arg2 forMode:(id)arg3;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned int)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned int)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (Class)classForPortCoder;
- (id)replacementObjectForCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)reservedSpaceLength;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (unsigned int)machPort;
- (BOOL)isValid;
- (void)invalidate;
- (id)initWithMachPort:(unsigned int)arg1;

@end

@interface NSMachPort : NSPort
{
    id _delegate;
    unsigned int _flags;
    unsigned int _machPort;
    unsigned int _reserved;
}

+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned int)arg7;
+ (void)parseMachMessage:(void *)arg1 localPort:(id *)arg2 remotePort:(id *)arg3 msgid:(unsigned int *)arg4 components:(id *)arg5;
+ (void)_fixNSMachPortLeak;
+ (id)portWithMachPort:(unsigned int)arg1 options:(unsigned int)arg2;
+ (id)portWithMachPort:(unsigned int)arg1;
+ (id)port;
+ (void)resetAllPorts;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithMachPort:(unsigned int)arg1;
- (id)initWithMachPort:(unsigned int)arg1 options:(unsigned int)arg2;
- (void)handlePortMessage:(id)arg1;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned int)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned int)arg4;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (unsigned int)machPort;
- (void)invalidate;
- (BOOL)isValid;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (unsigned int)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (unsigned long)_cfTypeID;

@end

@interface NSMessagePort : NSPort
{
    void *_port;
    id _delegate;
}

+ (void)_fixNSMessagePortLeak;
+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned int)arg7;
- (void)finalize;
- (void)dealloc;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (id)init;
- (id)initWithRemoteName:(id)arg1;
- (id)initWithName:(id)arg1;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned int)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned int)arg4;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (BOOL)setName:(id)arg1;
- (id)name;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)invalidate;
- (BOOL)isValid;

@end

@interface NSCFType : NSObject
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSProcessInfo : NSObject
{
    NSDictionary *environment;
    NSArray *arguments;
    NSString *hostName;
    NSString *name;
    int automaticTerminationOptOutCounter;
}

+ (id)processInfo;
- (BOOL)automaticTerminationSupportEnabled;
- (void)setAutomaticTerminationSupportEnabled:(BOOL)arg1;
- (void)enableAutomaticTermination:(id)arg1;
- (void)disableAutomaticTermination:(id)arg1;
- (int)_suddenTerminationDisablingCount;
- (void)_exitWhenSuddenTerminationEnabledWithStatus:(int)arg1;
- (void)_exitIfSuddenTerminationEnabledWithStatus:(int)arg1;
- (void)enableSuddenTermination;
- (void)disableSuddenTermination;
- (double)systemUptime;
- (BOOL)isTranslated;
- (unsigned long long)physicalMemory;
- (unsigned int)activeProcessorCount;
- (unsigned int)processorCount;
- (id)operatingSystemVersionString;
- (id)operatingSystemName;
- (unsigned int)operatingSystem;
- (id)userHomeDirectory;
- (id)userFullName;
- (id)userName;
- (id)globallyUniqueString;
- (int)processIdentifier;
- (void)setProcessName:(id)arg1;
- (id)processName;
- (id)hostName;
- (void)setArguments:(id)arg1;
- (id)arguments;
- (id)environment;
- (void)dealloc;
- (id)init;

@end

@interface NSPropertyListSerialization : NSObject
{
    void *reserved[6];
}

+ (id)propertyListWithStream:(id)arg1 options:(unsigned int)arg2 format:(unsigned int *)arg3 error:(out id *)arg4;
+ (int)writePropertyList:(id)arg1 toStream:(id)arg2 format:(unsigned int)arg3 options:(unsigned int)arg4 error:(out id *)arg5;
+ (id)propertyListWithData:(id)arg1 options:(unsigned int)arg2 format:(unsigned int *)arg3 error:(out id *)arg4;
+ (id)dataWithPropertyList:(id)arg1 format:(unsigned int)arg2 options:(unsigned int)arg3 error:(out id *)arg4;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)propertyListFromData:(id)arg1 mutabilityOption:(unsigned int)arg2 format:(unsigned int *)arg3 errorDescription:(out id *)arg4;
+ (id)dataFromPropertyList:(id)arg1 format:(unsigned int)arg2 errorDescription:(out id *)arg3;
+ (BOOL)propertyList:(id)arg1 isValidForFormat:(unsigned int)arg2;
- (id)init;

@end

@interface NSProxy <NSObject>
{
    Class isa;
}

+ (id)description;
+ (void *)methodForSelector:(SEL)arg1;
+ (void *)instanceMethodForSelector:(SEL)arg1;
+ (BOOL)instancesRespondToSelector:(SEL)arg1;
+ (BOOL)conformsToProtocol:(id)arg1;
+ (BOOL)isKindOfClass:(Class)arg1;
+ (BOOL)isMemberOfClass:(Class)arg1;
+ (BOOL)isSubclassOfClass:(Class)arg1;
+ (BOOL)isProxy;
+ (BOOL)isFault;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2;
+ (id)performSelector:(SEL)arg1;
+ (unsigned int)hash;
+ (BOOL)isEqual:(id)arg1;
+ (id)_copyDescription;
+ (id)debugDescription;
+ (struct _NSZone *)zone;
+ (BOOL)retainWeakReference;
+ (BOOL)allowsWeakReference;
+ (BOOL)_isDeallocating;
+ (BOOL)_tryRetain;
+ (void)finalize;
+ (void)dealloc;
+ (id)init;
+ (void)doesNotRecognizeSelector:(SEL)arg1;
+ (void)forwardInvocation:(id)arg1;
+ (id)methodSignatureForSelector:(SEL)arg1;
+ (id)instanceMethodSignatureForSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (BOOL)isAncestorOfObject:(id)arg1;
+ (BOOL)respondsToSelector:(SEL)arg1;
+ (id)mutableCopyWithZone:(struct _NSZone *)arg1;
+ (id)mutableCopy;
+ (id)copyWithZone:(struct _NSZone *)arg1;
+ (id)copy;
+ (unsigned int)retainCount;
+ (id)autorelease;
+ (oneway void)release;
+ (id)retain;
+ (id)self;
+ (Class)superclass;
+ (Class)class;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (BOOL)isFault;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)_copyDescription;
- (id)debugDescription;
- (id)description;
- (BOOL)_allowsDirectEncoding;
- (struct _NSZone *)zone;
- (void)finalize;
- (void)dealloc;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (id)autorelease;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)self;
- (Class)superclass;
- (Class)class;
- (BOOL)_conformsToProtocolNamed:(const char *)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;

@end

@interface NSScanner : NSObject <NSCopying>
{
}

+ (id)localizedScannerWithString:(id)arg1;
+ (id)scannerWithString:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)setLocale:(id)arg1;
- (void)setCaseSensitive:(BOOL)arg1;
- (void)setCharactersToBeSkipped:(id)arg1;
- (unsigned int)scanLocation;
- (void)setScanLocation:(unsigned int)arg1;
- (id)string;
- (id)locale;
- (BOOL)caseSensitive;
- (id)charactersToBeSkipped;
- (BOOL)isAtEnd;
- (BOOL)scanUpToString:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanString:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanUpToCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanHexInt:(unsigned int *)arg1;
- (BOOL)scanHexLongLong:(unsigned long long *)arg1;
- (BOOL)scanInteger:(int *)arg1;
- (BOOL)scanInt:(int *)arg1;
- (BOOL)scanLongLong:(long long *)arg1;
- (BOOL)scanHexFloat:(float *)arg1;
- (BOOL)scanHexDouble:(double *)arg1;
- (BOOL)scanFloat:(float *)arg1;
- (BOOL)scanDouble:(double *)arg1;
- (id)_invertedSkipSet;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithString:(id)arg1;
- (BOOL)_scanDecimal:(unsigned int)arg1 into:(int *)arg2;
- (id)_remainingString;
- (BOOL)scanDecimal:(CDStruct_5fe7aead *)arg1;

@end

@interface NSConcreteScanner : NSScanner
{
    NSString *scanString;
    NSCharacterSet *skipSet;
    NSCharacterSet *invertedSkipSet;
    id locale;
    unsigned int scanLocation;
    struct {
        unsigned int caseSensitive:1;
        unsigned int :31;
    } flags;
}

- (void)finalize;
- (void)dealloc;
- (BOOL)scanLongLong:(long long *)arg1;
- (BOOL)scanInt:(int *)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (BOOL)caseSensitive;
- (void)setCaseSensitive:(BOOL)arg1;
- (id)charactersToBeSkipped;
- (void)setCharactersToBeSkipped:(id)arg1;
- (unsigned int)scanLocation;
- (void)setScanLocation:(unsigned int)arg1;
- (id)_invertedSkipSet;
- (id)string;
- (id)initWithString:(id)arg1;

@end

@interface NSCFSet : NSMutableSet
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)getObjects:(id *)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (unsigned int)_trueCount;
- (id)member:(id)arg1;
- (unsigned int)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSCountedSet : NSMutableSet
{
    id _table;
    void *_reserved;
}

+ (BOOL)supportsSecureCoding;
- (void)dealloc;
- (id)initWithSet:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithSet:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithObjects:(id *)arg1 count:(unsigned int)arg2;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)init;
- (unsigned int)countForObject:(id)arg1;
- (Class)classForCoder;
- (id)descriptionWithLocale:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)getObjects:(id *)arg1 count:(unsigned int)arg2;
- (unsigned int)countByEnumeratingWithState:(CDStruct_11f37819 *)arg1 objects:(id *)arg2 count:(unsigned int)arg3;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned int)count;

@end

@interface NSSimpleCString : NSString
{
    char *bytes;
    int numBytes;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)stringByAppendingString:(id)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned int)arg2 usedLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 options:(unsigned int)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned int)hash;
- (BOOL)hasSuffix:(id)arg1;
- (BOOL)hasPrefix:(id)arg1;
- (int)compare:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (BOOL)isEqualToString:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)canBeConvertedToEncoding:(unsigned int)arg1;
- (unsigned int)smallestEncoding;
- (unsigned int)fastestEncoding;
- (unsigned int)cStringLength;
- (unsigned int)length;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned int)arg2;

@end

@interface NSSortDescriptor : NSObject <NSCoding, NSCopying>
{
    unsigned int _sortDescriptorFlags;
    NSString *_key;
    SEL _selector;
    id _selectorOrBlock;
}

+ (id)_defaultSelectorName;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(id)arg3;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2;
+ (void)initialize;
- (BOOL)isEqual:(id)arg1;
- (BOOL)_isEqualToSortDescriptor:(id)arg1;
- (id)reversedSortDescriptor;
- (int)compareObject:(id)arg1 toObject:(id)arg2;
- (id)description;
- (id)_selectorName;
- (void)_setSelectorName:(id)arg1;
- (id)comparator;
- (SEL)selector;
- (BOOL)ascending;
- (void)_setAscending:(BOOL)arg1;
- (id)key;
- (void)_setKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(id)arg3;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSCFInputStream : NSInputStream
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (BOOL)_setCFClientFlags:(unsigned long)arg1 callback:(void *)arg2 context:(CDStruct_60d14f2d *)arg3;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned int *)arg2;
- (int)read:(char *)arg1 maxLength:(unsigned int)arg2;
- (id)streamError;
- (unsigned int)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (id)initWithURL:(id)arg1;
- (id)initWithFileAtPath:(id)arg1;
- (id)initWithData:(id)arg1;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSCFOutputStream : NSOutputStream
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (BOOL)_setCFClientFlags:(unsigned long)arg1 callback:(void *)arg2 context:(CDStruct_60d14f2d *)arg3;
- (BOOL)hasSpaceAvailable;
- (int)write:(const char *)arg1 maxLength:(unsigned int)arg2;
- (id)streamError;
- (unsigned int)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (id)initWithURL:(id)arg1 append:(BOOL)arg2;
- (id)initToFileAtPath:(id)arg1 append:(BOOL)arg2;
- (id)initToBuffer:(char *)arg1 capacity:(unsigned int)arg2;
- (id)initToMemory;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSString : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
}

+ (BOOL)supportsSecureCoding;
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned int *)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned int)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned int *)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned int)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1;
+ (id)stringWithContentsOfFile:(id)arg1;
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;
+ (id)stringWithFormat:(id)arg1;
+ (id)localizedStringWithFormat:(id)arg1;
+ (id)stringWithBytes:(const void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3;
+ (id)stringWithUTF8String:(const char *)arg1;
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned int)arg2;
+ (id)stringWithCString:(const char *)arg1 length:(unsigned int)arg2;
+ (id)stringWithCString:(const char *)arg1;
+ (id)stringWithCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
+ (id)stringWithString:(id)arg1;
+ (id)string;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
+ (id)pathWithComponents:(id)arg1;
+ (id)localizedNameOfStringEncoding:(unsigned int)arg1;
+ (const unsigned int *)availableStringEncodings;
+ (unsigned int)defaultCStringEncoding;
+ (id)_web_stringRepresentationForBytes:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(char *)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithFormat:(id)arg1 arguments:(char *)arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2;
- (id)initWithFormat:(id)arg1;
- (id)initWithData:(id)arg1 usedEncoding:(unsigned int *)arg2;
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned int *)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned int *)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)_initWithDataOfUnknownEncoding:(id)arg1;
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned int)arg2 copy:(BOOL)arg3 usedEncoding:(unsigned int *)arg4;
- (id)initWithData:(id)arg1 encoding:(unsigned int)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned int)arg2;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 length:(unsigned int)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned int)arg3 error:(id *)arg4;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned int)arg3 error:(id *)arg4;
- (BOOL)getExternalRepresentation:(id *)arg1 extendedAttributes:(id *)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned int)arg4 error:(id *)arg5;
- (id)displayableString;
- (void)enumerateLinesUsingBlock:(id)arg1;
- (void)enumerateSubstringsInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 usingBlock:(id)arg3;
- (struct _NSRange)paragraphRangeForRange:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;
- (void)getParagraphStart:(unsigned int *)arg1 end:(unsigned int *)arg2 contentsEnd:(unsigned int *)arg3 forRange:(struct _NSRange)arg4;
- (void)getLineStart:(unsigned int *)arg1 end:(unsigned int *)arg2 contentsEnd:(unsigned int *)arg3 forRange:(struct _NSRange)arg4;
- (void)_getBlockStart:(unsigned int *)arg1 end:(unsigned int *)arg2 contentsEnd:(unsigned int *)arg3 forRange:(struct _NSRange)arg4 stopAtLineSeparators:(BOOL)arg5;
- (id)stringByFoldingWithOptions:(unsigned int)arg1 locale:(id)arg2;
- (id)precomposedStringWithCompatibilityMapping;
- (id)decomposedStringWithCompatibilityMapping;
- (id)precomposedStringWithCanonicalMapping;
- (id)decomposedStringWithCanonicalMapping;
- (id)capitalizedStringWithLocale:(id)arg1;
- (id)lowercaseStringWithLocale:(id)arg1;
- (id)uppercaseStringWithLocale:(id)arg1;
- (id)capitalizedString;
- (id)lowercaseString;
- (id)uppercaseString;
- (BOOL)boolValue;
- (int)integerValue;
- (long long)longLongValue;
- (int)intValue;
- (float)floatValue;
- (double)doubleValue;
- (id)stringByAppendingFormat:(id)arg1;
- (id)stringByAppendingString:(id)arg1;
- (id)substringToIndex:(unsigned int)arg1;
- (id)substringFromIndex:(unsigned int)arg1;
- (id)substringWithRange:(struct _NSRange)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (void)getCharacters:(unsigned short *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)stringByReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;
- (id)stringByPaddingToLength:(unsigned int)arg1 withString:(id)arg2 startingAtIndex:(unsigned int)arg3;
- (id)stringByTrimmingCharactersInSet:(id)arg1;
- (BOOL)hasSuffix:(id)arg1;
- (BOOL)hasPrefix:(id)arg1;
- (id)commonPrefixWithString:(id)arg1 options:(unsigned int)arg2;
- (id)componentsSeparatedByCharactersInSet:(id)arg1;
- (id)componentsSeparatedByString:(id)arg1;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned int)arg2;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned int)arg2;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (struct _NSRange)rangeOfComposedCharacterSequencesForRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned int)arg1;
- (int)localizedStandardCompare:(id)arg1;
- (int)localizedCaseInsensitiveCompare:(id)arg1;
- (int)localizedCompare:(id)arg1;
- (int)caseInsensitiveCompare:(id)arg1;
- (int)compare:(id)arg1;
- (int)compare:(id)arg1 options:(unsigned int)arg2;
- (int)compare:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (int)compare:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (BOOL)isEqualToString:(id)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)quotedStringRepresentation;
- (id)_stringRepresentation;
- (BOOL)_isCString;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (const unsigned short *)_fastCharacterContents;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (BOOL)_getCString:(char *)arg1 maxLength:(unsigned int)arg2 encoding:(unsigned long)arg3;
- (unsigned long)_fastestEncodingInCFStringEncoding;
- (unsigned long)_smallestEncodingInCFStringEncoding;
- (unsigned char)_encodingCantBeStoredInEightBitCFString;
- (id)_createSubstringWithRange:(struct _NSRange)arg1;
- (unsigned long)_cfTypeID;
- (id)stringByConvertingURLToPath;
- (id)stringByConvertingPathToURL;
- (unsigned int)completePathIntoString:(id *)arg1 caseSensitive:(BOOL)arg2 matchesIntoArray:(id *)arg3 filterTypes:(id)arg4;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned int)arg2;
- (const char *)fileSystemRepresentation;
- (id)stringsByAppendingPaths:(id)arg1;
- (id)stringByResolvingSymlinksInPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(BOOL)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByStandardizingPathUsingCache:(BOOL)arg1;
- (id)stringByExpandingTildeInPath;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByDeletingPathExtension;
- (id)pathExtension;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)stringByDeletingLastPathComponent;
- (id)lastPathComponent;
- (BOOL)isAbsolutePath;
- (id)pathComponents;
- (BOOL)isNSString__;
- (id)propertyListFromStringsFileFormat;
- (id)propertyList;
- (id)formatConfiguration;
- (id)_copyFormatStringWithConfiguration:(id)arg1;
- (BOOL)getBytes:(char *)arg1 maxLength:(unsigned int)arg2 filledLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 allowLossyConversion:(BOOL)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned int)arg2 usedLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 options:(unsigned int)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned int)lengthOfBytesUsingEncoding:(unsigned int)arg1;
- (unsigned int)maximumLengthOfBytesUsingEncoding:(unsigned int)arg1;
- (BOOL)getCString:(char *)arg1 maxLength:(unsigned int)arg2 encoding:(unsigned int)arg3;
- (const char *)cStringUsingEncoding:(unsigned int)arg1;
- (id)dataUsingEncoding:(unsigned int)arg1;
- (id)dataUsingEncoding:(unsigned int)arg1 allowLossyConversion:(BOOL)arg2;
- (BOOL)canBeConvertedToEncoding:(unsigned int)arg1;
- (unsigned int)smallestEncoding;
- (unsigned int)fastestEncoding;
- (const char *)lossyCString;
- (unsigned int)cStringLength;
- (const char *)cString;
- (const char *)UTF8String;
- (void)getCString:(char *)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned int)arg2;
- (void)getCString:(char *)arg1 maxLength:(unsigned int)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (id)urlPathRelativeToPath:(id)arg1;
- (id)stringByAddingPercentEscapes;
- (id)stringByRemovingPercentEscapes;
- (id)standardizedURLPath;
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned int)arg1;
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned int)arg1;
- (CDStruct_5fe7aead)decimalValue;
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;
- (id)_web_HTTPStyleLanguageCode;
- (unsigned long)_web_extractFourCharCode;
- (id)_web_filenameByFixingIllegalCharacters;
- (id)_web_stringByCollapsingNonPrintingCharacters;
- (id)_web_URLFragment;
- (BOOL)_web_isFileURL;
- (BOOL)_web_looksLikeAbsoluteURL;
- (struct _NSRange)_web_rangeOfURLHost;
- (struct _NSRange)_web_rangeOfURLUserPasswordHostPort;
- (id)_web_fixedCarbonPOSIXPath;
- (id)_web_stringByExpandingTildeInPath;
- (id)_web_stringByTrimmingWhitespace;
- (id)_web_domainFromHost;
- (BOOL)_web_domainMatches:(id)arg1;
- (BOOL)_web_hasCountryCodeTLD;
- (BOOL)_web_looksLikeIPAddress;
- (int)_web_countOfString:(id)arg1;
- (BOOL)_web_hasCaseInsensitivePrefix:(id)arg1;
- (BOOL)_web_isCaseInsensitiveEqualToString:(id)arg1;
- (BOOL)_web_isJavaScriptURL;
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;
- (id)_web_fileNameFromContentDispositionHeader_nowarn;
- (id)_web_characterSetFromContentTypeHeader_nowarn;
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;
- (struct _NSRange)_web_rangeOfURLResourceSpecifier_nowarn;
- (struct _NSRange)_web_rangeOfURLScheme_nowarn;
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(BOOL)arg1;
- (id)_web_parseAsKeyValuePair_nowarn;
- (id)_web_splitAtNonDateCommas_nowarn;
- (BOOL)_getBytesAsData:(id *)arg1 maxLength:(unsigned int)arg2 usedLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 options:(unsigned int)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (id)_getCharactersAsStringInRange:(struct _NSRange)arg1;
- (void)_flushRegularExpressionCaches;
- (id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;
- (struct _NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (struct _NSRange)significantText;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)__escapeString5991;
- (void)enumerateLinguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned int)arg3 orthography:(id)arg4 usingBlock:(id)arg5;
- (id)linguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned int)arg3 orthography:(id)arg4 tokenRanges:(id *)arg5;

@end

@interface NSPlaceholderString : NSString
{
}

- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3;
- (id)initWithData:(id)arg1 encoding:(unsigned int)arg2;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(char *)arg3;
- (id)initWithString:(id)arg1;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 length:(unsigned int)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 encoding:(unsigned int)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned int)arg2;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)init;
- (void)dealloc;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;
- (id)autorelease;

@end

@interface __NSLocalizedString : NSMutableString
{
    NSMutableString *original;
    NSDictionary *config;
}

- (unsigned int)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned int)arg2;
- (void)setString:(id)arg1;
- (void)appendFormat:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendString:(id)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned int)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (const unsigned short *)_fastCharacterContents;
- (BOOL)isEqualToString:(id)arg1;
- (int)compare:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (id)substringWithRange:(struct _NSRange)arg1;
- (id)substringToIndex:(unsigned int)arg1;
- (id)substringFromIndex:(unsigned int)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (id)baseString;
- (id)formatConfiguration;
- (id)initWithString:(id)arg1 withFormatConfiguration:(id)arg2;

@end

@interface _NSCallStackArray : NSArray
{
    void **_frames;
    unsigned int _cnt;
    unsigned int _ignore;
    char **_pcstrs;
    BOOL _wantSyms;
}

+ (id)arrayWithFrames:(void **)arg1 count:(unsigned int)arg2 symbols:(BOOL)arg3;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned int)arg2;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)count;
- (void)finalize;
- (void)dealloc;

@end

@interface _NSThreadPerformInfo : NSObject
{
    id target;
    SEL selector;
    id argument;
    NSMutableArray *modes;
    NSCondition *waiter;
    char *signalled;
}

- (void)dealloc;

@end

@interface _NSThreadData : NSObject
{
    id dict;
    id name;
    id target;
    SEL selector;
    id argument;
    int seqNum;
    unsigned char qstate;
    unsigned char ____;
    unsigned char cancel;
    unsigned char status;
    id performQ;
    NSMutableDictionary *performD;
    struct _opaque_pthread_attr_t {
        long __sig;
        char __opaque[36];
    } attr;
    struct _opaque_pthread_t {
        long _field1;
        struct __darwin_pthread_handler_rec *_field2;
        char _field3[596];
    } *tid;
}

@end

@interface NSThread : NSObject
{
    id _private;
    unsigned char _bytes[44];
}

+ (void)detachNewThreadSelector:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
+ (BOOL)isDying;
+ (void)exit;
+ (id)currentThread;
+ (id)mainThread;
+ (id)callStackSymbols;
+ (id)callStackReturnAddresses;
+ (void)sleepForTimeInterval:(double)arg1;
+ (void)sleepUntilDate:(id)arg1;
+ (BOOL)setThreadPriority:(double)arg1;
+ (double)threadPriority;
+ (BOOL)isMultiThreaded;
+ (BOOL)isMainThread;
- (void)_nq:(id)arg1;
- (void)main;
- (void)start;
- (id)description;
- (void)cancel;
- (BOOL)isCancelled;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (BOOL)isMainThread;
- (void)setThreadPriority:(double)arg1;
- (double)threadPriority;
- (unsigned int)stackSize;
- (void)setStackSize:(unsigned int)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (id)threadDictionary;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)init;
- (BOOL)isDying;
- (id)runLoop;

@end

@interface NSCFTimer : NSTimer
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)init;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(BOOL)arg6;
- (unsigned long)_cfTypeID;
- (void)fire;
- (id)userInfo;
- (void)setFireDate:(id)arg1;
- (id)fireDate;
- (void)invalidate;
- (double)timeInterval;
- (BOOL)isValid;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSConcreteValue : NSValue
{
    unsigned int _specialFlags;
    void *typeInfo;
}

+ (BOOL)supportsSecureCoding;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)hash;
- (BOOL)isEqualToValue:(id)arg1;
- (const void *)_value;
- (const char *)objCType;
- (void)getValue:(void *)arg1;

@end

@interface NSWeakPointerValue : NSValue
{
    void *_value;
    void *_weakValue;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)nonretainedObjectValue;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (unsigned int)hash;
- (BOOL)isEqualToValue:(id)arg1;
- (id)initWithPointer:(void *)arg1;

@end

@interface NSValue : NSObject <NSCopying, NSSecureCoding>
{
}

+ (BOOL)supportsSecureCoding;
+ (id)valueWithRange:(struct _NSRange)arg1;
+ (id)valueWithRect:(struct CGRect)arg1;
+ (id)valueWithSize:(struct CGSize)arg1;
+ (id)valueWithPoint:(struct CGPoint)arg1;
+ (id)valueWithPointer:(const void *)arg1;
+ (id)valueWithNonretainedObject:(id)arg1;
+ (id)valueWithBytes:(const void *)arg1 objCType:(const char *)arg2;
+ (id)value:(const void *)arg1 withObjCType:(const char *)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (struct _NSRange)rangeValue;
- (struct CGRect)rectValue;
- (struct CGSize)sizeValue;
- (struct CGPoint)pointValue;
- (void *)pointerValue;
- (id)nonretainedObjectValue;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const char *)objCType;
- (void)getValue:(void *)arg1;
- (id)init;
- (BOOL)isNSValue__;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSNumber : NSValue
{
}

+ (BOOL)supportsSecureCoding;
+ (id)numberWithBool:(BOOL)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long)arg1;
+ (id)numberWithLong:(long)arg1;
+ (id)numberWithUnsignedInteger:(unsigned int)arg1;
+ (id)numberWithInteger:(int)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithChar:(BOOL)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (_Bool)_getCString:(char *)arg1 length:(int)arg2 multiplier:(double)arg3;
- (id)initWithBool:(BOOL)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long)arg1;
- (id)initWithLong:(long)arg1;
- (id)initWithUnsignedInteger:(unsigned int)arg1;
- (id)initWithInteger:(int)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)stringValue;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToNumber:(id)arg1;
- (int)compare:(id)arg1;
- (unsigned long long)unsignedLongLongValue;
- (long long)longLongValue;
- (float)floatValue;
- (double)doubleValue;
- (unsigned long)unsignedLongValue;
- (long)longValue;
- (unsigned int)unsignedIntValue;
- (int)intValue;
- (unsigned short)unsignedShortValue;
- (short)shortValue;
- (unsigned char)unsignedCharValue;
- (BOOL)charValue;
- (unsigned int)unsignedIntegerValue;
- (int)integerValue;
- (BOOL)boolValue;
- (int)_reverseCompare:(id)arg1;
- (unsigned char)_getValue:(void *)arg1 forType:(long)arg2;
- (long)_cfNumberType;
- (unsigned long)_cfTypeID;
- (BOOL)isNSNumber__;
- (CDStruct_5fe7aead)decimalValue;

@end

@interface NSPlaceholderValue : NSNumber
{
    struct _NSZone *zoneForInstance;
}

+ (BOOL)supportsSecureCoding;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (id)initWithCoder:(id)arg1;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;
- (id)autorelease;

@end

@interface NSPlaceholderNumber : NSPlaceholderValue
{
}

+ (BOOL)supportsSecureCoding;
- (id)initWithCoder:(id)arg1;
- (id)initWithBool:(BOOL)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long)arg1;
- (id)initWithLong:(long)arg1;
- (id)initWithUnsignedInteger:(unsigned int)arg1;
- (id)initWithInteger:(int)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)init;

@end

@interface NSValueTransformer : NSObject
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (id)valueTransformerNames;
+ (id)valueTransformerForName:(id)arg1;
+ (void)setValueTransformer:(id)arg1 forName:(id)arg2;
+ (id)_transformerRegistry;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface _NSSharedValueTransformer : NSValueTransformer
{
}

- (BOOL)_isBooleanTransformer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (id)autorelease;
- (id)retain;

@end

@interface _NSNegateBooleanTransformer : _NSSharedValueTransformer
{
}

+ (Class)transformedValueClass;
- (BOOL)_isBooleanTransformer;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

@interface _NSIsNilTransformer : _NSNegateBooleanTransformer
{
}

+ (BOOL)supportsReverseTransformation;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

@interface _NSIsNotNilTransformer : _NSNegateBooleanTransformer
{
}

+ (BOOL)supportsReverseTransformation;
- (id)description;
- (id)transformedValue:(id)arg1;

@end

@interface _NSUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface _NSKeyedUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)description;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface _NSXMLParserInfo : NSObject
{
    struct _xmlSAXHandler *saxHandler;
    struct _xmlParserCtxt *parserContext;
    unsigned int parserFlags;
    NSError *error;
    NSMutableArray *namespaces;
    NSMapTable *slowStringMap;
    BOOL delegateAborted;
    BOOL haveDetectedEncoding;
    NSData *bomChunk;
    unsigned int nestingLevel;
}

@end

@interface NSXMLParser : NSObject
{
    id _reserved0;
    id _delegate;
    id _reserved1;
    id _reserved2;
    id _reserved3;
}

- (void)_initializeSAX2Callbacks;
- (void)_popNamespaces;
- (void)_pushNamespaces:(id)arg1;
- (struct _xmlParserCtxt *)_parserContext;
- (void)_setParserError:(int)arg1;
- (void)finalize;
- (void)dealloc;
- (int)columnNumber;
- (int)lineNumber;
- (id)systemID;
- (id)publicID;
- (id)parserError;
- (void)abortParsing;
- (BOOL)parse;
- (BOOL)parseFromStream;
- (BOOL)parseData:(id)arg1;
- (BOOL)shouldContinueAfterFatalError;
- (void)setShouldContinueAfterFatalError:(BOOL)arg1;
- (BOOL)shouldResolveExternalEntities;
- (BOOL)shouldReportNamespacePrefixes;
- (BOOL)shouldProcessNamespaces;
- (void)setShouldResolveExternalEntities:(BOOL)arg1;
- (void)setShouldReportNamespacePrefixes:(BOOL)arg1;
- (void)setShouldProcessNamespaces:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithStream:(id)arg1;
- (id)initForIncrementalParsing;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)_info;

@end

@interface NSTask : NSObject
{
}

+ (id)launchedTaskWithLaunchPath:(id)arg1 arguments:(id)arg2;
+ (id)launchedTaskWithDictionary:(id)arg1;
+ (id)currentTaskDictionary;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)standardError;
- (id)standardOutput;
- (id)standardInput;
- (void)setStandardError:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setStandardInput:(id)arg1;
- (id)currentDirectoryPath;
- (id)arguments;
- (id)environment;
- (id)launchPath;
- (int)processIdentifier;
- (int)suspendCount;
- (BOOL)resume;
- (BOOL)suspend;
- (void)terminate;
- (void)interrupt;
- (void)setLaunchPath:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setArguments:(id)arg1;
- (void)launch;
- (BOOL)isRunning;
- (int)terminationReason;
- (int)terminationStatus;
@property(copy) id terminationHandler;

@end

@interface NSConcreteTask : NSTask
{
    NSMutableDictionary *_dictionary;
    BOOL _hasExeced;
    BOOL _isRunning;
    BOOL _hasPostedDeathNotification;
    BOOL _terminationRun;
    int _suspendCount;
    id _terminationHandler;
    int _pid;
    int _platformExitInfo;
    NSObject<OS_dispatch_source> *_dsrc;
    NSPort *_tmpPort;
}

- (void)setStartsNewProcessGroup:(BOOL)arg1;
- (int)processIdentifier;
- (int)_procid;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)standardError;
- (id)standardOutput;
- (id)standardInput;
- (void)setStandardError:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setStandardInput:(id)arg1;
- (int)suspendCount;
- (BOOL)resume;
- (BOOL)suspend;
- (void)terminateTask;
- (void)terminate;
- (void)interrupt;
- (id)taskDictionary;
- (void)setTaskDictionary:(id)arg1;
- (id)currentDirectoryPath;
- (id)preferredArchitectures;
- (id)arguments;
- (id)environment;
- (id)launchPath;
- (void)setLaunchPath:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setPreferredArchitectures:(id)arg1;
- (void)setArguments:(id)arg1;
- (void)waitUntilExit;
- (void)launchWithDictionary:(id)arg1;
- (void)launch;
- (BOOL)isRunning;
- (int)terminationReason;
- (int)_platformExitInformation;
- (int)terminationStatus;
- (void)setTerminationHandler:(id)arg1;
- (id)terminationHandler;

@end

@interface NSDecimalNumberPlaceholder : NSDecimalNumber
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)init;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (id)initWithFloat:(float)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithUnsignedLong:(unsigned long)arg1;
- (id)initWithUnsignedInteger:(unsigned int)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithLong:(long)arg1;
- (id)initWithInteger:(int)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)initWithBool:(BOOL)arg1;
- (id)initWithLongLong:(long long)arg1;

@end

@interface NSDecimalNumber : NSNumber
{
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:1;
    unsigned int _hasExternalRefCount:1;
    unsigned int _refs:16;
    unsigned short _mantissa[0];
}

+ (id)defaultBehavior;
+ (void)setDefaultBehavior:(id)arg1;
+ (id)notANumber;
+ (id)one;
+ (id)zero;
+ (id)maximumDecimalNumber;
+ (id)minimumDecimalNumber;
+ (id)decimalNumberWithString:(id)arg1 locale:(id)arg2;
+ (id)decimalNumberWithString:(id)arg1;
+ (id)decimalNumberWithDecimal:(CDStruct_5fe7aead)arg1;
+ (id)decimalNumberWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)numberWithBool:(BOOL)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long)arg1;
+ (id)numberWithLong:(long)arg1;
+ (id)numberWithUnsignedInteger:(unsigned int)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithInteger:(int)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithChar:(BOOL)arg1;
- (_Bool)_getCString:(char *)arg1 length:(int)arg2 multiplier:(double)arg3;
- (BOOL)boolValue;
- (float)floatValue;
- (unsigned long long)unsignedLongLongValue;
- (long long)longLongValue;
- (unsigned long)unsignedLongValue;
- (long)longValue;
- (unsigned int)unsignedIntValue;
- (int)intValue;
- (unsigned short)unsignedShortValue;
- (short)shortValue;
- (unsigned char)unsignedCharValue;
- (BOOL)charValue;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)decimalNumberByRoundingAccordingToBehavior:(id)arg1;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1;
- (id)decimalNumberByRaisingToPower:(unsigned int)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByRaisingToPower:(unsigned int)arg1;
- (id)decimalNumberByDividingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByDividingBy:(id)arg1;
- (id)decimalNumberByMultiplyingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingBy:(id)arg1;
- (id)decimalNumberBySubtracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubtracting:(id)arg1;
- (id)decimalNumberBySubstracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubstracting:(id)arg1;
- (id)decimalNumberByAdding:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByAdding:(id)arg1;
- (void)getValue:(void *)arg1;
- (double)doubleValue;
- (const char *)objCType;
- (BOOL)isEqual:(id)arg1;
- (int)compare:(id)arg1;
- (CDStruct_5fe7aead)decimalValue;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSDecimalNumberHandler : NSObject <NSDecimalNumberBehaviors, NSCoding>
{
    unsigned int _scale:16;
    unsigned int _roundingMode:3;
    unsigned int _raiseOnExactness:1;
    unsigned int _raiseOnOverflow:1;
    unsigned int _raiseOnUnderflow:1;
    unsigned int _raiseOnDivideByZero:1;
    unsigned int _unused:9;
    void *_reserved2;
    void *_reserved;
}

+ (id)decimalNumberHandlerWithRoundingMode:(unsigned int)arg1 scale:(short)arg2 raiseOnExactness:(BOOL)arg3 raiseOnOverflow:(BOOL)arg4 raiseOnUnderflow:(BOOL)arg5 raiseOnDivideByZero:(BOOL)arg6;
+ (id)defaultDecimalNumberHandler;
- (id)exceptionDuringOperation:(SEL)arg1 error:(unsigned int)arg2 leftOperand:(id)arg3 rightOperand:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (short)scale;
- (unsigned int)roundingMode;
- (id)initWithRoundingMode:(unsigned int)arg1 scale:(short)arg2 raiseOnExactness:(BOOL)arg3 raiseOnOverflow:(BOOL)arg4 raiseOnUnderflow:(BOOL)arg5 raiseOnDivideByZero:(BOOL)arg6;

@end

@interface NSPortMessage : NSObject
{
    NSPort *localPort;
    NSPort *remotePort;
    NSMutableArray *components;
    unsigned int msgid;
    void *reserved2;
    void *reserved;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)sendBeforeDate:(id)arg1;
- (id)components;
- (void)setMsgid:(unsigned int)arg1;
- (unsigned int)msgid;
- (id)receivePort;
- (id)sendPort;
- (void)dealloc;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)initWithSendPort:(id)arg1 receivePort:(id)arg2 components:(id)arg3;

@end

@interface NSURLKeyValuePair : NSObject
{
    id key;
    id value;
    unsigned int hash;
}

+ (id)pairWithKey:(id)arg1 value:(id)arg2;
+ (id)pair;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (id)value;
- (id)key;
- (void)setValue:(id)arg1;
- (void)setKey:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 value:(id)arg2;

@end

@interface NSURLFileTypeMappingsInternal : NSObject
{
    NSDictionary *MIMETypeToExtensionList;
    NSDictionary *extensionToMIMEType;
}

- (id)init;

@end

@interface NSURLFileTypeMappings : NSObject
{
    NSURLFileTypeMappingsInternal *_internal;
}

+ (id)sharedMappings;
- (id)extensionsForMIMEType:(id)arg1;
- (id)preferredExtensionForMIMEType:(id)arg1;
- (id)MIMETypeForExtension:(id)arg1;
- (id)_UTIMIMETypeForExtension:(id)arg1;
- (id)_UTIextensionForMIMEType:(id)arg1;
- (id)_init;

@end

@interface NSURLQueueNode : NSObject
{
    id object;
    NSURLQueueNode *next;
}

@end

@interface NSURLQueue : NSObject
{
    unsigned int count;
    NSURLQueueNode *head;
    NSURLQueueNode *tail;
    id monitor;
    BOOL waitOnTake;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

+ (id)newNode;
- (void)setWaitOnTake:(BOOL)arg1;
- (BOOL)waitOnTake;
- (unsigned int)count;
- (BOOL)isEmpty;
- (int)indexOf:(id)arg1;
- (void)clear;
- (BOOL)remove:(id)arg1;
- (id)peekAt:(unsigned int)arg1;
- (id)peek;
- (id)take;
- (void)put:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSURLHostNameAddressInfo : NSObject
{
    double timestamp;
    struct addrinfo *addressInfo;
}

+ (void)asyncResolveWithCallbackClient:(id)arg1;
+ (id)addressInfoForHost:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (double)_timestamp;
- (struct addrinfo *)addrinfo;
- (id)_initWithAddressInfo:(struct addrinfo *)arg1;

@end

@interface NSProtocolChecker : NSProxy
{
}

+ (id)protocolCheckerWithTarget:(id)arg1 protocol:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (const char *)_localClassNameForClass;
- (id)methodSignatureForSelector:(SEL)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)target;
- (id)protocol;

@end

@interface NSConcreteProtocolChecker : NSProtocolChecker
{
    NSObject *_target;
    Protocol *_protocol;
}

- (void)dealloc;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (id)target;
- (id)protocol;

@end

@interface NSDateFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFDateFormatter *_formatter;
    unsigned int _counter;
}

+ (id)dateFormatFromTemplate:(id)arg1 options:(unsigned int)arg2 locale:(id)arg3;
+ (id)localizedStringFromDate:(id)arg1 dateStyle:(unsigned int)arg2 timeStyle:(unsigned int)arg3;
+ (void)initialize;
+ (void)setDefaultFormatterBehavior:(unsigned int)arg1;
+ (unsigned int)defaultFormatterBehavior;
- (void)_setUsesCharacterDirection:(BOOL)arg1;
- (BOOL)_usesCharacterDirection;
- (void)setDoesRelativeDateFormatting:(BOOL)arg1;
- (BOOL)doesRelativeDateFormatting;
- (void)setGregorianStartDate:(id)arg1;
- (id)gregorianStartDate;
- (void)setShortStandaloneQuarterSymbols:(id)arg1;
- (id)shortStandaloneQuarterSymbols;
- (void)setStandaloneQuarterSymbols:(id)arg1;
- (id)standaloneQuarterSymbols;
- (void)setShortQuarterSymbols:(id)arg1;
- (id)shortQuarterSymbols;
- (void)setQuarterSymbols:(id)arg1;
- (id)quarterSymbols;
- (void)setVeryShortStandaloneWeekdaySymbols:(id)arg1;
- (id)veryShortStandaloneWeekdaySymbols;
- (void)setShortStandaloneWeekdaySymbols:(id)arg1;
- (id)shortStandaloneWeekdaySymbols;
- (void)setStandaloneWeekdaySymbols:(id)arg1;
- (id)standaloneWeekdaySymbols;
- (void)setVeryShortWeekdaySymbols:(id)arg1;
- (id)veryShortWeekdaySymbols;
- (void)setVeryShortStandaloneMonthSymbols:(id)arg1;
- (id)veryShortStandaloneMonthSymbols;
- (void)setShortStandaloneMonthSymbols:(id)arg1;
- (id)shortStandaloneMonthSymbols;
- (void)setStandaloneMonthSymbols:(id)arg1;
- (id)standaloneMonthSymbols;
- (void)setVeryShortMonthSymbols:(id)arg1;
- (id)veryShortMonthSymbols;
- (void)setLongEraSymbols:(id)arg1;
- (id)longEraSymbols;
- (void)setPMSymbol:(id)arg1;
- (id)PMSymbol;
- (void)setAMSymbol:(id)arg1;
- (id)AMSymbol;
- (void)setShortWeekdaySymbols:(id)arg1;
- (id)shortWeekdaySymbols;
- (void)setWeekdaySymbols:(id)arg1;
- (id)weekdaySymbols;
- (void)setShortMonthSymbols:(id)arg1;
- (id)shortMonthSymbols;
- (void)setMonthSymbols:(id)arg1;
- (id)monthSymbols;
- (void)setEraSymbols:(id)arg1;
- (id)eraSymbols;
- (void)setDefaultDate:(id)arg1;
- (id)defaultDate;
- (void)setTwoDigitStartDate:(id)arg1;
- (id)twoDigitStartDate;
- (void)setLenient:(BOOL)arg1;
- (BOOL)isLenient;
- (void)setCalendar:(id)arg1;
- (id)calendar;
- (void)setTimeZone:(id)arg1;
- (id)timeZone;
- (void)_setIsLenient:(BOOL)arg1;
- (void)_setDateFormat:(id)arg1;
- (id)_dateFormat;
- (void)setDateFormat:(id)arg1;
- (id)dateFormat;
- (void)setFormatterBehavior:(unsigned int)arg1;
- (unsigned int)formatterBehavior;
- (void)setGeneratesCalendarDates:(BOOL)arg1;
- (BOOL)generatesCalendarDates;
- (void)setLocale:(id)arg1;
- (id)locale;
- (void)setTimeStyle:(unsigned int)arg1;
- (unsigned int)timeStyle;
- (void)setDateStyle:(unsigned int)arg1;
- (unsigned int)dateStyle;
- (id)dateFromString:(id)arg1;
- (id)stringFromDate:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_reset;
- (id)init;
- (void)_regenerateFormatter;
- (void)_regenerateFormatterIfAbsent;
- (void)_clearFormatter;

@end

@interface NSFormatter : NSObject <NSCopying, NSCoding>
{
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (BOOL)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)editingStringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;

@end

@interface NSNumberFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFNumberFormatter *_formatter;
    unsigned int _counter;
    void *_reserved[12];
}

+ (id)localizedStringFromNumber:(id)arg1 numberStyle:(unsigned int)arg2;
+ (void)initialize;
+ (void)setDefaultFormatterBehavior:(unsigned int)arg1;
+ (unsigned int)defaultFormatterBehavior;
- (void)_setUsesCharacterDirection:(BOOL)arg1;
- (BOOL)_usesCharacterDirection;
- (void)setPartialStringValidationEnabled:(BOOL)arg1;
- (BOOL)isPartialStringValidationEnabled;
- (void)setMaximumSignificantDigits:(unsigned int)arg1;
- (unsigned int)maximumSignificantDigits;
- (void)setMinimumSignificantDigits:(unsigned int)arg1;
- (unsigned int)minimumSignificantDigits;
- (void)setUsesSignificantDigits:(BOOL)arg1;
- (BOOL)usesSignificantDigits;
- (void)setLenient:(BOOL)arg1;
- (BOOL)isLenient;
- (void)setCurrencyGroupingSeparator:(id)arg1;
- (id)currencyGroupingSeparator;
- (void)setMaximum:(id)arg1;
- (id)maximum;
- (void)setMinimum:(id)arg1;
- (id)minimum;
- (void)setMaximumFractionDigits:(unsigned int)arg1;
- (unsigned int)maximumFractionDigits;
- (void)setMinimumFractionDigits:(unsigned int)arg1;
- (unsigned int)minimumFractionDigits;
- (void)setMaximumIntegerDigits:(unsigned int)arg1;
- (unsigned int)maximumIntegerDigits;
- (void)setMinimumIntegerDigits:(unsigned int)arg1;
- (unsigned int)minimumIntegerDigits;
- (void)setRoundingIncrement:(id)arg1;
- (id)roundingIncrement;
- (void)setRoundingMode:(unsigned int)arg1;
- (unsigned int)roundingMode;
- (void)setPaddingPosition:(unsigned int)arg1;
- (unsigned int)paddingPosition;
- (void)setPaddingCharacter:(id)arg1;
- (id)paddingCharacter;
- (void)setMultiplier:(id)arg1;
- (id)multiplier;
- (void)setFormatWidth:(unsigned int)arg1;
- (unsigned int)formatWidth;
- (void)setSecondaryGroupingSize:(unsigned int)arg1;
- (unsigned int)secondaryGroupingSize;
- (void)setGroupingSize:(unsigned int)arg1;
- (unsigned int)groupingSize;
- (void)setExponentSymbol:(id)arg1;
- (id)exponentSymbol;
- (void)setPlusSign:(id)arg1;
- (id)plusSign;
- (void)setMinusSign:(id)arg1;
- (id)minusSign;
- (void)setPerMillSymbol:(id)arg1;
- (id)perMillSymbol;
- (void)setPercentSymbol:(id)arg1;
- (id)percentSymbol;
- (void)setInternationalCurrencySymbol:(id)arg1;
- (id)internationalCurrencySymbol;
- (void)setCurrencySymbol:(id)arg1;
- (id)currencySymbol;
- (void)setCurrencyCode:(id)arg1;
- (id)currencyCode;
- (void)setNegativeSuffix:(id)arg1;
- (id)negativeSuffix;
- (void)setNegativePrefix:(id)arg1;
- (id)negativePrefix;
- (void)setPositiveSuffix:(id)arg1;
- (id)positiveSuffix;
- (void)setPositivePrefix:(id)arg1;
- (id)positivePrefix;
- (void)setTextAttributesForNegativeInfinity:(id)arg1;
- (id)textAttributesForNegativeInfinity;
- (void)setNegativeInfinitySymbol:(id)arg1;
- (id)negativeInfinitySymbol;
- (void)setTextAttributesForPositiveInfinity:(id)arg1;
- (id)textAttributesForPositiveInfinity;
- (void)setPositiveInfinitySymbol:(id)arg1;
- (id)positiveInfinitySymbol;
- (void)setTextAttributesForNotANumber:(id)arg1;
- (id)textAttributesForNotANumber;
- (void)setNotANumberSymbol:(id)arg1;
- (id)notANumberSymbol;
- (void)setTextAttributesForNil:(id)arg1;
- (id)textAttributesForNil;
- (void)setNilSymbol:(id)arg1;
- (id)nilSymbol;
- (void)setTextAttributesForZero:(id)arg1;
- (id)textAttributesForZero;
- (void)setZeroSymbol:(id)arg1;
- (id)zeroSymbol;
- (void)setGroupingSeparator:(id)arg1;
- (id)groupingSeparator;
- (void)setUsesGroupingSeparator:(BOOL)arg1;
- (BOOL)usesGroupingSeparator;
- (void)setCurrencyDecimalSeparator:(id)arg1;
- (id)currencyDecimalSeparator;
- (void)setAlwaysShowsDecimalSeparator:(BOOL)arg1;
- (BOOL)alwaysShowsDecimalSeparator;
- (void)setDecimalSeparator:(id)arg1;
- (id)decimalSeparator;
- (void)setAllowsFloats:(BOOL)arg1;
- (BOOL)allowsFloats;
- (void)setTextAttributesForPositiveValues:(id)arg1;
- (id)textAttributesForPositiveValues;
- (void)setPositiveFormat:(id)arg1;
- (id)positiveFormat;
- (void)setTextAttributesForNegativeValues:(id)arg1;
- (id)textAttributesForNegativeValues;
- (void)setNegativeFormat:(id)arg1;
- (id)negativeFormat;
- (void)setFormatterBehavior:(unsigned int)arg1;
- (unsigned int)formatterBehavior;
- (void)setGeneratesDecimalNumbers:(BOOL)arg1;
- (BOOL)generatesDecimalNumbers;
- (void)setLocale:(id)arg1;
- (id)locale;
- (void)setNumberStyle:(unsigned int)arg1;
- (unsigned int)numberStyle;
- (id)numberFromString:(id)arg1;
- (id)stringFromNumber:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)stringForObjectValue:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (void)_reset;
- (id)init;
- (void *)__Keynote_NOOP;
- (void)_regenerateFormatter;
- (void)_clearFormatter;

@end

@interface NSAboutURLProtocol : NSURLProtocol
{
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface NSCFURLProtocol : NSURLProtocol
{
    struct _CFURLProtocol *cfProt;
}

+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
- (void)_resumeLoading;
- (void)_suspendLoading;
- (void)stopLoading;
- (void)startLoading;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)finalize;
- (void)dealloc;

@end

@interface _NSCFURLProtocolBridgeWithTrampoline : _NSCFURLProtocolBridge
{
    NSMutableArray *_workQueue;
    NSCountedSet *_runloops;
    BOOL _canSignalDirectly;
    NSThread *_processThread;
}

- (void)pushEvent:(id)arg1 from:(void)arg2;
- (BOOL)shouldSignalDirectly;
- (void)unschedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)schedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)finalize;
- (void)dealloc;
- (void)releaseWorkQueue;
- (id)initWithCFURLProtocol:(struct _CFURLProtocol *)arg1 request:(id)arg2 protocolClass:(Class)arg3;
- (void)processEventQ;

@end

@interface _NSCFURLProtocolBridge : NSObject <NSURLProtocolClient>
{
    NSURLProtocol *_nsProt;
    struct _CFURLProtocol *_cfProt;
    struct _CFURLAuthChallenge *_cfChallenge;
    NSURLAuthenticationChallenge *_nsChallenge;
    BOOL _loading;
}

+ (void)registerWithCFURLProtocol;
+ (void)permitRequest:(struct _CFURLRequest *)arg1;
+ (void)barRequest:(struct _CFURLRequest *)arg1;
- (void)bridgeRelease;
- (void)bridgeRetain;
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2 lengthReceived:(long long)arg3;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(unsigned int)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)didReceiveAuthenticationChallenge:(id)arg1;
- (void)didFailWithError:(id)arg1;
- (void)didFinishLoading;
- (void)didLoadData:(id)arg1 lengthReceived:(long long)arg2;
- (void)didReceiveResponse:(id)arg1;
- (void)cachedResponseIsValid:(id)arg1;
- (void)wasRedirectedToRequest:(id)arg1 redirectResponse:(id)arg2;
- (void)useCredential:(struct _CFURLCredential *)arg1 forChallenge:(struct _CFURLAuthChallenge *)arg2;
- (void)_forgetClient;
- (void)resume;
- (void)halt;
- (void)stop;
- (void)start;
- (void)pushEvent:(id)arg1 from:(void)arg2;
- (void)unschedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)schedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)dealloc;
- (id)initWithCFURLProtocol:(struct _CFURLProtocol *)arg1 request:(id)arg2 protocolClass:(Class)arg3;
- (id)description;

@end

@interface NSHTTPCookie : NSObject
{
    NSHTTPCookieInternal *_cookiePrivate;
}

+ (id)cookiesWithResponseHeaderFields:(id)arg1 forURL:(id)arg2;
+ (id)requestHeaderFieldsWithCookies:(id)arg1;
+ (struct __CFArray *)_ns2cfCookies:(id)arg1;
+ (id)_cf2nsCookies:(struct __CFArray *)arg1;
+ (id)cookieWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)arg1;
+ (id)cookieWithProperties:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (BOOL)_isExpired;
- (id)_key;
- (int)_compareForHeaderOrder:(id)arg1;
- (id)MaxAge;
- (id)Port;
- (id)Discard;
- (id)Secure;
- (id)Version;
- (id)OriginURL;
- (id)CommentURL;
- (id)Comment;
- (id)Expires;
- (id)Path;
- (id)Domain;
- (id)Value;
- (id)Name;
- (id)portList;
- (id)commentURL;
- (id)comment;
- (id)path;
- (id)domain;
- (id)value;
- (id)name;
- (id)expiresDate;
- (BOOL)isHTTPOnly;
- (BOOL)isSecure;
- (BOOL)isSessionOnly;
- (unsigned int)version;
- (struct OpaqueCFHTTPCookie *)_GetInternalCFHTTPCookie;
- (id)properties;
- (void)dealloc;
- (id)init;
- (id)initWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)arg1;
- (id)initWithProperties:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;

@end

@interface NSHTTPCookieStorageInternal : NSObject
{
    struct OpaqueCFHTTPCookieStorage *storage;
    struct OpaqueCFHTTPCookieStorage *privateStorage;
    NSRecursiveLock *dataLock;
    BOOL privateBrowsing;
}

- (void)dealloc;
- (void)_syncCookies;
- (id)initWithSharedStorage;

@end

@interface NSHTTPCookieStorage : NSObject
{
    NSHTTPCookieStorageInternal *_internal;
}

+ (id)sharedHTTPCookieStorage;
- (id)sortedCookiesUsingDescriptors:(id)arg1;
- (id)description;
- (void)setCookieAcceptPolicy:(unsigned int)arg1;
- (unsigned int)cookieAcceptPolicy;
- (void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3;
- (id)cookiesForURL:(id)arg1;
- (void)setCookiesFromResponseHeader:(id)arg1 forURL:(id)arg2 policyBaseURL:(id)arg3;
- (id)cookieRequestHeaderFieldsForURL:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (void)setCookie:(id)arg1;
- (id)cookies;
- (id)init;
- (void)dealloc;
- (id)_initWithSharedStorage;
- (void)_readAcceptCookiesPreference;
- (void)_saveCookies;
- (struct OpaqueCFHTTPCookieStorage *)_cookieStorage;
- (void)_setPrivateBrowsingEnabled:(BOOL)arg1;

@end

@interface NSNetworkSettingsInternal : NSObject
{
    struct __SCDynamicStore *store;
    struct __CFRunLoopSource *storeSource;
    NSDictionary *proxyDictionary;
    BOOL ftpPassiveEnabled;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (void)finalize;
- (void)dealloc;

@end

@interface NSNetworkSettings : NSObject
{
    NSNetworkSettingsInternal *_internal;
}

+ (id)sharedNetworkSettings;
- (void)setProxyDictionary:(id)arg1;
- (BOOL)connectedToInternet:(BOOL)arg1;
- (void)setProxyPropertiesForURL:(id)arg1 onStream:(struct __CFReadStream *)arg2;
- (BOOL)isProxyNeededForURL:(id)arg1;
- (id)proxyPropertiesForURL:(id)arg1;
- (id)proxyDictionary;
- (void)dealloc;
- (id)init;
- (id)_init;
- (void)_listenForProxySettingChanges;
- (void)_updateProxySettings;

@end

@interface NSURLAuthenticationChallengeInternal : NSObject
{
    NSURLProtectionSpace *space;
    NSURLCredential *proposedCredential;
    int previousFailureCount;
    NSURLResponse *failureResponse;
    NSError *error;
    id <NSURLAuthenticationChallengeSender> sender;
}

- (void)dealloc;
- (id)initWithProtectionSpace:(id)arg1 proposedCredential:(id)arg2 previousFailureCount:(int)arg3 failureResponse:(id)arg4 error:(id)arg5 sender:(id)arg6;

@end

@interface NSURLAuthenticationChallenge : NSObject <NSCoding>
{
    NSURLAuthenticationChallengeInternal *_internal;
}

+ (id)_createAuthenticationChallengeForCFAuthChallenge:(struct _CFURLAuthChallenge *)arg1 sender:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)sender;
- (id)failureResponse;
- (id)error;
- (int)previousFailureCount;
- (id)proposedCredential;
- (id)protectionSpace;
- (void)dealloc;
- (id)_initWithCFAuthChallenge:(struct _CFURLAuthChallenge *)arg1 sender:(id)arg2;
- (id)initWithAuthenticationChallenge:(id)arg1 sender:(id)arg2;
- (id)initWithProtectionSpace:(id)arg1 proposedCredential:(id)arg2 previousFailureCount:(int)arg3 failureResponse:(id)arg4 error:(id)arg5 sender:(id)arg6;
- (id)init;
- (void)setSender:(id)arg1;
- (struct _CFURLAuthChallenge *)_createCFAuthChallenge;

@end

@interface NSCachedURLResponseInternal : NSObject
{
    NSURLResponse *response;
    NSData *data;
    NSDictionary *userInfo;
    unsigned int storagePolicy;
    struct _CFCachedURLResponse *_cachedURLResponse;
}

- (void)dealloc;

@end

@interface NSCachedURLResponse : NSObject <NSCoding, NSCopying>
{
    NSCachedURLResponseInternal *_internal;
}

- (void)_reestablishInternalCFCachedURLResponse:(struct _CFCachedURLResponse *)arg1;
- (void)_deallocInternalCFCachedURLResponse;
- (struct _CFCachedURLResponse *)_CFCachedURLResponse;
- (void)dealloc;
- (unsigned int)storagePolicy;
- (id)userInfo;
- (id)dataArray;
- (id)data;
- (id)response;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithCFCachedURLResponse:(struct _CFCachedURLResponse *)arg1;
- (id)initWithResponse:(id)arg1 dataArray:(id)arg2 userInfo:(id)arg3 storagePolicy:(unsigned int)arg4;
- (id)initWithResponse:(id)arg1 data:(id)arg2 userInfo:(id)arg3 storagePolicy:(unsigned int)arg4;
- (id)initWithResponse:(id)arg1 data:(id)arg2;

@end

@interface NSURLCacheInternal : NSObject
{
    unsigned int memoryCapacity;
    unsigned int diskCapacity;
    NSString *diskPath;
    unsigned int currentMemoryUsage;
    unsigned int currentDiskUsage;
    NSMutableDictionary *memoryCache;
    NSLock *memoryCacheGuard;
    NSURLCacheNode *memoryCacheLRUHead;
    NSURLCacheNode *memoryCacheLRUTail;
    unsigned int memoryCacheItemLengthThreshold;
    NSLock *diskCacheGuard;
    NSMutableDictionary *diskCachePendingWrites;
    NSMutableSet *diskCachePendingRemovals;
    NSURLQueue *diskCachePendingOperations;
    unsigned int diskCacheItemLengthThreshold;
    double diskCacheTouchTime;
    struct NSLRUFileList *diskCacheLRUList;
    unsigned int timerResetCount;
    unsigned int syncSkipCount;
    struct _CFURLCache *_cacheRef;
    BOOL diskCacheLeftoverFilesRemovedFlag;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (void)finalize;
- (void)dealloc;

@end

@interface NSURLCacheNode : NSObject
{
    NSCachedURLResponse *cachedResponse;
    NSURLRequest *request;
    NSString *key;
    NSURLCacheNode *prev;
    NSURLCacheNode *next;
    unsigned long hash;
}

- (void)dealloc;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCachedResponse:(id)arg1 request:(id)arg2 key:(id)arg3;

@end

@interface NSURLCache : NSObject
{
    NSURLCacheInternal *_internal;
}

+ (void)_diskCacheSyncLoop:(id)arg1;
+ (void)_performDiskCacheSync;
+ (void)setSharedURLCache:(id)arg1;
+ (id)sharedURLCache;
- (void)_diskCacheExecuteRemoval:(id)arg1;
- (void)_diskCacheScheduleRemoval:(id)arg1;
- (void)_diskCacheExecuteWrite:(id)arg1;
- (void)_diskCacheScheduleWrite:(id)arg1;
- (void)_diskCacheTruncate:(unsigned int)arg1;
- (void)_diskCacheClear;
- (id)_diskCacheGet:(id)arg1;
- (BOOL)_diskCacheCreateDirectory;
- (id)_diskCacheDefaultPath;
- (id)_cacheDirectory;
- (void)_diskCacheCreateLRUList:(id)arg1;
- (void)_diskCacheSync;
- (void)_diskCacheSetSyncTimer;
- (void)_memoryCacheClear;
- (void)_memoryCacheRemove:(id)arg1;
- (void)_memoryCachePut:(id)arg1;
- (id)_memoryCacheGet:(id)arg1;
- (void)_memoryCacheTruncate:(unsigned int)arg1;
- (void)_memoryCacheTouchNode:(id)arg1;
- (void)_memoryCacheAppendNodeToLRUList:(id)arg1;
- (void)_memoryCacheRemoveNodeFromLRUList:(id)arg1;
- (struct _CFURLCache *)_CFURLCache;
- (void)dealloc;
- (CDStruct_1ef3fb1f)_cacheStatistics;
- (unsigned int)currentDiskUsage;
- (unsigned int)currentMemoryUsage;
- (void)setDiskCapacity:(unsigned int)arg1;
- (void)setMemoryCapacity:(unsigned int)arg1;
- (unsigned int)diskCapacity;
- (unsigned int)memoryCapacity;
- (void)removeAllCachedResponses;
- (void)removeCachedResponseForRequest:(id)arg1;
- (void)storeCachedResponse:(id)arg1 forRequest:(id)arg2;
- (id)cachedResponseForRequest:(id)arg1;
- (id)initWithMemoryCapacity:(unsigned int)arg1 diskCapacity:(unsigned int)arg2 diskPath:(id)arg3;
- (id)initWithExistingSharedCFURLCache:(struct _CFURLCache *)arg1;
- (id)init;
- (long)_nscfBridgeURLCacheCurrentDiskUsage;
- (long)_nscfBridgeURLCacheCurrentMemoryUsage;
- (long)_nscfBridgeURLCacheMemoryCapacity;
- (void)_nscfBridgeURLCacheRemoveAllCachedResponses;
- (void)_nscfBridgeURLCacheRemoveCachedResponseForRequest:(id)arg1;
- (void)_nscfBridgeURLCacheSetDiskCapacity:(long)arg1;
- (void)_nscfBridgeURLCacheSetMemoryCapacity:(long)arg1;
- (long)_nscfBridgeURLCacheDiskCapacity;
- (void)_nscfBridgeURLCacheStoreCachedResponse:(struct _CFCachedURLResponse *)arg1 forRequest:(struct _CFURLRequest *)arg2;
- (struct _CFCachedURLResponse *)_nscfBridgeURLCacheCopyResponseForRequest:(struct _CFURLRequest *)arg1;

@end

@interface NSURLError : NSError
{
}

- (void)encodeWithCoder:(id)arg1;

@end

@interface NSURLConnection : NSObject <NSURLAuthenticationChallengeSender>
{
    NSURLConnectionInternal *_internal;
}

+ (void)_setSweeperInterval:(unsigned int)arg1;
+ (unsigned int)_sweeperInterval;
+ (BOOL)canHandleRequest:(id)arg1;
+ (void)sendAsynchronousRequest:(id)arg1 queue:(id)arg2 completionHandler:(id)arg3;
+ (id)sendSynchronousRequest:(id)arg1 returningResponse:(id *)arg2 error:(id *)arg3;
+ (id)connectionWithRequest:(id)arg1 delegate:(id)arg2;
+ (void)_setMIMETypesWithNoSizeLimit:(id)arg1;
+ (void)_resourceLoadLoop:(id)arg1;
+ (void)_setLoaderThreadPriority:(int)arg1;
+ (struct __CFRunLoop *)resourceLoaderRunLoop;
- (void)_resumeLoading;
- (void)_suspendLoading;
- (id)_cfInternal;
- (id)_dlInternal;
- (BOOL)defersCallbacks;
- (void)setDefersCallbacks:(BOOL)arg1;
- (id)connectionProperties;
- (void)download;
- (id)currentRequest;
- (id)originalRequest;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)cancel;
- (void)start;
- (void)setDelegateQueue:(id)arg1;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2 startImmediately:(BOOL)arg3;
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4 startImmediately:(BOOL)arg5 connectionProperties:(id)arg6;

@end

@interface NSURLConnectionInternal : NSObject <NSURLConnectionRequired, NSURLAuthenticationChallengeSender>
{
    NSURLConnection *_connection;
    NSOperationQueue *_delegateQueue;
    NSURL *_url;
    NSURLRequest *_originalRequest;
    NSURLRequest *_currentRequest;
    id _delegate;
    NSDictionary *_connectionProperties;
    BOOL _connectionActive;
}

- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)_withErrorForConnection:(id)arg1;
- (void)_withConnection:(id)arg1;
- (void)_withActiveConnectionAndDelegate:(id)arg1;
- (void)_withConnectionAndDelegate:(id)arg1 onlyActive:(void)arg2;
- (void)invokeForDelegate:(id)arg1;
- (void)_withConnectionDisconnectFromConnection;
- (void)_invalidate;
- (BOOL)isConnectionActive;
- (void)setConnectionActive:(BOOL)arg1;
- (void)_setDelegateQueue:(id)arg1;
- (id)currentRequest;
- (id)originalRequest;
- (id)_connectionProperties;
- (void)dealloc;
- (id)initWithInfo:(const struct InternalInit *)arg1;

@end

@interface NSURLConnectionInternalConnection : NSURLConnectionInternal <NSURLConnectionRequired>
{
    int _cfConnLock;
    struct _CFURLConnection *_cfConn;
    struct _CFURLAuthChallenge *_currCFChallenge;
    NSURLAuthenticationChallenge *_currNSChallenge;
    struct __CFString *_fileName;
    _Bool _shouldSkipCancelOnRelease;
    long long _totalBytes;
    long long _expectedTotalBytes;
}

- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)cleanupChallenges;
- (void)_setShouldSkipCancelOnRelease:(_Bool)arg1;
- (void)_resumeLoading;
- (void)_suspendLoading;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)cancel;
- (void)start;
- (void)invokeForDelegate:(id)arg1;
- (void)_invalidate;
- (void)_setDelegateQueue:(id)arg1;
- (void)dealloc;
- (struct _CFURLConnection *)_retainCFURLConnection;
- (struct _CFURLConnection *)_atomic_CFURLConnection;
- (struct _CFURLConnection *)_CFURLConnection;
- (id)initWithInfo:(const struct InternalInit *)arg1;
- (void)sendCFChallenge:(struct _CFURLAuthChallenge *)arg1 toSelector:(SEL)arg2;

@end

@interface NSURLCredential : NSObject <NSCoding, NSCopying>
{
    NSURLCredentialInternal *_internal;
}

+ (id)credentialForTrust:(struct __SecTrust *)arg1;
+ (id)credentialWithIdentity:(struct __SecIdentity *)arg1 certificates:(id)arg2 persistence:(unsigned int)arg3;
+ (id)credentialWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned int)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTrust:(struct __SecTrust *)arg1;
- (id)certificates;
- (struct __SecIdentity *)identity;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)persistence;
- (BOOL)hasPassword;
- (id)password;
- (id)user;
- (struct _CFURLCredential *)_cfurlcredential;
- (void)dealloc;
- (id)initWithIdentity:(struct __SecIdentity *)arg1 certificates:(id)arg2 persistence:(unsigned int)arg3;
- (id)_initWithCFURLCredential:(struct _CFURLCredential *)arg1;
- (id)initWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned int)arg3;

@end

@interface NSURLCredentialStorage : NSObject
{
    NSURLCredentialStorageInternal *_internal;
}

+ (id)sharedCredentialStorage;
- (void)setDefaultCredential:(id)arg1 forProtectionSpace:(id)arg2;
- (id)defaultCredentialForProtectionSpace:(id)arg1;
- (void)removeCredential:(id)arg1 forProtectionSpace:(id)arg2;
- (void)setCredential:(id)arg1 forProtectionSpace:(id)arg2;
- (id)allCredentials;
- (id)credentialsForProtectionSpace:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)_internalInit;

@end

@interface NSURLProtectionSpace : NSObject <NSCoding, NSCopying>
{
    NSURLProtectionSpaceInternal *_internal;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct _CFURLProtectionSpace *)_cfurlprtotectionspace;
- (id)protocol;
- (struct __SecTrust *)serverTrust;
- (id)distinguishedNames;
- (id)authenticationMethod;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)proxyType;
- (int)port;
- (id)host;
- (BOOL)isProxy;
- (BOOL)receivesCredentialSecurely;
- (id)realm;
- (void)dealloc;
- (id)init;
- (id)_initWithCFURLProtectionSpace:(struct _CFURLProtectionSpace *)arg1;
- (id)initWithProxyHost:(id)arg1 port:(int)arg2 type:(id)arg3 realm:(id)arg4 authenticationMethod:(id)arg5;
- (id)initWithHost:(id)arg1 port:(int)arg2 protocol:(id)arg3 realm:(id)arg4 authenticationMethod:(id)arg5;
- (id)_internalInit;

@end

@interface NSURLProtocolInternal : NSObject
{
    id <NSURLProtocolClient> client;
    NSURLRequest *request;
    NSCachedURLResponse *cachedResponse;
    NSLock *mutex;
}

- (void)dealloc;
- (id)init;

@end

@interface NSURLProtocol : NSObject
{
    NSURLProtocolInternal *_internal;
}

+ (void)removePropertyForKey:(id)arg1 inRequest:(id)arg2;
+ (void)setProperty:(id)arg1 forKey:(id)arg2 inRequest:(id)arg3;
+ (id)propertyForKey:(id)arg1 inRequest:(id)arg2;
+ (id)_protocolWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3 allowCF:(BOOL)arg4;
+ (void)unregisterClass:(Class)arg1;
+ (BOOL)registerClass:(Class)arg1;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (BOOL)_requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2 allowCF:(BOOL)arg3;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (id)_canonicalRequestForRequest:(id)arg1 allowCF:(BOOL)arg2;
+ (BOOL)canInitWithRequest:(id)arg1;
+ (void)_removePropertyForKey:(id)arg1 inRequest:(id)arg2;
+ (id)_makeRequestCanonicalByMakingRequestURLCanonical:(id)arg1;
+ (Class)_protocolClassForRequest:(id)arg1;
+ (Class)_protocolClassForRequest:(id)arg1 allowCF:(BOOL)arg2;
+ (id)_registeredClasses;
- (void)stopLoading;
- (void)startLoading;
- (void)dealloc;
- (id)cachedResponse;
- (id)request;
- (id)client;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)_resumeLoading;
- (void)_suspendLoading;
- (void)_releaseProtocolClientReference;

@end

@interface NSURLRequestInternal : NSObject
{
    struct _CFURLRequest *request;
}

- (void)dealloc;

@end

@interface NSURLRequest : NSObject <NSCoding, NSCopying, NSMutableCopying>
{
    NSURLRequestInternal *_internal;
}

+ (double)defaultTimeoutInterval;
+ (void)setDefaultTimeoutInterval:(double)arg1;
+ (id)requestWithURL:(id)arg1;
+ (id)requestWithURL:(id)arg1 cachePolicy:(unsigned int)arg2 timeoutInterval:(double)arg3;
+ (void)checkForSharedCookieStoreNeed:(struct _CFURLRequest *)arg1;
+ (void)setAllowsSpecificHTTPSCertificate:(id)arg1 forHost:(id)arg2;
+ (id)allowsSpecificHTTPSCertificateForHost:(id)arg1;
+ (void)setAllowsAnyHTTPSCertificate:(BOOL)arg1 forHost:(id)arg2;
+ (BOOL)allowsAnyHTTPSCertificateForHost:(id)arg1;
- (id)boundInterfaceIdentifier;
- (BOOL)allowsCellularAccess;
- (unsigned int)networkServiceType;
- (void)_removePropertyForKey:(id)arg1;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (id)_propertyForKey:(id)arg1;
- (BOOL)_URLHasScheme:(id)arg1;
- (id)_copyReplacingURLWithURL:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;
- (id)mainDocumentURL;
- (double)timeoutInterval;
- (unsigned int)cachePolicy;
- (id)URL;
- (struct _CFURLRequest *)_CFURLRequest;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithURL:(id)arg1;
- (id)_initWithCFURLRequest:(struct _CFURLRequest *)arg1;
- (id)initWithURL:(id)arg1 cachePolicy:(unsigned int)arg2 timeoutInterval:(double)arg3;
- (id)contentDispositionEncodingFallbackArray;
- (BOOL)HTTPShouldUsePipelining;
- (BOOL)HTTPShouldHandleCookies;
- (id)HTTPUserAgent;
- (id)HTTPReferrer;
- (id)HTTPExtraCookies;
- (id)HTTPContentType;
- (id)HTTPBodyStream;
- (id)HTTPBody;
- (id)valueForHTTPHeaderField:(id)arg1;
- (id)allHTTPHeaderFields;
- (id)HTTPMethod;

@end

@interface NSMutableURLRequest : NSURLRequest
{
}

- (void)setBoundInterfaceIdentifier:(id)arg1;
- (void)setAllowsCellularAccess:(BOOL)arg1;
- (void)setNetworkServiceType:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setMainDocumentURL:(id)arg1;
- (void)setTimeoutInterval:(double)arg1;
- (void)setCachePolicy:(unsigned int)arg1;
- (void)setURL:(id)arg1;
- (void)setContentDispositionEncodingFallbackArray:(id)arg1;
- (void)setHTTPShouldUsePipelining:(BOOL)arg1;
- (unsigned int)requestPriority;
- (void)setRequestPriority:(unsigned int)arg1;
- (void)setHTTPShouldHandleCookies:(BOOL)arg1;
- (void)setHTTPUserAgent:(id)arg1;
- (void)setHTTPReferrer:(id)arg1;
- (void)setHTTPExtraCookies:(id)arg1;
- (void)setHTTPContentType:(id)arg1;
- (void)setHTTPBodyStream:(id)arg1;
- (void)setHTTPBody:(id)arg1;
- (void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)setAllHTTPHeaderFields:(id)arg1;
- (void)setHTTPMethod:(id)arg1;

@end

@interface NSHTTPURLRequestParameters : NSObject
{
    NSString *method;
    NSMutableDictionary *fields;
    NSArray *extraCookies;
    NSData *data;
    unsigned int pageNotFoundCacheLifetime;
    BOOL shouldHandleCookies;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface NSURLResponseInternal : NSObject
{
    struct _CFURLResponse *response;
}

- (void)dealloc;
- (id)initWithURLResponse:(struct _CFURLResponse *)arg1;

@end

@interface NSURLResponse : NSObject <NSCoding, NSCopying>
{
    NSURLResponseInternal *_internal;
}

+ (id)_responseWithCFURLResponse:(struct _CFURLResponse *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)suggestedFilename;
- (long long)expectedContentLength;
- (id)textEncodingName;
- (id)MIMEType;
- (id)URL;
- (struct _CFURLResponse *)_CFURLResponse;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithURL:(id)arg1 MIMEType:(id)arg2 expectedContentLength:(int)arg3 textEncodingName:(id)arg4;
- (id)_initWithCFURLResponse:(struct _CFURLResponse *)arg1;
- (id)_peerCertificateChain;
- (void)dealloc;
- (double)_calculatedExpiration;
- (double)_freshnessLifetime;
- (BOOL)_mustRevalidate;
- (id)_lastModifiedDate;
- (id)_createdDate;
- (void)_setMIMEType:(id)arg1;
- (void)_setExpectedContentLength:(long long)arg1;

@end

@interface NSHTTPURLResponseInternal : NSObject <NSCoding>
{
    struct __SecTrust *peerTrust;
    BOOL isMixedReplace;
}

- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSHTTPURLResponse : NSURLResponse
{
    NSHTTPURLResponseInternal *_httpInternal;
}

+ (BOOL)isErrorStatusCode:(int)arg1;
+ (id)localizedStringForStatusCode:(int)arg1;
- (struct __SecTrust *)_peerTrust;
- (void)_setPeerTrust:(struct __SecTrust *)arg1;
- (id)_clientCertificateState;
- (id)_clientCertificateChain;
- (id)_peerCertificateChain;
- (void)dealloc;
- (int)statusCode;
- (id)allHeaderFields;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithURL:(id)arg1 statusCode:(int)arg2 HTTPVersion:(id)arg3 headerFields:(id)arg4;
- (id)initWithURL:(id)arg1 statusCode:(int)arg2 headerFields:(id)arg3 requestTime:(double)arg4;
- (id)_initWithCFURLResponse:(struct _CFURLResponse *)arg1;

@end

@interface NSURLDownloadInternal : NSObject
{
    struct _CFURLDownload *cfDownload;
    struct _CFURLAuthChallenge *currCFChallenge;
    NSURLAuthenticationChallenge *currNSChallenge;
    NSURLConnectionDelegateProxy *proxy;
    id delegate;
    BOOL downloadActive;
}

- (void)dealloc;

@end

@interface NSURLDownload : NSObject <NSURLAuthenticationChallengeSender>
{
    NSURLDownloadInternal *_internal;
}

+ (BOOL)_isEncodingMIMETypeResumable:(id)arg1;
+ (BOOL)canResumeDownloadDecodedWithEncodingMIMEType:(id)arg1;
+ (id)_downloadWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
+ (id)_downloadWithLoadingCFURLConnection:(struct _CFURLConnection *)arg1 request:(struct _CFURLRequest *)arg2 response:(struct _CFURLResponse *)arg3 delegate:(id)arg4 proxy:(id)arg5;
+ (id)_downloadWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (BOOL)sendCanAuthenticateAgainstProtectionSpace:(struct _CFURLProtectionSpace *)arg1;
- (void)sendDidFail:(struct __CFError *)arg1;
- (void)sendDidFinish;
- (void)sendDidCreateDestination:(struct __CFURL *)arg1;
- (void)sendDecideDestinationWithSuggestedObjectName:(struct __CFString *)arg1;
- (_Bool)sendShouldDecodeDataOfMIMEType:(struct __CFString *)arg1;
- (void)sendDidReceiveData:(long)arg1;
- (void)sendWillResumeWithResponse:(struct _CFURLResponse *)arg1 startingByte:(unsigned long long)arg2;
- (void)sendDidReceiveResponse:(struct _CFURLResponse *)arg1;
- (void)sendDidReceiveChallenge:(struct _CFURLAuthChallenge *)arg1;
- (unsigned char)sendDownloadShouldUseCredentialStorage;
- (struct _CFURLRequest *)sendWillSendRequest:(struct _CFURLRequest *)arg1 redirectResponse:(struct _CFURLResponse *)arg2;
- (void)sendDidStart:(struct _CFURLDownload *)arg1;
- (BOOL)_downloadActive;
- (id)_delegate;
- (void)releaseDelegate;
- (id)_originatingURL;
- (void)_setOriginatingURL:(id)arg1;
- (void)_setDirectoryPath:(id)arg1;
- (void)_setDelegate:(id)arg1;
- (id)_directoryPath;
- (id)url;
- (BOOL)deletesFileUponFailure;
- (void)setDeletesFileUponFailure:(BOOL)arg1;
- (BOOL)_deletesFileAfterFailure;
- (void)_setDeletesFileAfterFailure:(BOOL)arg1;
- (void)setDestination:(id)arg1 allowOverwrite:(BOOL)arg2;
- (id)request;
- (void)cancel;
- (void)dealloc;
- (id)resumeData;
- (id)_resumeInformation;
- (id)initWithResumeData:(id)arg1 delegate:(id)arg2 path:(id)arg3;
- (id)_initWithResumeInformation:(id)arg1 delegate:(id)arg2 path:(id)arg3;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
- (id)_initWithLoadingCFURLConnection:(struct _CFURLConnection *)arg1 request:(struct _CFURLRequest *)arg2 response:(struct _CFURLResponse *)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)_initWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)init;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)cleanupChallenges;

@end

@interface NSURLConnectionDelegateProxy : NSObject
{
    id delegate;
    unsigned int flags;
}

- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(int)arg2 totalBytesWritten:(int)arg3 totalBytesExpectedToWrite:(int)arg4;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveDataArray:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2 lengthReceived:(long long)arg3;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)setDelegate:(id)arg1;

@end

@interface NSGZipDecoder : NSObject <NSURLDownloadDecoder, NSURLDataDecoder>
{
    struct z_stream_s _stream;
    unsigned int _modificationTime;
    NSString *_filename;
    BOOL _streamInitialized;
    BOOL _decodedHeader;
    BOOL _finishedInflating;
    BOOL _pad;
}

+ (id)MIMEType;
+ (BOOL)canDecodeDownloadHeaderData:(id)arg1;
+ (BOOL)decodeDownloadHeader:(id)arg1 headerLength:(int *)arg2 modificationTime:(unsigned int *)arg3 filename:(id *)arg4;
- (id)filenameWithOriginalFilename:(id)arg1;
- (id)fileAttributes;
- (BOOL)finishDownloadDecoding;
- (BOOL)isFinishedDecoding;
- (BOOL)decodeDownloadData:(id)arg1 dataForkData:(id *)arg2 resourceForkData:(id *)arg3;
- (id)decodeData:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSNetService : NSObject
{
    id _netService;
    id _delegate;
    id _reserved;
}

+ (id)dataFromTXTRecordDictionary:(id)arg1;
+ (id)dictionaryFromTXTRecordData:(id)arg1;
- (id)TXTRecordData;
- (BOOL)setTXTRecordData:(id)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
- (id)_monitors;
- (void)resolve;
- (void)resolveWithTimeout:(double)arg1;
- (BOOL)getInputStream:(out id *)arg1 outputStream:(out id *)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (struct __CFNetService *)_internalNetService;
- (void)finalize;
- (void)dealloc;
- (void)_dispatchCallBackWithError:(CDStruct_1ef3fb1f)arg1;
- (void)stop;
- (void)publish;
- (void)publishWithOptions:(unsigned int)arg1;
- (int)port;
- (id)addresses;
- (id)hostName;
- (id)name;
- (id)type;
- (id)domain;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)_scheduleInDefaultRunLoopForMode:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithDomain:(id)arg1 type:(id)arg2 name:(id)arg3;
- (id)initWithDomain:(id)arg1 type:(id)arg2 name:(id)arg3 port:(int)arg4;
- (id)initWithCFNetService:(struct __CFNetService *)arg1;

@end

@interface NSNetServiceBrowser : NSObject
{
    id _netServiceBrowser;
    id _delegate;
    void *_reserved;
}

- (void)finalize;
- (void)dealloc;
- (void)_dispatchCallBack:(void *)arg1 flags:(unsigned long)arg2 error:(CDStruct_1ef3fb1f)arg3;
- (struct __CFNetServiceBrowser *)_internalNetServiceBrowser;
- (void)stop;
- (void)searchForServicesOfType:(id)arg1 inDomain:(id)arg2;
- (void)searchForRegistrationDomains;
- (void)searchForBrowsableDomains;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)init;
- (void)searchForAllDomains;

@end

@interface _NSDOConversationInfo : NSObject
{
    id doConversation;
    unsigned int doConversationCount;
    id doConversationRequest;
}

@end

@interface NSDistributedObjectsStatistics : NSDictionary
{
    unsigned int requestsReceived;
    unsigned int repliesSent;
    unsigned int requestsSent;
    unsigned int repliesReceived;
}

- (id)objectForKey:(id)arg1;
- (void)addStatistics:(id)arg1;
- (id)keyEnumerator;
- (id)allKeys;
- (unsigned int)count;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSDistantObjectRequest : NSObject
{
}

- (void)replyWithException:(id)arg1;
- (id)conversation;
- (id)connection;
- (id)invocation;

@end

@interface NSConcreteDistantObjectRequest : NSDistantObjectRequest
{
    NSInvocation *invocation;
    NSArray *importedObjects;
    id conversation;
    unsigned int sequence;
    NSConnection *connection;
}

- (void)dealloc;
- (void)replyWithException:(id)arg1;
- (id)conversation;
- (id)connection;
- (id)invocation;
- (id)initWithInvocation:(id)arg1 conversation:(id)arg2 sequence:(unsigned int)arg3 importedObjects:(id)arg4 connection:(id)arg5;

@end

@interface NSConnectionHelper : NSObject
{
    double reqLim;
    double repLim;
    BOOL remoteUsesKeyedDO;
    NSSet *whitelist;
    BOOL useKeyedDO;
    NSConnection *parent;
}

- (void)setWhitelist:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSConnection : NSObject
{
    id receivePort;
    id sendPort;
    id delegate;
    int busy;
    int localProxyCount;
    int waitCount;
    id delayedRL;
    id statistics;
    unsigned char isDead;
    unsigned char isValid;
    unsigned char wantsInvalid;
    unsigned int authGen:1;
    unsigned int authCheck:1;
    unsigned int _reserved1:1;
    unsigned int _reserved2:1;
    unsigned int doRequest:1;
    unsigned int isQueueing:1;
    unsigned int isMulti:1;
    unsigned int invalidateRP:1;
    id ___1;
    id ___2;
    id runLoops;
    id requestModes;
    id rootObject;
    void *registerInfo;
    id replMode;
    id classInfoImported;
    id releasedProxies;
    id reserved;
}

+ (void)_enableLogging:(BOOL)arg1;
+ (void)_toggleLogging;
+ (id)statistics;
+ (id)currentConversation;
+ (id)allConnections;
+ (id)defaultConnection;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2 usingNameServer:(id)arg3;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)connectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)lookUpConnectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (void)_portInvalidated:(id)arg1;
+ (void)initialize;
- (void)runInNewThread;
- (void)run;
- (void)removeRunLoop:(id)arg1;
- (void)addRunLoop:(id)arg1;
- (BOOL)multipleThreadsEnabled;
- (void)enableMultipleThreads;
- (BOOL)hasRunLoop:(id)arg1;
- (void)removePortsFromRunLoop:(id)arg1;
- (void)addPortsToRunLoop:(id)arg1;
- (id)description;
- (void)_setUseKC:(BOOL)arg1;
- (id)statistics;
- (void)_sendBeforeTime:(double)arg1 coder:(id)arg2 doAuthenticationCheck:(BOOL)arg3;
- (BOOL)_verifyComponents:(id)arg1;
- (void)_authenticateComponents:(id)arg1;
- (void)sendInvocation:(id)arg1;
- (void)sendInvocation:(id)arg1 internal:(BOOL)arg2;
- (void)returnResult:(id)arg1 exception:(id)arg2 sequence:(unsigned int)arg3 imports:(id)arg4;
- (id)dispatchInvocation:(id)arg1;
- (void)handleRequest:(id)arg1 sequence:(unsigned int)arg2;
- (BOOL)_shouldDispatch:(id *)arg1 invocation:(id)arg2 sequence:(unsigned int)arg3 coder:(id)arg4;
- (id)newConversation;
- (BOOL)sendWireCountForWireID:(unsigned int)arg1 port:(id)arg2;
- (void)handlePortCoder:(id)arg1;
- (void)handlePortMessage:(id)arg1;
- (void)dispatchWithComponents:(id)arg1;
- (id)portCoderWithComponents:(id)arg1;
- (Class)_portCoderClassWithComponents:(id)arg1;
- (Class)_portCoderClass;
- (id)localObjects;
- (id)remoteObjects;
- (void)releaseWireID:(unsigned int)arg1 count:(unsigned int)arg2;
- (void)sendReleasedProxies;
- (void)decodeReleasedProxies:(id)arg1;
- (void)handleUnkeyedReleasedProxies:(char *)arg1 length:(unsigned int)arg2;
- (void)handleKeyedReleasedProxies:(id)arg1;
- (void)encodeReleasedProxies:(id)arg1;
- (void)_encodeProxyList:(id)arg1 forCoder:(id)arg2;
- (void)_setWhitelist:(id)arg1;
- (unsigned int)versionForClassNamed:(id)arg1;
- (void)addClassNamed:(char *)arg1 version:(unsigned int)arg2;
- (void)_decrementLocalProxyCount;
- (void)_incrementLocalProxyCount;
- (void)setRootObject:(id)arg1;
- (id)keyedRootObject;
- (id)rootObject;
- (id)rootProxy;
- (id)sendPort;
- (id)receivePort;
- (void)setReplyMode:(id)arg1;
- (id)replyMode;
- (id)requestModes;
- (void)removeRequestMode:(id)arg1;
- (void)addRequestMode:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setIndependentConversationQueueing:(BOOL)arg1;
- (BOOL)independentConversationQueueing;
- (double)replyTimeout;
- (void)setReplyTimeout:(double)arg1;
- (double)requestTimeout;
- (void)setRequestTimeout:(double)arg1;
- (void)finalize;
- (void)invalidate;
- (void)dealloc;
- (oneway void)release;
- (id)retain;
- (BOOL)isValid;
- (BOOL)registerName:(id)arg1 withNameServer:(id)arg2;
- (BOOL)registerName:(id)arg1;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2;
- (id)init;

@end

@interface NSDistantObjectTableEntry : NSObject
{
    NSConnection *_conn;
    NSDistantObject *_proxy;
    id _localObject;
    unsigned int _wireID;
}

- (id)description;
- (void)dealloc;

@end

@interface NSDistantObject : NSProxy <NSCoding>
{
    id _knownSelectors;
    unsigned int _wireCount;
    unsigned int _refCount;
    id _proto;
    unsigned short ___2;
    unsigned char ___1;
    unsigned char _wireType;
    id _remoteClass;
}

+ (id)newDistantObjectWithCoder:(id)arg1;
+ (id)proxyWithLocal:(id)arg1 connection:(id)arg2;
+ (id)proxyWithTarget:(id)arg1 connection:(id)arg2;
+ (void)initialize;
+ (void)_enableLogging:(BOOL)arg1;
- (struct _NSZone *)zone;
- (id)mutableCopy;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)appendFormat:(id)arg1;
- (id)stringByAppendingFormat:(id)arg1;
- (id)description;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (Class)class;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)finalize;
- (void)retainWireCount;
- (oneway void)release;
- (void)dealloc;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (id)retain;
- (void)_releaseWireCount:(unsigned int)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (id)protocolForProxy;
- (void)setProtocolForProxy:(id)arg1;
- (id)connectionForProxy;
- (id)initWithLocal:(id)arg1 connection:(id)arg2;
- (id)initWithTarget:(id)arg1 connection:(id)arg2;

@end

@interface NSMutableStringProxy : NSDistantObject
{
}

- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned int)arg2 usedLength:(unsigned int *)arg3 encoding:(unsigned int)arg4 options:(unsigned int)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (void)getCString:(char *)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned int)arg2;
- (void)getCString:(char *)arg1 maxLength:(unsigned int)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)getCharacters:(unsigned short *)arg1;

@end

@interface NSConcretePortCoder : NSPortCoder
{
    NSSet *whitelist;
}

- (void)dealloc;
- (BOOL)_classAllowed:(Class)arg1;
- (void)_setWhitelist:(id)arg1;

@end

@interface NSPortCoder : NSCoder
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)portCoderWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (void)dispatch;
- (id)decodePortObject;
- (void)encodePortObject:(id)arg1;
- (id)_connection;
- (id)connection;
- (BOOL)isByref;
- (BOOL)isBycopy;

@end

@interface NSDOStreamData : NSMutableData
{
    id refObject;
    struct {
        id data;
        char *datap;
        char *limitp;
        char *startp;
        id callback;
        char datapVM;
    } stream;
}

- (unsigned int)length;
- (void *)mutableBytes;
- (const void *)bytes;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSUnkeyedPortCoder : NSConcretePortCoder
{
    id sndPort;
    id rcvPort;
    NSDOStreamData *doStreamData;
    NSMutableArray *components;
    NSMutableArray *importedObjects;
    unsigned int componentIndex;
    BOOL isBycopy;
    BOOL isByref;
    BOOL isValid;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)_enableLogging:(BOOL)arg1;
- (id)decodeRetainedObject;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeObject:(id)arg1 isBycopy:(BOOL)arg2 isByref:(BOOL)arg3;
- (void)decodeReturnValue:(id)arg1;
- (void)encodeReturnValue:(id)arg1;
- (id)decodeInvocation;
- (void)encodeInvocation:(id)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (id)decodePortObject;
- (void)encodePortObject:(id)arg1;
- (void *)decodeBytesWithReturnedLength:(unsigned int *)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned int)arg2;
- (id)decodeDataObject;
- (void)encodeDataObject:(id)arg1;
- (int)versionForClassName:(id)arg1;
- (BOOL)isByref;
- (BOOL)isBycopy;
- (id)_proxyForLocalObject:(id)arg1;
- (id)connection;
- (void)importObject:(id)arg1;
- (id)importedObjects;
- (id)finishedComponents;
- (id)components;
- (void)dealloc;
- (void)invalidate;
- (void)dispatch;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (id)debugDescription;

@end

@interface NSPortNameServer : NSObject
{
}

+ (id)defaultPortNameServer;
+ (id)systemDefaultPortNameServer;
- (id)portForName:(id)arg1 onHost:(id)arg2;
- (BOOL)registerPort:(id)arg1 forName:(id)arg2;
- (BOOL)removePortForName:(id)arg1;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)portForName:(id)arg1;

@end

@interface NSMachBootstrapServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (BOOL)removePortForName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)servicePortWithName:(id)arg1;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1;
- (id)portForName:(id)arg1 options:(unsigned int)arg2;

@end

@interface NSMessagePortNameServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (BOOL)removePortForName:(id)arg1;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)portForName:(id)arg1;

@end

@interface NSSocketPort : NSPort
{
    void *_receiver;
    id _connectors;
    void *_loops;
    void *_data;
    id _signature;
    id _delegate;
    id _lock;
    unsigned int _maxSize;
    unsigned int _useCount;
    unsigned int _reserved;
}

+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned int)arg7;
+ (void)_fixNSSocketPortLeak;
+ (void)initialize;
- (void)_handleMessage:(struct __CFData *)arg1 from:(struct __CFData *)arg2 socket:(struct __CFSocket *)arg3;
- (void)handlePortMessage:(id)arg1;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned int)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned int)arg4;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (struct __CFSocket *)_sendingSocketForPort:(id)arg1 beforeTime:(double)arg2;
- (id)description;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (void)finalize;
- (void)dealloc;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 socket:(int)arg4;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)initRemoteWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)_initRemoteWithSignature:(id)arg1;
- (id)initRemoteWithTCPPort:(unsigned short)arg1 host:(id)arg2;
- (id)initWithTCPPort:(unsigned short)arg1;
- (id)init;
- (id)_initWithRetainedCFSocket:(struct __CFSocket *)arg1 protocolFamily:(int)arg2 socketType:(int)arg3 protocol:(int)arg4;
- (id)address;
- (int)socket;
- (int)protocol;
- (int)socketType;
- (int)protocolFamily;
- (id)signature;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)handleConnDeath:(id)arg1;
- (void)invalidate;
- (void)_incrementUseCount;
- (BOOL)isValid;

@end

@interface NSUndoManagerProxy : NSProxy
{
    NSUndoManager *_manager;
}

- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)superRelease;
- (oneway void)release;
- (BOOL)_tryRetain;
- (id)retain;
- (id)initWithManager:(id)arg1;

@end

@interface NSUndoManager : NSObject
{
    id _undoStack;
    id _redoStack;
    NSArray *_runLoopModes;
    unsigned long long _NSUndoManagerPrivate1;
    id _target;
    id _proxy;
    void *_NSUndoManagerPrivate2;
    void *_NSUndoManagerPrivate3;
}

+ (void)_endTopLevelGroupings;
+ (void)_setEndsTopLevelGroupingsAfterRunLoopIterations:(BOOL)arg1;
- (id)redoMenuTitleForUndoActionName:(id)arg1;
- (id)undoMenuTitleForUndoActionName:(id)arg1;
- (id)redoMenuItemTitle;
- (id)undoMenuItemTitle;
- (BOOL)redoActionIsDiscardable;
- (BOOL)undoActionIsDiscardable;
- (void)setActionIsDiscardable:(BOOL)arg1;
- (void)setActionName:(id)arg1;
- (void)_setGroupIdentifier:(id)arg1;
- (id)redoActionName;
- (id)undoActionName;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)_forwardTargetInvocation:(id)arg1;
- (void)_registerUndoObject:(id)arg1;
- (id)_methodSignatureForTargetSelector:(SEL)arg1;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)removeAllActionsWithTarget:(id)arg1;
- (void)removeAllActions;
- (BOOL)isRedoing;
- (BOOL)isUndoing;
- (BOOL)canRedo;
- (BOOL)canUndo;
- (void)redo;
- (void)undoNestedGroup;
- (void)undo;
- (id)runLoopModes;
- (void)setRunLoopModes:(id)arg1;
- (unsigned int)levelsOfUndo;
- (void)setLevelsOfUndo:(unsigned int)arg1;
- (void)setGroupsByEvent:(BOOL)arg1;
- (BOOL)groupsByEvent;
- (BOOL)isUndoRegistrationEnabled;
- (void)enableUndoRegistration;
- (void)disableUndoRegistration;
- (void)endUndoGrouping;
- (BOOL)_endUndoGroupRemovingIfEmpty:(BOOL)arg1;
- (int)groupingLevel;
- (void)beginUndoGrouping;
- (void)_postCheckpointNotification;
- (void)_prepareEventGrouping;
- (void)_cancelAutomaticTopLevelGroupEnding;
- (void)_scheduleAutomaticTopLevelGroupEnding;
- (void)_delayAutomaticTermination:(double)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)_rollbackUndoGrouping;
- (void)_commitUndoGrouping;
- (void)_processEndOfEventNotification:(id)arg1;
- (BOOL)_shouldCoalesceTypingForText:(id)arg1:(id)arg2;
- (id)_undoStack;

@end

@interface _NSUndoObject : NSObject
{
    _NSUndoObject *next;
    _NSUndoObject *previous;
    id _target;
}

- (id)target;
- (void)invoke;
- (BOOL)isEndMark;
- (BOOL)isBeginMark;
- (id)initWithTarget:(id)arg1;
- (id)init;

@end

@interface _NSUndoBeginMark : _NSUndoObject
{
    id _groupIdentifier;
    BOOL _isDiscardable;
}

- (id)description;
- (BOOL)isBeginMark;
- (void)setDiscardable:(BOOL)arg1;
- (BOOL)isDiscardable;
- (id)groupIdentifier;
- (void)setGroupIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface _NSUndoEndMark : _NSUndoObject
{
}

- (id)description;
- (BOOL)isEndMark;

@end

@interface _NSUndoLightInvocation : _NSUndoObject
{
    SEL _selector;
    id _arg;
}

- (id)description;
- (id)_argument;
- (void)dealloc;
- (void)invoke;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;

@end

@interface _NSUndoInvocation : _NSUndoObject
{
    NSInvocation *_invocation;
}

- (id)description;
- (void)dealloc;
- (void)invoke;
- (id)initWithTarget:(id)arg1 invocation:(id)arg2;

@end

@interface _NSUndoStack : NSObject
{
    unsigned int _max;
    unsigned int _count;
    unsigned int _nestingLevel;
    _NSUndoObject *_head;
}

- (id)description;
- (void)removeObject:(id)arg1;
- (void)removeAllObjectsWithTarget:(id)arg1;
- (void)removeAllObjects;
- (unsigned int)nestingLevel;
- (BOOL)popAndInvoke;
- (void)setDiscardable:(BOOL)arg1;
- (BOOL)isDiscardable;
- (void)markEnd;
- (void)markBegin;
- (id)topUndoObject;
- (id)groupIdentifier;
- (void)setGroupIdentifier:(id)arg1;
- (id)_beginMark;
- (id)popUndoObject;
- (void)push:(id)arg1;
- (void)setMax:(unsigned int)arg1;
- (unsigned int)count;
- (unsigned int)max;
- (void)dealloc;
- (id)init;
- (void)_removeBottom;

@end

@interface _NSNestedDictionary : NSMutableDictionary
{
    id _locals;
    id _bindings;
}

- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectEnumerator;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (id)_recursiveAllValues;
- (id)_recursiveAllKeys;

@end

@interface _NSPredicateUtilities : NSObject
{
}

+ (id)_parserableCollectionDescription:(id)arg1;
+ (id)_parserableDateDescription:(id)arg1;
+ (id)_parserableStringDescription:(id)arg1;
+ (BOOL)_isReservedWordInParser:(id)arg1;
+ (id)inverseOrderKey:(id)arg1;
+ (id)distinct:(id)arg1;
+ (id)noindex:(id)arg1;
+ (id)onesComplement:(id)arg1;
+ (id)rightshift:(id)arg1 by:(id)arg2;
+ (id)leftshift:(id)arg1 by:(id)arg2;
+ (id)bitwiseXor:(id)arg1 with:(id)arg2;
+ (id)bitwiseOr:(id)arg1 with:(id)arg2;
+ (id)bitwiseAnd:(id)arg1 with:(id)arg2;
+ (id)now;
+ (id)objectFrom:(id)arg1 withIndex:(id)arg2;
+ (id)randomn:(id)arg1;
+ (id)random;
+ (id)castObject:(id)arg1 toType:(id)arg2;
+ (id)_convertStringToNumber:(id)arg1;
+ (id)lowercase:(id)arg1;
+ (id)uppercase:(id)arg1;
+ (id)trunc:(id)arg1;
+ (id)abs:(id)arg1;
+ (id)ceiling:(id)arg1;
+ (id)floor:(id)arg1;
+ (id)exp:(id)arg1;
+ (id)raise:(id)arg1 toPower:(id)arg2;
+ (id)ln:(id)arg1;
+ (id)log:(id)arg1;
+ (id)sqrt:(id)arg1;
+ (id)modulus:(id)arg1 by:(id)arg2;
+ (id)divide:(id)arg1 by:(id)arg2;
+ (id)multiply:(id)arg1 by:(id)arg2;
+ (id)from:(id)arg1 subtract:(id)arg2;
+ (id)add:(id)arg1 to:(id)arg2;
+ (id)stddev:(id)arg1;
+ (id)mode:(id)arg1;
+ (id)median:(id)arg1;
+ (id)average:(id)arg1;
+ (id)max:(id)arg1;
+ (id)min:(id)arg1;
+ (id)count:(id)arg1;
+ (id)sum:(id)arg1;
+ (unsigned int)_getCommonTypeFor:(id)arg1;
+ (unsigned int)_getITypeFor:(const char *)arg1;

@end

@interface NSComparisonPredicate : NSPredicate
{
    void *_reserved2;
    NSPredicateOperator *_predicateOperator;
    NSExpression *_lhs;
    NSExpression *_rhs;
}

+ (id)predicateWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned int)arg3 type:(unsigned int)arg4 options:(unsigned int)arg5;
- (unsigned int)options;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (void)_acceptExpressions:(id)arg1 flags:(unsigned int)arg2;
- (void)_acceptOperator:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setPredicateOperator:(id)arg1;
- (id)predicateOperator;
- (SEL)customSelector;
- (id)rightExpression;
- (id)leftExpression;
- (unsigned int)comparisonPredicateModifier;
- (unsigned int)predicateOperatorType;
- (id)predicateFormat;
- (void)dealloc;
- (id)initWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)keyPathExpressionForString:(id)arg1;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned int)arg3 type:(unsigned int)arg4 options:(unsigned int)arg5;
- (id)generateMetadataDescription;

@end

@interface NSCompoundPredicate : NSPredicate
{
    void *_reserved2;
    unsigned int _type;
    NSArray *_subpredicates;
}

+ (id)_operatorForType:(unsigned int)arg1;
+ (id)notPredicateWithSubpredicate:(id)arg1;
+ (id)orPredicateWithSubpredicates:(id)arg1;
+ (id)andPredicateWithSubpredicates:(id)arg1;
- (id)predicateOperator;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (void)_acceptSubpredicates:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)_subpredicateDescription:(id)arg1;
- (id)subpredicates;
- (id)_predicateOperator;
- (unsigned int)compoundPredicateType;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithType:(unsigned int)arg1 subpredicates:(id)arg2;
- (id)generateMetadataDescription;

@end

@interface NSFalsePredicate : NSPredicate
{
}

+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (id)predicateFormat;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;

@end

@interface NSPredicate : NSObject <NSCoding, NSCopying>
{
    void *_reserved;
}

+ (id)predicateWithBlock:(id)arg1;
+ (id)predicateWithValue:(BOOL)arg1;
+ (id)predicateWithFormat:(id)arg1 arguments:(char *)arg2;
+ (id)predicateWithFormat:(id)arg1;
+ (id)predicateWithFormat:(id)arg1 argumentArray:(id)arg2;
+ (struct __CFLocale *)retainedLocale;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned int)arg2;
+ (void)initialize;
- (id)predicateFormat;
- (id)description;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (BOOL)evaluateWithObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)generateMetadataDescription;

@end

@interface NSTruePredicate : NSPredicate
{
}

+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (id)predicateFormat;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;

@end

@interface NSAggregateExpression : NSExpression
{
    id _collection;
}

- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)collection;
- (id)constantValue;
- (id)predicateFormat;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCollection:(id)arg1;

@end

@interface NSAnyKeyExpression : NSExpression
{
}

- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSBlockExpression : NSExpression
{
    id _block;
    NSArray *_arguments;
}

- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)predicateFormat;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)arguments;
- (id)expressionBlock;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(unsigned int)arg1 block:(id)arg2 arguments:(void)arg3;

@end

@interface NSConstantValueExpression : NSExpression
{
    id constantValue;
}

- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)expressionValueWithObject:(id)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)constantValue;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

@interface NSExpression : NSObject <NSCoding, NSCopying>
{
    void *_reserved;
    unsigned int _expressionType;
}

+ (id)expressionForBlock:(id)arg1 arguments:(void)arg2;
+ (id)expressionForMinusSet:(id)arg1 with:(id)arg2;
+ (id)expressionForIntersectSet:(id)arg1 with:(id)arg2;
+ (id)expressionForUnionSet:(id)arg1 with:(id)arg2;
+ (id)expressionForFunction:(id)arg1 arguments:(id)arg2;
+ (id)expressionForKeyPath:(id)arg1;
+ (id)_newKeyPathExpressionForString:(id)arg1;
+ (id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;
+ (id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2;
+ (id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
+ (id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
+ (id)expressionForAggregate:(id)arg1;
+ (id)expressionForSymbolicString:(id)arg1;
+ (id)expressionForVariable:(id)arg1;
+ (id)expressionForEvaluatedObject;
+ (id)expressionForConstantValue:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 arguments:(char *)arg2;
+ (id)expressionWithFormat:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)_shouldUseParensWithDescription;
- (id)expressionBlock;
- (id)falseExpression;
- (id)trueExpression;
- (id)subexpression;
- (id)collection;
- (id)predicate;
- (id)rightExpression;
- (id)leftExpression;
- (id)arguments;
- (SEL)selector;
- (id)operand;
- (id)function;
- (id)variable;
- (id)constantValue;
- (id)keyPath;
- (unsigned int)expressionType;
- (id)predicateFormat;
- (id)description;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithExpressionType:(unsigned int)arg1;

@end

@interface NSFunctionExpression : NSExpression
{
    NSExpression *_operand;
    SEL _selector;
    NSArray *_arguments;
}

- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)_shouldUseParensWithDescription;
- (id)predicateFormat;
- (id)binaryOperatorForSelector;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)arguments;
- (SEL)selector;
- (id)operand;
- (id)function;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
- (id)initWithExpressionType:(unsigned int)arg1 operand:(id)arg2 selector:(SEL)arg3 argumentArray:(id)arg4;
- (id)initWithSelector:(SEL)arg1 argumentArray:(id)arg2;
- (void)dealloc;

@end

@interface NSKeyPathExpression : NSFunctionExpression
{
}

- (id)keyPath;
- (id)predicateFormat;
- (id)pathExpression;
- (id)initWithOperand:(id)arg1 andKeyPath:(id)arg2;
- (id)initWithKeyPath:(id)arg1;
- (void)dealloc;

@end

@interface NSKeyPathSpecifierExpression : NSExpression
{
    NSString *_value;
}

- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)keyPath;
- (id)constantValue;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

@interface NSSelfExpression : NSExpression
{
}

+ (id)defaultInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)predicateFormat;
- (id)init;
- (id)_initPrivate;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)autorelease;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)retain;

@end

@interface NSSetExpression : NSExpression
{
    NSExpression *_left;
    NSExpression *_right;
}

- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)rightExpression;
- (id)leftExpression;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithType:(unsigned int)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;

@end

@interface NSSubqueryExpression : NSExpression
{
    NSExpression *_collection;
    NSExpression *_variableExpression;
    NSPredicate *_subpredicate;
}

- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)_shouldUseParensWithDescription;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)predicate;
- (id)variable;
- (id)variableExpression;
- (id)collection;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithExpression:(id)arg1 usingIteratorExpression:(id)arg2 predicate:(id)arg3;
- (id)initWithExpression:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
- (void)dealloc;

@end

@interface NSSymbolicExpression : NSExpression
{
    NSString *_token;
}

- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)constantValue;
- (id)predicateFormat;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface NSTernaryExpression : NSExpression
{
    NSPredicate *_predicate;
    NSExpression *_trueExpression;
    NSExpression *_falseExpression;
}

- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)falseExpression;
- (id)trueExpression;
- (id)predicate;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;

@end

@interface NSVariableAssignmentExpression : NSExpression
{
    NSVariableExpression *_assignmentVariable;
    NSExpression *_subexpression;
}

- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)subexpression;
- (id)variable;
- (id)assignmentVariable;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAssignmentExpression:(id)arg1 expression:(id)arg2;
- (id)initWithAssignmentVariable:(id)arg1 expression:(id)arg2;
- (void)dealloc;

@end

@interface NSVariableExpression : NSExpression
{
    NSString *_variable;
}

- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)variable;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)dealloc;

@end

@interface NSBetweenPredicateOperator : NSPredicateOperator
{
}

- (void)_setOptions:(unsigned int)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSComparisonPredicateOperator : NSPredicateOperator
{
    unsigned int _variant;
    unsigned int _options;
}

- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)options;
- (unsigned int)variant;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 variant:(unsigned int)arg3 options:(unsigned int)arg4;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 variant:(unsigned int)arg3;

@end

@interface NSCompoundPredicateOperator : NSPredicateOperator
{
}

+ (id)notPredicateOperator;
+ (id)orPredicateOperator;
+ (id)andPredicateOperator;
- (BOOL)evaluatePredicates:(id)arg1 withObject:(id)arg2 substitutionVariables:(id)arg3;
- (BOOL)evaluatePredicates:(id)arg1 withObject:(id)arg2;
- (id)symbol;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCustomPredicateOperator : NSPredicateOperator
{
    SEL _selector;
}

- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)symbol;
- (BOOL)isEqual:(id)arg1;
- (SEL)selector;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCustomSelector:(SEL)arg1 modifier:(unsigned int)arg2;

@end

@interface NSEqualityPredicateOperator : NSPredicateOperator
{
    BOOL _negate;
    unsigned int _options;
}

- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (void)_setOptions:(unsigned int)arg1;
- (unsigned int)options;
- (void)setNegation:(BOOL)arg1;
- (BOOL)isNegation;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 negate:(BOOL)arg3 options:(unsigned int)arg4;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 negate:(BOOL)arg3;

@end

@interface NSInPredicateOperator : NSPredicateOperator
{
    unsigned int _flags;
    NSSubstringPredicateOperator *_stringVersion;
}

- (unsigned int)options;
- (void)_setOptions:(unsigned int)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)flags;
- (id)symbol;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)stringVersion;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 options:(unsigned int)arg3;

@end

@interface NSLikePredicateOperator : NSMatchingPredicateOperator
{
}

- (BOOL)_shouldEscapeForLike;
- (SEL)selector;
- (id)symbol;

@end

@interface NSMatchingPredicateOperator : NSStringPredicateOperator
{
    int _contextLock;
    CDStruct_c69bce23 *_regexContext;
}

- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (BOOL)_shouldEscapeForLike;
- (SEL)selector;
- (id)symbol;
- (void)finalize;
- (void)dealloc;
- (void)_clearContext;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 variant:(unsigned int)arg3;

@end

@interface NSPredicateOperator : NSObject <NSCoding, NSCopying>
{
    unsigned int _operatorType;
    unsigned int _modifier;
}

+ (id)operatorWithCustomSelector:(SEL)arg1 modifier:(unsigned int)arg2;
+ (id)_newOperatorWithType:(unsigned int)arg1 modifier:(unsigned int)arg2 options:(unsigned int)arg3;
+ (id)operatorWithType:(unsigned int)arg1 modifier:(unsigned int)arg2 options:(unsigned int)arg3;
+ (SEL)_getSelectorForType:(unsigned int)arg1;
+ (id)_getSymbolForType:(unsigned int)arg1;
- (void)_setModifier:(unsigned int)arg1;
- (unsigned int)options;
- (void)_setOptions:(unsigned int)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (BOOL)performOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)modifier;
- (id)symbol;
- (unsigned int)operatorType;
- (SEL)selector;
- (id)description;
- (id)predicateFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 options:(unsigned int)arg3;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2;
- (id)initWithOperatorType:(unsigned int)arg1;

@end

@interface NSStringPredicateOperator : NSPredicateOperator
{
    unsigned int _flags;
}

- (unsigned int)options;
- (void)_setOptions:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)flags;
- (id)_modifierString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 variant:(unsigned int)arg3;

@end

@interface NSSubstringPredicateOperator : NSStringPredicateOperator
{
    unsigned int _position;
}

- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (id)symbol;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)position;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithOperatorType:(unsigned int)arg1 modifier:(unsigned int)arg2 variant:(unsigned int)arg3 position:(unsigned int)arg4;
- (SEL)selector;

@end

@interface _NSPredicateOperatorUtilities : NSObject
{
}

+ (long)copyRegexFindSafePattern:(id)arg1 toBuffer:(unsigned short *)arg2;
+ (BOOL)doRegexForString:(id)arg1 pattern:(id)arg2 likeProtect:(BOOL)arg3 flags:(unsigned int)arg4 context:(CDStruct_c69bce23 *)arg5;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned int)arg2;
+ (struct __CFLocale *)retainedLocale;

@end

@interface NSBlockPredicate : NSPredicate
{
    id _block;
}

- (id)_predicateBlock;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned int)arg2;
- (id)predicateFormat;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithBlock:(id)arg1;

@end

@interface NSAttributedString : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)_setAttributedDictionaryClass:(Class)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)enumerateAttribute:(id)arg1 inRange:(struct _NSRange)arg2 options:(unsigned int)arg3 usingBlock:(id)arg4;
- (void)enumerateAttributesInRange:(struct _NSRange)arg1 options:(unsigned int)arg2 usingBlock:(id)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned int)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqualToAttributedString:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (unsigned int)length;
- (id)attributedStringByWeaklyAddingAttributes:(id)arg1;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1 replacingCharactersInRanges:(const struct _NSRange *)arg2 numberOfRanges:(int)arg3 withString:(id)arg4;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)string;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)_createAttributedSubstringWithRange:(struct _NSRange)arg1;
- (unsigned long)_cfTypeID;

@end

@interface NSConcreteAttributedString : NSAttributedString
{
    NSString *string;
    NSRLEArray *attributes;
}

- (id)_runArrayHoldingAttributes;
- (id)string;
- (unsigned int)length;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;

@end

@interface NSMutableAttributedString : NSAttributedString
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)endEditing;
- (void)beginEditing;
- (void)setAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendAttributedString:(id)arg1;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned int)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributesWeakly:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (id)mutableString;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;

@end

@interface NSConcreteMutableAttributedString : NSMutableAttributedString
{
    NSMutableString *mutableString;
    NSMutableRLEArray *mutableAttributes;
    struct {
        unsigned int attributeFixingDisabled:8;
        unsigned int :24;
    } fields;
}

+ (Class)_mutableStringClass;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)edited:(unsigned int)arg1 range:(struct _NSRange)arg2 changeInLength:(int)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (id)_runArrayHoldingAttributes;
- (id)string;
- (unsigned int)length;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;

@end

@interface NSMutableStringProxyForMutableAttributedString : NSMutableString
{
    NSMutableAttributedString *mutableAttributedString;
}

- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (void)finalize;
- (void)dealloc;
- (id)initWithMutableAttributedString:(id)arg1;

@end

@interface NSRLEArray : NSObject <NSCopying, NSMutableCopying>
{
    struct _NSRefCountedRunArray *theList;
}

- (id)description;
- (unsigned int)count;
- (id)objectAtRunIndex:(unsigned int)arg1 length:(unsigned int *)arg2;
- (id)objectAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2 runIndex:(unsigned int *)arg3;
- (id)objectAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)_makeNewListFrom:(struct _NSRefCountedRunArray *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRefCountedRunArray:(struct _NSRefCountedRunArray *)arg1;
- (id)init;

@end

@interface NSMutableRLEArray : NSRLEArray
{
}

- (void)deleteObjectsInRange:(struct _NSRange)arg1;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObject:(id)arg2 length:(unsigned int)arg3;
- (void)insertObject:(id)arg1 range:(struct _NSRange)arg2;
- (void)_setBlockCapacity:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSSimpleAttributeDictionary : NSDictionary
{
    unsigned int numElements;
    unsigned int refCount;
    struct _NSSimpleAttributeDictionaryElement elements[1];
}

+ (id)newWithDictionary:(id)arg1;
+ (id)emptyAttributeDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned int)slotForKey:(id)arg1;
- (unsigned int)count;
- (id)newWithKey:(id)arg1 object:(id)arg2;

@end

@interface NSSimpleAttributeDictionaryEnumerator : NSEnumerator
{
    NSSimpleAttributeDictionary *dictionary;
    unsigned int nextElement;
}

- (void)finalize;
- (void)dealloc;
- (id)nextObject;
- (id)initWithAttributeDictionary:(id)arg1;

@end

@interface NSKeyValueChangeDictionary : NSDictionary
{
    CDStruct_26283fc3 _details;
    NSObject *_originalObservable;
    BOOL _isPriorNotification;
    BOOL _isRetainingObjects;
}

- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (void)dealloc;
- (void)retainObjects;
- (void)setOriginalObservable:(id)arg1;
- (void)setDetailsNoCopy:(CDStruct_26283fc3)arg1 originalObservable:(id)arg2;
- (id)initWithDetailsNoCopy:(CDStruct_26283fc3)arg1 originalObservable:(id)arg2 isPriorNotification:(BOOL)arg3;

@end

@interface _NSJSONWriter : NSObject
{
    NSOutputStream *outputStream;
    int kind;
    char *dataBuffer;
    unsigned int dataBufferLen;
    unsigned int dataLen;
    BOOL freeDataBuffer;
    char *tempBuffer;
    unsigned int tempBufferLen;
    int totalDataWritten;
}

- (int)appendString:(id)arg1 range:(struct _NSRange)arg2;
- (void)resizeTemporaryBuffer:(unsigned long)arg1;
- (int)writeRootObject:(id)arg1 toStream:(id)arg2 options:(unsigned int)arg3 error:(id *)arg4;
- (id)dataWithRootObject:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface _NSJSONReader : NSObject
{
    id input;
    int kind;
    NSError *error;
}

+ (BOOL)validForJSON:(id)arg1 depth:(unsigned int)arg2 allowFragments:(BOOL)arg3;
- (id)parseStream:(id)arg1 options:(unsigned int)arg2;
- (id)parseData:(id)arg1 options:(unsigned int)arg2;
- (unsigned int)findEncodingFromData:(id)arg1 withBOMSkipLength:(unsigned int *)arg2;
- (id)parseUTF8JSONData:(id)arg1 skipBytes:(unsigned int)arg2 options:(unsigned int)arg3;
- (void)setError:(id)arg1;
- (id)error;
- (void)dealloc;
- (id)init;

@end

@interface NSJSONSerialization : NSObject
{
    void *reserved[6];
}

+ (id)JSONObjectWithStream:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (int)writeJSONObject:(id)arg1 toStream:(id)arg2 options:(unsigned int)arg3 error:(id *)arg4;
+ (id)JSONObjectWithData:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (id)dataWithJSONObject:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (BOOL)isValidJSONObject:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSFileWrapperMoreIVars : NSObject
{
    NSURL *contentsURL;
    BOOL contentsMustBeReadWithoutMapping;
    BOOL attributesMustBeWrittenSoNoHardLinking;
    NSHashTable *parents;
    NSError *contentsLazyReadingError;
    NSDictionary *cachedDirectoryChildrenAsDictionary;
}

@end

@interface NSFileWrapper : NSObject <NSCoding>
{
    NSDictionary *_fileAttributes;
    NSString *_preferredFileName;
    NSString *_fileName;
    id _contents;
    id _icon;
    id _moreVars;
}

+ (id)_newContentsAtURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 oldChildrenByUniqueFileName:(id)arg4 options:(unsigned int)arg5 error:(id *)arg6;
+ (BOOL)_canSafelyMapFilesAtPath:(id)arg1;
+ (BOOL)_forPath:(id)arg1 getItemKind:(id *)arg2 modificationDate:(id *)arg3;
+ (void)initialize;
+ (void)_removeTemporaryDirectoryAtURL:(id)arg1;
+ (BOOL)_finishWritingToURL:(id)arg1 byTakingContentsFromItemAtURL:(id)arg2 addingAttributes:(id)arg3 usingTemporaryDirectoryAtURL:(id)arg4 backupFileName:(id)arg5 error:(id *)arg6;
+ (BOOL)_finishWritingToURL:(id)arg1 byMovingItemAtURL:(id)arg2 addingAttributes:(id)arg3 error:(id *)arg4;
+ (void)_writeAttributes:(id)arg1 toURL:(id)arg2;
+ (id)_temporaryDirectoryURLForWritingToURL:(id)arg1 error:(id *)arg2;
+ (id)_pathForURL:(id)arg1 reading:(BOOL)arg2 error:(id *)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)symbolicLinkDestinationURL;
- (id)regularFileContents;
- (id)keyForFileWrapper:(id)arg1;
- (id)fileWrappers;
- (void)removeFileWrapper:(id)arg1;
- (void)_removeChild:(id)arg1 forUniqueFileName:(id)arg2;
- (id)_uniqueFileNameOfChild:(id)arg1;
- (id)addRegularFileWithContents:(id)arg1 preferredFilename:(id)arg2;
- (id)addFileWrapper:(id)arg1;
- (void)_resetFileModificationDate;
- (id)_addChild:(id)arg1 forUniqueFileName:(id)arg2;
- (void)_initDirectoryContents;
- (void)_removeParent:(id)arg1;
- (void)_addParent:(id)arg1;
- (id)serializedRepresentation;
- (id)_newImpl;
- (id)_initWithImpl:(id)arg1 preferredFileName:(id)arg2 uniqueFileName:(id)arg3 docInfo:(id)arg4 iconData:(id)arg5;
- (BOOL)writeToURL:(id)arg1 options:(unsigned int)arg2 originalContentsURL:(id)arg3 error:(id *)arg4;
- (void)_updateDescendantFileNames;
- (id)_attributesToWrite;
- (BOOL)_writeContentsToURL:(id)arg1 path:(id)arg2 originalContentsURL:(id)arg3 tryHardLinking:(BOOL)arg4 didHardLinking:(char *)arg5 error:(id *)arg6;
- (void)_forWritingToURL:(id)arg1 returnContentsLazyReadingError:(id *)arg2;
- (BOOL)readFromURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (BOOL)_readContentsFromURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5;
- (BOOL)matchesContentsOfURL:(id)arg1;
- (BOOL)_matchesItemKind:(id)arg1 modificationDate:(id)arg2;
- (id)fileAttributes;
- (void)setFileAttributes:(id)arg1;
- (id)filename;
- (void)setFilename:(id)arg1;
- (id)preferredFilename;
- (void)setPreferredFilename:(id)arg1;
- (void)_observePreferredFileNameOfChild:(id)arg1;
- (BOOL)isSymbolicLink;
- (BOOL)isRegularFile;
- (BOOL)isDirectory;
- (void)dealloc;
- (id)initWithSerializedRepresentation:(id)arg1;
- (id)initSymbolicLinkWithDestinationURL:(id)arg1;
- (id)initRegularFileWithContents:(id)arg1;
- (id)initDirectoryWithFileWrappers:(id)arg1;
- (id)initWithURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)_init;
- (id)init;
- (id)_fullDescription:(BOOL)arg1;

@end

@interface NSPageData : NSData
{
    NSData *data;
    NSDate *_originalFileModDate;
    NSString *_originalFilePath;
}

+ (int)_umask;
+ (void)initialize;
- (id)data;
- (id)initWithDataNoCopy:(id)arg1;
- (id)deserializer;
- (id)initFromSerializerStream:(id)arg1 length:(unsigned int)arg2;
- (unsigned int)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (void)dealloc;
- (id)_mappedFile;
- (id)initWithContentsOfMappedFile:(id)arg1 withFileAttributes:(id)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (void)_setOriginalFileInfoFromFileAttributes:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2;
- (id)init;
- (const void *)bytes;
- (unsigned int)length;
- (unsigned int)writeFile:(id)arg1;
- (unsigned int)writeFd:(int)arg1;

@end

@interface NSAKSerializerStream : NSObject <NSSerializerStream>
{
    void *memory;
    unsigned int current;
    unsigned int max;
    struct __CFDictionary *roomForIntLocations;
}

- (void)copySerializationInto:(void *)arg1;
- (BOOL)writeToPath:(id)arg1 safely:(BOOL)arg2;
- (void)writeDelayedInt:(unsigned int)arg1 for:(int)arg2;
- (unsigned int)writeRoomForInt:(int *)arg1;
- (unsigned int)writeData:(const void *)arg1 length:(unsigned int)arg2;
- (unsigned int)writeAlignedDataSize:(unsigned int)arg1;
- (unsigned int)writeInt:(unsigned int)arg1;
- (void)finalize;
- (void)dealloc;

@end

@interface NSAKDeserializerStream : NSObject <NSDeserializerStream>
{
    const void *memory;
    const char *current;
    unsigned int left;
    unsigned int max;
    BOOL freeWhenDone;
}

- (void)readData:(void *)arg1 length:(unsigned int)arg2;
- (unsigned int)readAlignedDataSize;
- (int)readInt;
- (id)initFromPath:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;

@end

@interface NSAKSerializer : NSObject
{
    id ss;
}

- (unsigned int)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;
- (unsigned int)serializePListKeyIn:(id)arg1 key:(id)arg2 value:(id)arg3;
- (unsigned int)serializePropertyList:(id)arg1;
- (unsigned int)serializeListItemIn:(id)arg1 at:(unsigned int)arg2;
- (unsigned int)serializeList:(id)arg1;
- (unsigned int)serializeString:(id)arg1;
- (unsigned int)serializeData:(id)arg1;
- (unsigned int)serializeObject:(id)arg1;
- (id)serializerStream;
- (void)dealloc;
- (id)initForSerializerStream:(id)arg1;

@end

@interface NSAKDeserializer : NSObject
{
    id ds;
}

- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned int)arg3;
- (id)deserializePListKeyIn:(id)arg1;
- (id)deserializePList:(id)arg1;
- (id)deserializeNewPList;
- (id)deserializeListItemIn:(id)arg1 at:(unsigned int)arg2 length:(unsigned int)arg3;
- (id)deserializeList:(id)arg1;
- (id)deserializeNewList;
- (id)deserializeString:(id)arg1;
- (id)deserializeNewKeyString;
- (id)deserializeNewString;
- (id)deserializeData:(id)arg1;
- (id)deserializeNewData;
- (id)deserializeNewObject;
- (id)deserializerStream;
- (void)dealloc;
- (id)initForDeserializerStream:(id)arg1;

@end

@interface NSRTFD : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

+ (void)initialize;
- (int)validatePath:(id)arg1 ignore:(id)arg2;
- (id)addData:(id)arg1 name:(id)arg2;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy:(id)arg1 into:(id)arg2;
- (id)removeFile:(id)arg1;
- (id)dataForFile:(id)arg1;
- (id)addLink:(id)arg1;
- (id)addFile:(id)arg1;
- (id)_getDocInfoForKey:(id)arg1;
- (id)addCommon:(id)arg1 docInfo:(id)arg2 value:(id)arg3 zone:(struct _NSZone *)arg4;
- (id)replaceFile:(id)arg1 path:(id)arg2;
- (id)replaceFile:(id)arg1 data:(id)arg2;
- (id)getDocument:(id)arg1 docInfo:(id)arg2;
- (id)uniqueKey:(id)arg1;
- (id)createUniqueKey:(id)arg1;
- (id)createRandomKey:(id)arg1;
- (id)initWithDataRepresentation:(id)arg1;
- (id)dataRepresentation;
- (unsigned int)saveToDocument:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3;
- (unsigned int)internalSaveTo:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3;
- (id)tmpNameFromPath:(id)arg1;
- (id)tmpNameFromPath:(id)arg1 extension:(id)arg2;
- (id)nameFromPath:(id)arg1 extra:(id)arg2;
- (unsigned int)internalSaveTo:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3 temp:(id)arg4 backup:(id)arg5;
- (unsigned int)internalWritePath:(id)arg1 errorHandler:(id)arg2 remapContents:(BOOL)arg3 hardLinkPath:(id)arg4;
- (unsigned int)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (unsigned int)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 markBusy:(BOOL)arg5 hardLinkPath:(id)arg6;
- (unsigned int)initFromDocument:(id)arg1;
- (unsigned int)initUnixFile:(id)arg1;
- (id)setPackage:(BOOL)arg1;
- (BOOL)isPackage;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithObjects:(id *)arg1 forKeys:(id *)arg2 count:(unsigned int)arg3;
- (id)init;
- (id)initFromElement:(id)arg1 ofDocument:(id)arg2;
- (unsigned int)addDirNamed:(id)arg1 lazy:(BOOL)arg2;
- (unsigned int)realAddDirNamed:(id)arg1;
- (unsigned int)insertItem:(id)arg1 path:(id)arg2 dirInfo:(id)arg3 zone:(struct _NSZone *)arg4 plist:(id)arg5;
- (unsigned int)addFileNamed:(id)arg1 fileAttributes:(id)arg2;
- (id)getDirInfo:(BOOL)arg1;
- (id)initWithPasteboardDataRepresentation:(id)arg1;
- (id)pasteboardDataRepresentation;
- (id)initFromSerialized:(id)arg1;
- (id)freeSerialized:(void *)arg1 length:(unsigned int)arg2;
- (id)serialize:(void **)arg1 length:(unsigned int *)arg2;
- (BOOL)_isLink:(id)arg1;

@end

@interface NSDocumentDeserializer : NSAKDeserializer
{
}

- (id)deserializeNewPList;
- (void)fixupDirInfo:(id)arg1;
- (id)deserializeNewData;

@end

@interface NSDirInfo : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

- (id)serializeToData;
- (unsigned int)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned int)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned int)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithObjects:(id *)arg1 forKeys:(id *)arg2 count:(unsigned int)arg3;
- (id)init;

@end

@interface NSDocInfo : NSObject <NSCopying>
{
    long time;
    unsigned short mode;
    struct {
        unsigned int isDir:1;
        unsigned int isSingleFile:1;
        unsigned int isSoftLink:1;
        unsigned int _pad:13;
    } flags;
}

- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFileAttributes:(id)arg1;
- (id)initFromInfo:(struct stat *)arg1;

@end

@interface NSDocumentSerializer : NSAKSerializer
{
}

- (unsigned int)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface NSDirInfoSerializer : NSAKSerializer
{
}

- (unsigned int)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface NSDirInfoDeserializer : NSAKDeserializer
{
}

- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned int)arg3;

@end

@interface NSLeafProxy <NSCopying>
{
    Class isa;
    NSString *dir;
    NSString *file;
    NSDocInfo *docInfo;
    int refCount;
    id realObject;
}

+ (void)forwardInvocation:(id)arg1;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isProxy;
- (void)dealloc;
- (unsigned int)retainCount;
- (id)autorelease;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (void)release;
- (id)retain;
- (void)reallyDealloc;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initDir:(id)arg1 file:(id)arg2 docInfo:(id)arg3;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface NSOrthography : NSObject <NSCopying, NSCoding>
{
}

+ (id)orthographyWithDominantScript:(id)arg1 languageMap:(id)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)allLanguages;
- (id)allScripts;
- (id)dominantLanguage;
- (id)dominantLanguageForScript:(id)arg1;
- (id)languagesForScript:(id)arg1;
- (unsigned int)orthographyFlags;
@property(readonly) NSDictionary *languageMap;
@property(readonly) NSString *dominantScript;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;

@end

@interface NSComplexOrthography : NSOrthography
{
    NSString *_dominantScript;
    NSDictionary *_languageMap;
    unsigned int _orthographyFlags;
}

+ (void)initialize;
- (unsigned int)orthographyFlags;
- (id)languageMap;
- (id)dominantScript;
- (void)dealloc;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;

@end

@interface NSSimpleOrthography : NSOrthography
{
    unsigned int _orthographyFlags;
}

+ (id)orthographyWithFlags:(unsigned int)arg1;
+ (void)initialize;
- (id)allLanguages;
- (id)allScripts;
- (id)dominantLanguage;
- (id)dominantLanguageForScript:(id)arg1;
- (id)languagesForScript:(id)arg1;
- (unsigned int)orthographyFlags;
- (id)languageMap;
- (id)dominantScript;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (id)initWithFlags:(unsigned int)arg1;

@end

@interface NSTextCheckingResult : NSObject <NSCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)transitInformationCheckingResultWithRange:(struct _NSRange)arg1 components:(id)arg2;
+ (id)phoneNumberCheckingResultWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2;
+ (id)regularExpressionCheckingResultWithRanges:(struct _NSRange *)arg1 count:(unsigned int)arg2 regularExpression:(id)arg3;
+ (id)correctionCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)replacementCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)dashCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)quoteCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)linkCheckingResultWithRange:(struct _NSRange)arg1 URL:(id)arg2;
+ (id)addressCheckingResultWithRange:(struct _NSRange)arg1 components:(id)arg2;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2;
+ (id)grammarCheckingResultWithRange:(struct _NSRange)arg1 details:(id)arg2;
+ (id)spellCheckingResultWithRange:(struct _NSRange)arg1;
+ (id)orthographyCheckingResultWithRange:(struct _NSRange)arg1 orthography:(id)arg2;
- (void *)underlyingResult;
- (id)phoneNumber;
- (id)regularExpression;
- (id)replacementString;
- (id)URL;
- (id)components;
- (id)addressComponents;
- (double)duration;
- (id)timeZone;
- (id)date;
- (id)grammarDetails;
- (id)orthography;
- (struct _NSRange)rangeAtIndex:(unsigned int)arg1;
- (unsigned int)numberOfRanges;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
@property(readonly) struct _NSRange range;
@property(readonly) unsigned long long resultType;
- (struct _NSRange)decodeRangeWithCoder:(id)arg1;
- (void)encodeRangeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSOrthographyCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSOrthography *_orthography;
}

- (id)orthography;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 orthography:(id)arg2;

@end

@interface NSSpellCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
}

- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithRange:(struct _NSRange)arg1;

@end

@interface NSGrammarCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSArray *_details;
}

- (id)grammarDetails;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 details:(id)arg2;

@end

@interface NSDateCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDate *_date;
    NSTimeZone *_timeZone;
    double _duration;
    NSDate *_referenceDate;
    id _underlyingResult;
    BOOL _timeIsSignificant;
    BOOL _timeIsApproximate;
}

@property(readonly) BOOL timeIsApproximate;
@property(readonly) BOOL timeIsSignificant;
@property(readonly) void *underlyingResult;
@property(readonly) NSDate *referenceDate;
@property(readonly) double duration;
@property(readonly) NSTimeZone *timeZone;
- (id)date;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6 timeIsSignificant:(BOOL)arg7 timeIsApproximate:(BOOL)arg8;

@end

@interface NSAddressCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDictionary *_components;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)components;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSLinkCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSURL *_url;
}

- (id)URL;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 URL:(id)arg2;

@end

@interface NSSubstitutionCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSString *_replacementString;
}

- (id)replacementString;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;

@end

@interface NSQuoteCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSDashCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSReplacementCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSCorrectionCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSRegularExpressionCheckingResult : NSTextCheckingResult
{
}

- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
@property(readonly) NSArray *rangeArray;
@property(readonly) NSRegularExpression *regularExpression;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned int)arg2 regularExpression:(id)arg3;

@end

@interface NSSimpleRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    struct _NSRange _ranges[3];
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned int)arg1;
- (unsigned int)numberOfRanges;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned int)arg2 regularExpression:(id)arg3;

@end

@interface NSExtendedRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    struct _NSRange _ranges[7];
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned int)arg1;
- (unsigned int)numberOfRanges;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned int)arg2 regularExpression:(id)arg3;

@end

@interface NSComplexRegularExpressionCheckingResult : NSRegularExpressionCheckingResult
{
    NSRegularExpression *_regularExpression;
    NSArray *_rangeArray;
}

- (id)rangeArray;
- (struct _NSRange)rangeAtIndex:(unsigned int)arg1;
- (unsigned int)numberOfRanges;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (id)regularExpression;
- (void)dealloc;
- (id)initWithRangeArray:(id)arg1 regularExpression:(id)arg2;
- (id)initWithRanges:(struct _NSRange *)arg1 count:(unsigned int)arg2 regularExpression:(id)arg3;

@end

@interface NSPhoneNumberCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSString *_phoneNumber;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)phoneNumber;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 phoneNumber:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSTransitInformationCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDictionary *_components;
    id _underlyingResult;
}

@property(readonly) void *underlyingResult;
- (id)components;
- (BOOL)_adjustRangesWithOffset:(int)arg1;
- (id)resultByAdjustingRangesWithOffset:(int)arg1;
- (struct _NSRange)range;
- (unsigned long long)resultType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2 underlyingResult:(void *)arg3;

@end

@interface NSPinyinString : NSString
{
    NSString *_string;
    unsigned int _syllableCount;
    unsigned int _score;
    unsigned int _rangeCount;
    unsigned int _replacementCount;
    unsigned int _transpositionCount;
    unsigned int _insertionCount;
    unsigned int _deletionCount;
    unsigned int _firstModificationIndex;
    struct _NSRange *_ranges;
    BOOL _lastSyllableIsPartial;
}

+ (id)prefixesForInputString:(id)arg1;
+ (id)alternativesForInputString:(id)arg1;
- (struct _NSRange)nonPinyinRangeAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfFirstModification;
- (unsigned int)numberOfDeletions;
- (unsigned int)numberOfInsertions;
- (unsigned int)numberOfTranspositions;
- (unsigned int)numberOfReplacements;
- (unsigned int)numberOfNonPinyinRanges;
- (unsigned int)score;
- (BOOL)lastSyllableIsPartial;
- (unsigned int)syllableCount;
- (id)string;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)nonPinyinIndexSet;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 syllableCount:(unsigned int)arg2 lastSyllableIsPartial:(BOOL)arg3 score:(unsigned int)arg4 replacementCount:(unsigned int)arg5 transpositionCount:(unsigned int)arg6 insertionCount:(unsigned int)arg7 deletionCount:(unsigned int)arg8 rangeCount:(unsigned int)arg9 ranges:(struct _NSRange *)arg10;
- (id)initWithString:(id)arg1 syllableCount:(unsigned int)arg2 lastSyllableIsPartial:(BOOL)arg3 score:(unsigned int)arg4 replacementCount:(unsigned int)arg5 transpositionCount:(unsigned int)arg6 insertionCount:(unsigned int)arg7 deletionCount:(unsigned int)arg8 indexOfFirstModification:(unsigned int)arg9 rangeCount:(unsigned int)arg10 ranges:(struct _NSRange *)arg11;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;

@end

@interface NSKeyedPortCoder : NSConcretePortCoder
{
    id sndPort;
    id rcvPort;
    NSMutableDictionary *root;
    NSMutableArray *containers;
    NSMutableArray *components;
    BOOL mainDataFinished;
    unsigned int nextGenericIndex;
    unsigned int nextOutOfLineGenericIndex;
    BOOL isBycopy;
    BOOL isByref;
    BOOL isValid;
    NSMutableArray *importedObjects;
}

- (void)decodeReturnValueOfInvocation:(id)arg1 forKey:(id)arg2;
- (void)encodeReturnValueOfInvocation:(id)arg1 forKey:(id)arg2;
- (id)decodeInvocation;
- (void)encodeInvocation:(id)arg1;
- (id)decodeObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void *)decodeBytesWithReturnedLength:(unsigned int *)arg1;
- (id)decodePortObject;
- (id)decodeDataObject;
- (id)_decodeObjectNoKey;
- (void)encodeBytes:(const void *)arg1 length:(unsigned int)arg2;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodePortObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)_encodeObjectNoKey:(id)arg1;
- (void)_setByref:(BOOL)arg1;
- (void)_setBycopy:(BOOL)arg1;
- (int)versionForClassName:(id)arg1;
- (id)decodePortObjectForKey:(id)arg1;
- (id)decodeDataObjectForKey:(id)arg1;
- (id)_getOutOfLineObjectForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned int *)arg2;
- (int)decodeIntegerForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (id)_decodePropertyListForKey:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (id)_getObjectFromTopForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (void)encodePortObject:(id)arg1 forKey:(id)arg2;
- (void)encodeDataObject:(id)arg1 forKey:(id)arg2;
- (void)_addOutOfLineObject:(id)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned int)arg2 forKey:(id)arg3;
- (void)encodeInteger:(int)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)_encodePropertyList:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)_finishUpObject;
- (void)_prepareToEncodeObjectForKey:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (void)_addObjectToTop:(id)arg1 forKey:(id)arg2;
- (id)_topContainer;
- (void)importObject:(id)arg1;
- (id)importedObjects;
- (BOOL)isByref;
- (BOOL)isBycopy;
- (id)_proxyForLocalObject:(id)arg1;
- (id)connection;
- (id)finishedComponents;
- (void)dispatch;
- (void)_buildMainData;
- (id)debugDescription;
- (void)invalidate;
- (void)dealloc;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;

@end

@interface NSRegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_pattern;
    unsigned int _options;
    void *_internal;
    id _reserved1;
    int _checkout;
    int _reserved2;
}

+ (id)escapedPatternForString:(id)arg1;
+ (id)regularExpressionWithPattern:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (void)initialize;
+ (id)escapedTemplateForString:(id)arg1;
@property(readonly) unsigned int numberOfCaptureGroups;
@property(readonly) unsigned int options;
@property(readonly) NSString *pattern;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPattern:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (struct _NSRange)rangeOfFirstMatchInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (id)firstMatchInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (unsigned int)numberOfMatchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (id)matchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (void)enumerateMatchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 usingBlock:(id)arg4;
- (id)replacementStringForResult:(id)arg1 inString:(id)arg2 offset:(int)arg3 template:(id)arg4;
- (unsigned int)replaceMatchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 withTemplate:(id)arg4;
- (id)stringByReplacingMatchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 withTemplate:(id)arg4;

@end

@interface NSDataDetector : NSRegularExpression
{
    unsigned long long _types;
}

+ (id)dataDetectorWithTypes:(unsigned long long)arg1 error:(id *)arg2;
+ (void)initialize;
- (void)enumerateMatchesInString:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 usingBlock:(id)arg4;
- (unsigned int)numberOfCaptureGroups;
- (unsigned int)options;
- (id)pattern;
@property(readonly) unsigned long long checkingTypes;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithPattern:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithTypes:(unsigned long long)arg1 error:(id *)arg2;

@end

@interface NSKeyValueNilOrderedSetEnumerator : NSEnumerator
{
}

- (id)nextObject;

@end

@interface NSKeyValueMutableOrderedSet : NSMutableOrderedSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;

@end

@interface NSKeyValueFastMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSKeyValueMutatingOrderedSetMethodSet *_mutatingMethods;
}

- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableOrderedSet1 : NSKeyValueFastMutableOrderedSet
{
    NSKeyValueNonmutatingOrderedSetMethodSet *_nonmutatingMethods;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueFastMutableOrderedSet2 : NSKeyValueFastMutableOrderedSet
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (id)_nonNilOrderedSetValueWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueSlowMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    BOOL _treatNilValuesLikeEmptyOrderedSets;
    char _padding[3];
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (id)_createNonNilMutableOrderedSetValueWithSelector:(SEL)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilOrderedSetValueWithSelector:(SEL)arg1;
- (unsigned int)count;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueIvarMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_nonNilMutableOrderedSetValueWithSelector:(SEL)arg1;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueNotifyingMutableOrderedSet : NSKeyValueMutableOrderedSet
{
    NSMutableOrderedSet *_mutableOrderedSet;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned int)arg1 withObject:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectAtIndex:(unsigned int)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned int)arg2;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)_proxyNonGCFinalize;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSKeyValueOrderedSet : NSOrderedSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingOrderedSetMethodSet *_methods;
}

+ (id)_proxyShare;
+ (CDStruct_e8a1eea0 *)_proxyNonGCPoolPointer;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfObject:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (unsigned int)count;
- (void)dealloc;
- (void)_proxyNonGCFinalize;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;

@end

@interface NSCFAttributedString : NSMutableAttributedString
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)setAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendAttributedString:(id)arg1;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned int)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (Class)classForCoder;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqualToAttributedString:(id)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attributesAtIndex:(unsigned int)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attribute:(id)arg1 atIndex:(unsigned int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (unsigned int)length;
- (id)attributesAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)string;
- (void)finalize;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;

@end

@interface _NSMetadataQueryPrivateIvars : NSObject
{
    _NSMetadataQueryResultArray *resultArray;
}

@end

@interface NSMetadataQuery : NSObject
{
    unsigned int _flags;
    double _interval;
    id _private[11];
    void *_reserved;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (id)valueOfAttribute:(id)arg1 forResultAtIndex:(unsigned int)arg2;
- (id)groupedResults;
- (id)valueLists;
- (unsigned int)indexOfResult:(id)arg1;
- (id)results;
- (void)_zapResultArray;
- (id)resultAtIndex:(unsigned int)arg1;
- (unsigned int)resultCount;
- (void)_update;
- (void)enableUpdates;
- (void)disableUpdates;
- (BOOL)isStopped;
- (BOOL)isGathering;
- (BOOL)isStarted;
- (void)stopQuery;
- (BOOL)startQuery;
- (void)_recreateQuery;
- (void)_resetQueryState;
- (id)_queryString;
- (void)_noteNote4:(id)arg1;
- (void)_noteNote3:(id)arg1;
- (void)_noteNote2:(id)arg1;
- (void)_noteNote1:(id)arg1;
- (void)_setBatchingParams;
- (void)setSearchItemURLs:(id)arg1;
- (id)searchItemURLs;
- (void)setSearchScopes:(id)arg1;
- (id)searchScopes;
- (void)setNotificationBatchingInterval:(double)arg1;
- (double)notificationBatchingInterval;
- (id)_allAttributes;
- (id)_sortingAttributes;
- (void)setGroupingAttributes:(id)arg1;
- (id)groupingAttributes;
- (void)setValueListAttributes:(id)arg1;
- (id)valueListAttributes;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (void)setPredicate:(id)arg1;
- (id)predicate;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface _NSMetadataQueryResultArray : NSArray
{
    id _query;
}

- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)count;
- (void)finalize;
- (void)dealloc;
- (id)_init:(id)arg1;

@end

@interface _NSMetadataQuerySortingPseudoItem : NSObject
{
    id _attr;
}

- (id)valueForKey:(id)arg1;

@end

@interface _NSMetadataItemPrivateIvars : NSObject
{
    NSMetadataQuery *query;
}

@end

@interface NSMetadataItem : NSObject
{
    id _item;
    void *_reserved;
}

- (id)attributes;
- (id)valuesForAttributes:(id)arg1;
- (id)valueForAttribute:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)_setQuery:(id)arg1;
- (void)dealloc;
- (id)_init:(CDUnion_a1fd0927)arg1;

@end

@interface NSMetadataQueryAttributeValueTuple : NSObject
{
    id _attr;
    id _value;
    unsigned int _count;
    void *_reserved;
}

- (unsigned int)count;
- (id)value;
- (id)attribute;
- (void)dealloc;
- (id)_init:(id)arg1 attribute:(id)arg2 value:(id)arg3 count:(unsigned int)arg4;

@end

@interface NSMetadataQueryResultGroup : NSObject
{
    id _private[9];
    unsigned int _private2[1];
    void *_reserved;
}

- (id)results;
- (void)_zapResultArray;
- (id)resultAtIndex:(unsigned int)arg1;
- (unsigned int)resultCount;
- (id)subgroups;
- (id)value;
- (id)attribute;
- (void)_addResult:(unsigned int)arg1;
- (void)dealloc;
- (id)_init:(id)arg1 attributes:(id)arg2 index:(unsigned int)arg3 value:(id)arg4;

@end

@interface _NSMetadataQueryResultGroupArray : NSArray
{
    id _group;
}

- (id)objectAtIndex:(unsigned int)arg1;
- (unsigned int)count;
- (void)finalize;
- (void)dealloc;
- (id)_init:(id)arg1;

@end

@interface NSLinguisticTagger : NSObject
{
    NSArray *_schemes;
    unsigned int _options;
    NSString *_string;
    id _orthographyArray;
    id _tokenArray;
    id _reserved;
}

+ (BOOL)supportsLanguage:(id)arg1;
+ (id)availableTagSchemesForLanguage:(id)arg1;
- (void)enumerateTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned int)arg3 usingBlock:(id)arg4;
- (id)_tokenDataForParagraphAtIndex:(unsigned int)arg1 paragraphRange:(struct _NSRange *)arg2 tagScheme:(id)arg3;
- (id)_tokenDataForParagraphAtIndex:(unsigned int)arg1 paragraphRange:(struct _NSRange *)arg2 requireLemmas:(BOOL)arg3 requirePartsOfSpeech:(BOOL)arg4 requireNamedEntities:(BOOL)arg5;
- (void)_tokenizeParagraphAtIndex:(unsigned int)arg1 requireLemmas:(BOOL)arg2 requirePartsOfSpeech:(BOOL)arg3 requireNamedEntities:(BOOL)arg4;
- (id)_tokenDataForParagraphRange:(struct _NSRange)arg1 requireLemmas:(BOOL)arg2 requirePartsOfSpeech:(BOOL)arg3 requireNamedEntities:(BOOL)arg4;
- (void)_analyzeTokensInWordRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_analyzeTokensInInterwordRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_analyzePunctuationTokensInRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2;
- (void)_calculateSentenceRangesForParagraphRange:(struct _NSRange)arg1;
- (void)_acceptSentencesForParagraphRange:(struct _NSRange)arg1;
- (BOOL)_acceptSentenceTerminatorRange:(struct _NSRange)arg1 paragraphRange:(struct _NSRange)arg2 tokens:(struct _NSLTToken *)arg3 count:(unsigned int)arg4 tokenIndex:(unsigned int)arg5;
- (id)tagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned int)arg3 tokenRanges:(id *)arg4;
- (id)possibleTagsAtIndex:(unsigned int)arg1 scheme:(id)arg2 tokenRange:(struct _NSRange *)arg3 sentenceRange:(struct _NSRange *)arg4 scores:(id *)arg5;
- (id)tagAtIndex:(unsigned int)arg1 scheme:(id)arg2 tokenRange:(struct _NSRange *)arg3 sentenceRange:(struct _NSRange *)arg4;
- (BOOL)_ngramTagsAndFrequenciesForMisspelledRange:(struct _NSRange)arg1 word:(id)arg2 tags:(id *)arg3 frequencies:(id *)arg4;
- (id)_rankedCandidatesForMisspelledRange:(struct _NSRange)arg1 candidates:(id)arg2;
- (id)_rankedCandidatesForMisspelledRange:(struct _NSRange)arg1 candidates:(id)arg2 contextualFrequencies:(id *)arg3 baseFrequencies:(id *)arg4;
- (struct _NSRange)sentenceRangeForRange:(struct _NSRange)arg1;
- (id)orthographyAtIndex:(unsigned int)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setOrthography:(id)arg1 range:(struct _NSRange)arg2;
- (void)stringEditedInRange:(struct _NSRange)arg1 changeInLength:(int)arg2;
- (id)string;
- (void)setString:(id)arg1;
- (id)_tagSchemeForScheme:(id)arg1;
- (id)tagSchemes;
- (id)description;
- (void)dealloc;
- (id)initWithTagSchemes:(id)arg1 options:(unsigned int)arg2;

@end

@interface NSFileReactorProxy : NSObject
{
    NSObject<OS_xpc_object> *_client;
    id _reactorID;
    id _messageSender;
    NSFileAccessNode *_itemLocation;
}

- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (void)forwardUsingMessageSender:(id)arg1;
- (id)itemLocation;
- (void)setItemLocation:(id)arg1;
- (id)messageSender;
- (id)reactorID;
- (id)client;
- (void)finalize;
- (void)dealloc;
- (id)initWithClient:(id)arg1 reactorID:(id)arg2 messageSender:(id)arg3;

@end

@interface NSFilePresenterProxy : NSFileReactorProxy
{
    BOOL _isInSuperArbiter;
    id _prewritingProcedure;
    unsigned int _writingRelinquishmentCount;
    id _currentWriterPurposeID;
    id _postwritingProcedure;
    BOOL _didObserveMovingByWriter;
    BOOL _didObserveVersionChangingByWriter;
}

+ (id)urlWithItemURL:(id)arg1 subitemPath:(id)arg2;
- (BOOL)didObserveMoving;
- (void)resetMoveObserving;
- (void)beforeReacquiringFromWriterInvokeProcedure:(id)arg1;
- (id)currentWriterPurposeID;
- (BOOL)hasRelinquishedToWriter;
- (void)afterRelinquishingToWriterInvokeProcedure:(id)arg1;
- (void)forwardObservationMessageWithKind:(id)arg1 parameters:(id)arg2;
- (void)forwardRelinquishmentMessageWithKind:(id)arg1 parameters:(id)arg2 resultHandler:(id)arg3;
- (void)updateLastEventIdentifier:(unsigned long long)arg1;
- (void)observeVersionChangeOfKind:(id)arg1 withClientID:(id)arg2 name:(id)arg3 subitemPath:(id)arg4;
- (void)observeMoveOfSubitemAtURL:(id)arg1 toURL:(id)arg2 byWriterWithPurposeID:(id)arg3;
- (void)observeChangeOfSubitemAtURL:(id)arg1 byWriterWithPurposeID:(id)arg2;
- (void)observeReconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeDisconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeMoveByWriterWithPurposeID:(id)arg1;
- (void)observeChangeByWriterWithPurposeID:(id)arg1;
- (void)accommodateDeletionWithSubitemPath:(id)arg1 completionHandler:(id)arg2;
- (void)saveChangesWithCompletionHandler:(id)arg1;
- (void)relinquishToWritingClaimWithID:(id)arg1 options:(unsigned int)arg2 purposeID:(id)arg3 subitemPath:(id)arg4 resultHandler:(id)arg5;
- (void)relinquishToReadingClaimWithID:(id)arg1 options:(unsigned int)arg2 purposeID:(id)arg3 resultHandler:(id)arg4;
- (void)setInSuperarbiter;
- (void)forwardUsingMessageSender:(id)arg1;
- (void)setItemLocation:(id)arg1;
- (void)dealloc;

@end

@interface NSFileProviderProxy : NSFileReactorProxy
{
}

- (id)provideItemAtURL:(SEL)arg1 forAccessClaimWithID:(id)arg2 completionHandler:(id)arg3;
- (void)forwardUsingMessageSender:(id)arg1;
- (void)setItemLocation:(id)arg1;

@end

@interface NSFileCoordinator : NSObject
{
    id _accessArbiter;
    id _fileReactor;
    id _purposeID;
    NSURL *_recentFilePresenterURL;
    id _accessClaimIDOrIDs;
    BOOL _isCancelled;
    NSMutableDictionary *_movedItems;
}

+ (id)_canonicalURLForURL:(id)arg1;
+ (id)filePresenters;
+ (void)removeFilePresenter:(id)arg1;
+ (void)addFilePresenter:(id)arg1;
+ (id)_currentFileCoordinator;
+ (id)_fileProviders;
+ (void)_removeFileProvider:(id)arg1;
+ (void)_addFileProvider:(id)arg1 completionHandler:(id)arg2;
+ (void)_addFileProvider:(id)arg1;
+ (void)__itemAtURL:(id)arg1 didResolveConflictVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didLoseVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didGainVersionWithClientID:(id)arg2 name:(id)arg3 purposeID:(id)arg4;
+ (void)__itemAtURL:(id)arg1 didReconnectWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didDisconnectWithPurposeID:(id)arg2;
+ (void)__itemAtURL:(id)arg1 didMoveToURL:(id)arg2 purposeID:(id)arg3;
+ (BOOL)_skipCoordinationWork;
- (void)cancel;
- (void)itemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)itemAtURL:(id)arg1 willMoveToURL:(id)arg2;
- (void)prepareForReadingItemsAtURLs:(id)arg1 options:(unsigned int)arg2 writingItemsAtURLs:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5 byAccessor:(id)arg6;
- (void)coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5 byAccessor:(id)arg6;
- (void)coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5 byAccessor:(id)arg6;
- (void)coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3 byAccessor:(id)arg4;
- (void)coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3 byAccessor:(id)arg4;
- (void)_invokeAccessor:(id)arg1 thenCompletionHandler:(void)arg2;
- (void)dealloc;
- (id)initWithFilePresenter:(id)arg1;
- (id)init;
- (id)purposeIdentifier;
- (void)setPurposeIdentifier:(id)arg1;
- (void)_setFileProvider:(id)arg1;
- (void)__prepareForReadingItemsAtURLs:(id)arg1 options:(unsigned int)arg2 writingItemsAtURLs:(id)arg3 options:(unsigned int)arg4 byAccessor:(id)arg5;
- (void)__coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 purposeID:(id)arg5 byAccessor:(id)arg6;
- (void)__coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 purposeID:(id)arg5 byAccessor:(id)arg6;
- (void)__coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 purposeID:(id)arg3 byAccessor:(id)arg4;
- (void)__coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 purposeID:(id)arg3 byAccessor:(id)arg4;
- (void)_itemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)_itemAtURL:(id)arg1 willMoveToURL:(id)arg2;
- (void)_coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5 byAccessor:(id)arg6;
- (void)_coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 writingItemAtURL:(id)arg3 options:(unsigned int)arg4 error:(id *)arg5 byAccessor:(id)arg6;
- (void)_coordinateWritingItemAtURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3 byAccessor:(id)arg4;
- (void)_coordinateReadingItemAtURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3 byAccessor:(id)arg4;
- (void)_invokeAccessor:(id)arg1 orDont:(void)arg2 thenRelinquishAccessClaimForID:(BOOL)arg3;
- (void)_blockOnAccessClaim:(id)arg1;
- (void)_forgetAccessClaimForID:(id)arg1;
- (void)_requestAccessClaim:(id)arg1 withProcedure:(id)arg2;

@end

@interface NSFileAccessNode : NSObject
{
    NSFileAccessNode *_parent;
    NSString *_name;
    NSString *_normalizedName;
    NSFileAccessNode *_symbolicLinkDestination;
    unsigned int _symbolicLinkReferenceCount;
    NSMapTable *_childrenByNormalizedName;
    id _presenterOrPresenters;
    id _provider;
    id _accessClaimOrClaims;
    BOOL _isArbitrationBoundary;
    BOOL _isFilePackageIsFigured;
    BOOL _isFilePackage;
    NSString *_lastRequestedChildName;
    NSFileAccessNode *_lastRequestedChild;
    id _progressPublisherOrPublishers;
    id _progressSubscriberOrSubscribers;
}

- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (void)assertDescendantsLive;
- (void)assertLive;
- (void)assertDead;
- (id)parent;
- (void)forEachProgressThingOfItemOrContainedItemPerformProcedure:(id)arg1;
- (void)forEachProgressSubscriberOfItemOrContainingItemPerformProcedure:(id)arg1;
- (void)forEachProgressSubscriberOfItemPerformProcedure:(id)arg1;
- (void)forEachProgressPublisherOfItemOrContainedItemPerformProcedure:(id)arg1;
- (void)forEachProgressPublisherOfItemPerformProcedure:(id)arg1;
- (void)removeProgressSubscriber:(id)arg1;
- (void)addProgressSubscriber:(id)arg1;
- (void)removeProgressPublisher:(id)arg1;
- (void)addProgressPublisher:(id)arg1;
- (id)standardizedURL;
- (id)pathExceptPrivate;
- (id)url;
- (void)removeAccessClaim:(id)arg1;
- (void)addAccessClaim:(id)arg1;
- (void)setProvider:(id)arg1;
- (void)removePresenter:(id)arg1;
- (void)addPresenter:(id)arg1;
- (BOOL)itemIsInItemAtLocation:(id)arg1;
- (BOOL)itemIsItemAtLocation:(id)arg1;
- (BOOL)itemIsSubarbitrable;
- (void)setArbitrationBoundary;
- (void)forEachAccessClaimOnItemOrContainedItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfContainingItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfItemOrContainingItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfItemOrContainedItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfContainedItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfItemPerformProcedure:(id)arg1;
- (void)forEachPresenterOfContainingFilePackagePerformProcedure:(id)arg1;
- (id)itemProvider;
- (void)forEachReactorToItemOrContainedItemPerformProcedure:(id)arg1;
- (void)forEachRelevantAccessClaimPerformProcedure:(id)arg1;
- (void)forEachAccessClaimOnItemPerformProcedure:(id)arg1;
- (void)forEachDescendantPerformProcedure:(id)arg1;
- (id)biggestFilePackageLocation;
- (BOOL)isFilePackage;
- (void)setParent:(id)arg1 name:(id)arg2;
- (id)pathFromAncestor:(id)arg1;
- (id)descendantForFileURL:(id)arg1;
- (id)childForRange:(struct _NSRange)arg1 ofPath:(id)arg2;
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange)arg2 create:(BOOL)arg3;
- (void)removeSelfIfUseless;
- (void)removeChildForNormalizedName:(id)arg1;
- (void)setChild:(id)arg1 forName:(id)arg2 normalizedName:(id)arg3;
- (id)pathToDescendantForFileURL:(id)arg1 componentRange:(struct _NSRange *)arg2;
- (void)dealloc;
- (void)setSymbolicLinkDestination:(id)arg1;
- (id)initWithParent:(id)arg1 name:(id)arg2 normalizedName:(id)arg3;

@end

@interface NSFileAccessClaim : NSObject
{
    NSObject<OS_xpc_object> *_client;
    NSString *_claimID;
    NSString *_purposeIDOrNil;
    BOOL _cameFromSuperarbiter;
    unsigned int _blockageCount;
    BOOL _didWait;
    BOOL _isRevoked;
    unsigned int _claimerBlockageCount;
    NSError *_claimerError;
    NSMutableOrderedSet *_pendingClaims;
    NSMutableSet *_blockingClaims;
    NSMutableSet *_blockingReactorIDs;
    id _providerCancellationProcedure;
    NSMutableDictionary *_reacquisitionProceduresByPresenterID;
    NSMutableArray *_revocationProcedures;
    id _claimerOrNil;
    NSObject<OS_dispatch_semaphore> *_claimerWaiterOrNull;
    id _sandboxToken;
    BOOL _didMakePresentersRelinquishToWriter;
    BOOL _revokingIsInexorable;
}

+ (BOOL)canWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned int)arg4;
+ (BOOL)canReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned int)arg4;
- (id)purposeIDOfClaimOnItemAtLocation:(id)arg1 forMessagingPresenter:(id)arg2;
- (void)ifSymbolicLinkAtURL:(id)arg1 withResolutionCount:(int *)arg2 thenReevaluateSelf:(id)arg3 elseInvokeClaimer:(void)arg4;
- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (BOOL)isRevoked;
- (BOOL)isGranted;
- (void)devalueOldClaim:(id)arg1;
- (void)cancelled;
- (void)devalueSelf;
- (void)revoked;
- (BOOL)willBeRevoked;
- (id)newClaimerWaiter;
- (void)invokeClaimer;
- (void)makePresentersOfItemAtLocation:(id)arg1 orContainedItem:(BOOL)arg2 relinquishUsingProcedureGetter:(id)arg3;
- (void)makeProviderOfItemAtLocation:(id)arg1 provideThenContinue:(id)arg2;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (void)removePendingClaims:(id)arg1;
- (id)pendingClaims;
- (void)addPendingClaim:(id)arg1;
- (void)evaluateNewClaim:(id)arg1;
- (BOOL)isBlockedByClaimWithPurposeID:(id)arg1;
- (BOOL)claimerInvokingIsBlockedByReactorWithID:(id)arg1;
- (void)whenRevokedPerformProcedure:(id)arg1;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (id)claimerError;
- (void)setClaimerError:(id)arg1;
- (void)unblockClaimer;
- (void)blockClaimer;
- (BOOL)didWait;
- (void)unblock;
- (void)block;
- (BOOL)cameFromSuperarbiter;
- (void)setCameFromSuperarbiter;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (id)purposeID;
- (id)claimID;
- (id)client;
- (void)finalize;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithClient:(id)arg1 claimID:(id)arg2 purposeID:(id)arg3;

@end

@interface NSFileReadingClaim : NSFileAccessClaim
{
    NSURL *_url;
    BOOL _urlDidChange;
    unsigned int _options;
    NSFileAccessNode *_location;
    NSFileAccessNode *_rootNode;
    int _linkResolutionCount;
}

- (BOOL)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned int)arg3 claimer:(id)arg4;

@end

@interface NSFileWritingClaim : NSFileAccessClaim
{
    NSURL *_url;
    BOOL _urlDidChange;
    unsigned int _options;
    NSFileAccessNode *_location;
}

- (BOOL)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned int)arg3 claimer:(id)arg4;

@end

@interface NSFileReadingWritingClaim : NSFileAccessClaim
{
    NSURL *_readingURL;
    BOOL _readingURLDidChange;
    unsigned int _readingOptions;
    NSURL *_writingURL;
    BOOL _writingURLDidChange;
    unsigned int _writingOptions;
    NSFileAccessNode *_readingLocation;
    NSFileAccessNode *_writingLocation;
    NSFileAccessNode *_rootNode;
    int _readingLinkResolutionCount;
}

- (BOOL)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithPurposeID:(id)arg1 readingURL:(id)arg2 options:(unsigned int)arg3 writingURL:(id)arg4 options:(unsigned int)arg5 claimer:(id)arg6;

@end

@interface NSFileWritingWritingClaim : NSFileAccessClaim
{
    NSURL *_url1;
    BOOL _url1DidChange;
    unsigned int _options1;
    NSURL *_url2;
    BOOL _url2DidChange;
    unsigned int _options2;
    NSFileAccessNode *_location1;
    NSFileAccessNode *_location2;
}

- (BOOL)blocksClaim:(id)arg1;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)invokeClaimer;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithPurposeID:(id)arg1 url:(id)arg2 options:(unsigned int)arg3 url:(id)arg4 options:(unsigned int)arg5 claimer:(id)arg6;

@end

@interface NSFileAccessArbiter : NSObject <NSFileAccessArbiter>
{
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _isSubarbiter;
    NSMutableDictionary *_accessClaimsByID;
    NSMutableDictionary *_subarbitrationClaimsByID;
    NSMutableDictionary *_reactorsByID;
    NSMutableDictionary *_watchersByPresenterID;
    NSFileAccessNode *_rootNode;
    NSObject<OS_xpc_object> *_superarbitrationServer;
}

- (void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (id)grantAccessClaim:(id)arg1 synchronouslyIfPossible:(BOOL)arg2;
- (void)_handleCanceledClient:(id)arg1;
- (void)_handleMessage:(id)arg1 forSubarbitrationClaim:(id)arg2 server:(id)arg3;
- (void)_handleMessage:(id)arg1 fromClient:(id)arg2;
- (BOOL)_handleMessage:(id)arg1 ofKind:(id)arg2 withParameters:(id)arg3 embeddedServer:(id)arg4 fromClient:(id)arg5;
- (void)_sendSubarbitersMessageWithKind:(id)arg1 parameters:(id)arg2;
- (id)rootNode;
- (void)stopArbitrating;
- (void)_startArbitratingItemsAtURLs:(id)arg1 withSuperarbitrationServer:(id)arg2;
- (void)_removeReactorForID:(id)arg1;
- (void)_addProvider:(id)arg1 ofItemsAtURL:(id)arg2;
- (void)_addPresenter:(id)arg1 ofItemAtURL:(id)arg2 withLastEventID:(id)arg3;
- (void)_stopWatchingItemForPresenterForID:(id)arg1;
- (void)_startWatchingItemAtURL:(id)arg1 forPresenter:(id)arg2 withLastEventID:(id)arg3;
- (void)_tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)_writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)_writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)_cancelAccessClaimForID:(id)arg1;
- (void)_grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)_revokeAccessClaimForID:(id)arg1 fromLocal:(BOOL)arg2;
- (void)_revokeAccessClaim:(id)arg1;
- (void)_grantAccessClaim:(id)arg1;
- (void)_tiePresenter:(id)arg1 toItemAtURL:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initWithQueue:(id)arg1 isSubarbiter:(BOOL)arg2 listener:(id)arg3;

@end

@interface NSFileAccessArbiterProxy : NSObject <NSFileAccessArbiter>
{
    NSObject<OS_xpc_object> *_server;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_presentersByID;
    NSMutableDictionary *_providersByID;
}

+ (id)_operationQueueForPresenter:(id)arg1;
- (void)handleCanceledServer;
- (void)handleMessage:(id)arg1;
- (void)_makeProvider:(id)arg1 cancelProvidingItemAtURL:(id)arg2 forAccessClaimWithID:(id)arg3;
- (void)_makeProvider:(id)arg1 provideItemAtURL:(id)arg2 forAccessClaimWithID:(id)arg3 completionHandler:(id)arg4;
- (void)_makePresenter:(id)arg1 reacquireFromWritingClaimForID:(id)arg2;
- (void)_makePresenter:(id)arg1 relinquishToWritingClaimWithID:(id)arg2 options:(unsigned int)arg3 subitemURL:(id)arg4 completionHandler:(id)arg5;
- (void)_makePresenter:(id)arg1 reacquireFromReadingClaimForID:(id)arg2;
- (void)_makePresenter:(id)arg1 relinquishToReadingClaimWithID:(id)arg2 options:(unsigned int)arg3 completionHandler:(id)arg4;
- (void)_makePresenter:(id)arg1 relinquishToAccessClaimWithID:(id)arg2 ifNecessaryUsingSelector:(SEL)arg3 recordingRelinquishment:(id)arg4 continuer:(id)arg5;
- (void)_makePresenter:(id)arg1 setLastPresentedItemEventIdentifier:(unsigned long long)arg2;
- (void)_makePresenter:(id)arg1 observeVersionChangeOfKind:(id)arg2 withClientID:(id)arg3 name:(id)arg4 subitemURL:(id)arg5;
- (void)_makePresenterObserveReconnection:(id)arg1;
- (void)_makePresenterObserveDisconnection:(id)arg1;
- (void)_makePresenter:(id)arg1 observeMoveToURL:(id)arg2 withSubitemURL:(id)arg3;
- (void)_makePresenter:(id)arg1 observeChangeWithSubitemURL:(id)arg2;
- (void)_makePresenter:(id)arg1 accommodateDisconnectionWithCompletionHandler:(id)arg2;
- (void)_makePresenter:(id)arg1 accommodateDeletionWithSubitemURL:(id)arg2 completionHandler:(id)arg3;
- (void)_makePresenter:(id)arg1 saveChangesWithCompletionHandler:(id)arg2;
- (id)idForFileReactor:(id)arg1;
- (id)fileProviders;
- (void)removeFileProvider:(id)arg1;
- (void)addFileProvider:(id)arg1 completionHandler:(id)arg2;
- (id)filePresenters;
- (void)removeFilePresenter:(id)arg1;
- (void)addFilePresenter:(id)arg1;
- (void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;
- (void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)cancelAccessClaimForID:(id)arg1;
- (void)revokeSubarbitrationClaimForID:(id)arg1;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)revokeAccessClaimForID:(id)arg1;
- (id)grantAccessClaim:(id)arg1 synchronouslyIfPossible:(BOOL)arg2;
- (id)_writeRelinquishmentForPresenter:(id)arg1;
- (id)_readRelinquishmentForPresenter:(id)arg1;
- (id)_idForReactor:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithServer:(id)arg1;

@end

@interface NSFileSubarbitrationClaim : NSFileAccessClaim
{
    NSArray *_readingURLs;
    unsigned int _readingOptions;
    NSArray *_writingURLs;
    unsigned int _writingOptions;
    id _messageSender;
    NSArray *_readingLocations;
    NSArray *_writingLocations;
    NSFileAccessNode *_rootNode;
    NSMutableSet *_forwardedClaimIDs;
    NSMutableDictionary *_readRelinquishmentsByPresenterID;
    NSMutableDictionary *_writeRelinquishmentsByPresenterID;
}

- (void)forwardReacquisitionMessageWithKind:(id)arg1 parameters:(id)arg2 toPresenterForID:(id)arg3;
- (void)forwardRelinquishmentMessageWithKind:(id)arg1 parameters:(id)arg2 toPresenter:(id)arg3 usingReplySender:(id)arg4;
- (id)relinquishmentForMessageOfKind:(id)arg1 toPresenterForID:(id)arg2;
- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;
- (void)devalueSelf;
- (void)revoked;
- (void)invokeClaimer;
- (void)granted;
- (BOOL)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (BOOL)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned int)arg2;
- (void)devalueOldClaim:(id)arg1;
- (void)evaluateNewClaim:(id)arg1;
- (BOOL)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(BOOL)arg2;
- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;
- (id)messageSender;
- (void)setMessageSender:(id)arg1;
- (void)dealloc;
- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;
- (id)initWithReadingURLs:(id)arg1 options:(unsigned int)arg2 writingURLs:(id)arg3 options:(unsigned int)arg4 claimer:(id)arg5;

@end

@interface NSFileVersion : NSObject
{
    NSURL *_fileURL;
    id _library;
    NSString *_clientID;
    NSString *_name;
    NSURL *_contentsURL;
    BOOL _isBackup;
    NSString *_localizedName;
    NSString *_localizedComputerName;
    NSDate *_modificationDate;
    BOOL _isResolved;
    BOOL _contentsURLIsAccessed;
    id _reserved1;
    id _reserved2;
    BOOL _discardable;
}

+ (BOOL)removeOtherVersionsOfItemAtURL:(id)arg1 error:(id *)arg2;
+ (id)unresolvedConflictVersionsOfItemAtURL:(id)arg1;
+ (id)temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1;
+ (id)addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned int)arg3 error:(id *)arg4;
+ (id)versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2;
+ (id)otherVersionsOfItemAtURL:(id)arg1;
+ (id)currentVersionOfItemAtURL:(id)arg1;
+ (void)_removeTemporaryDirectoryAtURL:(id)arg1;
+ (id)_versionOfItemAtURL:(id)arg1 forClientID:(id)arg2 name:(id)arg3 temporaryStorageIdentifier:(id)arg4 evenIfDeleted:(BOOL)arg5;
+ (BOOL)_removeOtherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 error:(id *)arg3;
+ (id)_temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (id)_addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned int)arg3 temporaryStorageIdentifier:(id *)arg4 error:(id *)arg5;
+ (id)_versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2 temporaryStorageIdentifier:(id)arg3;
+ (id)_otherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2;
+ (id)_libraryForURL:(id)arg1 clientID:(id)arg2 temporaryStorageIdentifier:(id *)arg3;
+ (id)_supportedGenerationalStorageClientIDs;
+ (id)_temporaryStorageLocationForIdentifier:(id)arg1;
+ (id)_autosaveDirectoryURLCreateIfNecessary:(BOOL)arg1;
+ (void)_removeConflictObserver:(void *)arg1;
+ (void *)_addConflictObserverForItemAtURL:(id)arg1 statusChangedHandler:(id)arg2;
+ (void)_markConflicts:(id)arg1 asHandledForItemAtURL:(id)arg2;
+ (BOOL)_conflictsExistForItemAtURL:(id)arg1;
+ (BOOL)unresolvedConflictsExistForItemAtURL:(id)arg1;
+ (id)versionsOfItemAtURL:(id)arg1;
@property(getter=isDiscardable) BOOL discardable; // @synthesize discardable=_discardable;
- (BOOL)removeAndReturnError:(id *)arg1;
- (id)replaceItemAtURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
@property(getter=isResolved) BOOL resolved;
@property(readonly, getter=isConflict) BOOL conflict;
@property(readonly) id <NSCoding> persistentIdentifier;
@property(readonly) NSDate *modificationDate;
@property(readonly) NSString *localizedNameOfSavingComputer;
@property(readonly) NSString *localizedName;
@property(readonly) NSURL *URL;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)_preserveConflictVersionLocally;
@property(readonly, getter=_isBackup) BOOL _isBackup;
- (void)_overrideModificationDateWithDate:(id)arg1;
- (BOOL)_setDocumentInfo:(id)arg1;
- (id)_documentInfo;
- (id)_initWithFileURL:(id)arg1 library:(id)arg2 clientID:(id)arg3 name:(id)arg4 contentsURL:(id)arg5 isBackup:(BOOL)arg6 revision:(id)arg7;
- (id)restoreOverItemAtURL:(id)arg1 error:(id *)arg2;

@end

@interface NSFilePresenterRelinquishment : NSObject
{
    NSCountedSet *_blockingAccessClaimIDs;
    id _reacquirer;
}

- (void)removeAllBlockingAccessClaimIDs;
- (void)removeBlockingAccessClaimID:(id)arg1;
- (BOOL)setReacquirer:(id)arg1;
- (BOOL)addBlockingAccessClaimID:(id)arg1;
- (void)dealloc;

@end

@interface Once : NSObject
{
    id fBlock;
    BOOL fDone;
}

- (void)doit;
- (void)dealloc;
- (id)initWithBlock:(id)arg1;

@end

@interface AsyncSSDownloadManager : NSObject <SSDownloadManagerObserver>
{
    SSDownloadManager *_manager;
    NSOperationQueue *_queue;
    NSMutableDictionary *_downloads;
    BOOL _reconnectInProgress;
}

- (void)downloadHandlerDisconnected:(BOOL)arg1;
- (void)_attemptReconnect;
- (void)addDownload:(id)arg1 completionBlock:(id)arg2;
- (void)addDownloads:(id)arg1 completionBlock:(id)arg2;
- (void)finishDownload:(long long)arg1;
- (void)withDownloadMatchingIdentifier:(id)arg1 perform:(id)arg2;
- (void)cancelDownload:(long long)arg1 completionBlock:(id)arg2;
- (void)downloadManagerDownloadsDidChange:(id)arg1;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
- (void)withDownload:(long long)arg1 performAsync:(id)arg2;
- (void)withDownload:(long long)arg1 perform:(id)arg2;
- (void)addOperationWithBlock:(id)arg1;
- (void)setDelegate:(id)arg1 forDownload:(long long)arg2;
- (void)dealloc;
- (id)initWithDownloadManager:(id)arg1;

@end

@interface NSURLConnectionInternalBackgroundDownload : NSURLConnectionInternal <NSURLConnectionRequired, SSDownloadManagerObserver, SSDownloadHandlerDelegate>
{
    struct __CFRunLoopSource *_source;
    NSMutableArray *_pendingOps;
    NSCountedSet *_runloops;
    SSDownloadHandler *_handler;
    AsyncSSDownloadManager *_manager;
    long long _downloadIdent;
    long long _ctLast;
    BOOL _terminated;
    NSTimer *_deferredStartTimer;
}

+ (void)_enableLogging;
+ (id)sharedDownloadManagerForMediaKind:(id)arg1 persistenceIdentifier:(id)arg2;
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)_updateDownloadState:(id)arg1;
- (long long)_getDownloadIdent;
- (void)_updateClientWithCurrentWrites:(id)arg1;
- (void)downloadHandler:(id)arg1 handleAuthenticationSession:(id)arg2;
- (BOOL)downloadHandler:(id)arg1 pauseSession:(id)arg2;
- (void)downloadHandler:(id)arg1 cancelSession:(id)arg2;
- (void)downloadHandlerDidDisconnect:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)_sourcePerform;
- (void)cancel;
- (void)start;
- (void)_createNewDownload;
- (void)setHandlerForDownload:(id)arg1 completionBlock:(id)arg2;
- (void)_managerFailedToStartInTime;
- (void)dealloc;
- (void)_invalidate;
- (void)_sendTerminalDidFinishToDelegate:(id)arg1;
- (void)_sendTerminalErrorToDelegate:(id)arg1;
- (void)_postTerminalInvocation:(id)arg1;
- (void)_preTerminalInvocation:(id)arg1;
- (void)_invokeInvocation:(id)arg1 withConnection:(id)arg2;
- (void)invokeForDelegate:(id)arg1;
- (id)description;
- (id)initWithInfo:(const struct InternalInit *)arg1;

@end

@interface NSUbiquitousKeyValueStore : NSObject
{
    id _private1;
    id _private2;
    id _private3;
    void *_private4;
    void *_reserved[3];
}

+ (void)_appWillDeactivate;
+ (void)_appWillActivate;
+ (void)_synchronizeStoresForced:(BOOL)arg1;
+ (id)additionalStoreWithIdentifier:(id)arg1;
+ (id)defaultStore;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (BOOL)boolForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (double)doubleForKey:(id)arg1;
- (void)setLongLong:(long long)arg1 forKey:(id)arg2;
- (long long)longLongForKey:(id)arg1;
- (void)setData:(id)arg1 forKey:(id)arg2;
- (id)dataForKey:(id)arg1;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (id)dictionaryForKey:(id)arg1;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (unsigned int)maximumTotalDataLength;
- (unsigned int)maximumDataLengthPerKey;
- (unsigned int)maximumKeyLength;
- (unsigned int)maximumKeyCount;
- (void)_unregisterFromDaemon;
- (void)_registerToDaemon;
- (void)_configurationDidChange;
- (void)_sourceDidChange:(id)arg1;
- (BOOL)synchronize;
- (BOOL)_synchronizeForced:(BOOL)arg1;
- (BOOL)_synchronizeForced:(BOOL)arg1 notificationQueue:(id)arg2;
- (void)_scheduleRemoteSynchronization;
- (id)dictionaryRepresentation;
- (void)registerDefaultValues:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)_adjustTimerForAutosync;
- (void)_adjustTimer:(id)arg1;
- (void)_syncConcurrently;
- (void)_syncConcurrentlyForced:(BOOL)arg1;
- (id)objectForKey:(id)arg1;
- (void)_rethrowException:(id)arg1;
- (BOOL)_postDidChangeNotificationExternalChanges:(id)arg1 sourceChangeCount:(int)arg2;
- (int)_storeChangeFromSourceChange:(int)arg1;
- (void)_setHasPendingSynchronize:(BOOL)arg1;
- (BOOL)_hasPendingSynchronize;
- (void)_setShouldAvoidSynchronize:(BOOL)arg1;
- (BOOL)_shouldAvoidSynchronize;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2;
- (id)initWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2 additionalStore:(BOOL)arg3;
- (void)_useSourceSyncWithBlock:(id)arg1;
- (void)_useSourceAsyncWithBlock:(id)arg1;
- (void)_pleaseSynchronize:(id)arg1;

@end

@interface NSFileWatcherObservations : NSObject
{
    BOOL _attributesChanged;
    BOOL _contentsChanged;
    BOOL _deleted;
    BOOL _moved;
    NSString *_lastObservedPath;
    BOOL _didResetURL;
    NSURL *_url;
}

- (void)notifyObserver:(id)arg1;
- (void)addMoveToURL:(id)arg1;
- (void)addMoveToPath:(id)arg1;
- (void)addDeletion;
- (void)addContentsChange;
- (void)addAttributeChange;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface NSFileWatcher : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSURL *_url;
    id _observer;
    BOOL _isWatching;
    NSObject<OS_dispatch_source> *_eventSource;
    unsigned long long _lastObservedEventID;
    struct __FSEventStream *_eventStream;
    BOOL _eventsAreAboutDirectory;
    BOOL _isUnsettled;
    NSFileWatcherObservations *_itemObservations;
    NSMutableDictionary *_subitemObservationsByEventPath;
    NSURL *_fileReferenceURL;
    NSString *_formerPath;
    NSURL *_formerURL;
}

- (void)stop;
- (void)settle;
- (void)unsettle;
- (void)startWithObserver:(id)arg1;
- (void)setLastObservedEventID:(unsigned long long)arg1;
- (void)setURL:(id)arg1;
- (void)watchItem;
- (void)handleFSEventPath:(id)arg1 flags:(unsigned long)arg2 id:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface NSISEngine : NSObject <NSISVariableDelegate>
{
    NSMapTable *_rows;
    NSMapTable *_rowsCrossIndex;
    NSISVariable *_headForObjectiveRow;
    NSMutableArray *_variablesWithValueRestrictionViolations;
    int _automaticOptimizationDisabledCount;
    id <NSISEngineDelegate> _delegate;
    int _delegateCallsDisabledCount;
    NSMapTable *_brokenConstraintPositiveErrors;
    NSMapTable *_brokenConstraintNegativeErrors;
    NSMutableSet *_variablesWithIntegralizationViolations;
    struct __CFDictionary *_integralizationAdjustmentsForConstraintMarkers;
    id _unsatisfiabilityHandler;
    BOOL _shouldIntegralize;
    BOOL _revertsAfterUnsatisfiabilityHandler;
}

@property BOOL revertsAfterUnsatisfiabilityHandler; // @synthesize revertsAfterUnsatisfiabilityHandler=_revertsAfterUnsatisfiabilityHandler;
@property BOOL shouldIntegralize; // @synthesize shouldIntegralize=_shouldIntegralize;
@property id <NSISEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSMutableSet *variablesWithIntegralizationViolations; // @synthesize variablesWithIntegralizationViolations=_variablesWithIntegralizationViolations;
@property(retain) NSMutableArray *variablesWithValueRestrictionViolations; // @synthesize variablesWithValueRestrictionViolations=_variablesWithValueRestrictionViolations;
@property(retain) NSISVariable *headForObjectiveRow; // @synthesize headForObjectiveRow=_headForObjectiveRow;
@property(retain) NSMapTable *rowsCrossIndex; // @synthesize rowsCrossIndex=_rowsCrossIndex;
@property(retain) NSMapTable *rows; // @synthesize rows=_rows;
- (BOOL)exerciseAmbiguityInVariable:(id)arg1;
- (BOOL)valueOfVariableIsAmbiguous:(id)arg1;
- (BOOL)incoming:(id *)arg1 andOutgoing:(id *)arg2 rowHeadsThatMakeValueAmbiguousForVariable:(id)arg3;
- (BOOL)bodyVarIsAmbiguous:(id)arg1 withPivotOfOutgoingRowHead:(id *)arg2;
- (id)candidateRedundantConstraints;
- (id)constraintsAffectingValueOfVariable:(id)arg1;
- (void)verifyInternalIntegrity;
- (id)description;
- (id)constraints;
- (void)enumerateOriginalConstraints:(id)arg1;
- (BOOL)tryToChangeConstraintSuchThatMarker:(id)arg1 isReplacedByMarkerPlusDelta:(float)arg2 undoHandler:(id)arg3;
- (void)constraintDidChangeSuchThatMarker:(id)arg1 shouldBeReplacedByMarkerPlusDelta:(float)arg2;
- (void)_coreReplaceMarker:(id)arg1 withMarkerPlusDelta:(float)arg2;
- (void)removeConstraintWithMarker:(id)arg1;
- (id)outgoingRowHeadForRemovingConstraintWithMarker:(id)arg1;
- (void)changeVariableToBeOptimized:(id)arg1 fromPriority:(float)arg2 toPriority:(float)arg3;
- (void)removeVariableToBeOptimized:(id)arg1 priority:(float)arg2;
- (void)addVariableToBeOptimized:(id)arg1 priority:(float)arg2;
- (BOOL)tryToAddConstraintWithMarker:(id)arg1 expression:(id)arg2 integralizationAdjustment:(float)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (BOOL)hasValue:(float *)arg1 forVariable:(id)arg2;
- (float)valueForVariable:(id)arg1;
- (void)withDelegateCallsDisabled:(id)arg1;
- (void)withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:(id)arg1;
- (void)withAutomaticOptimizationDisabled:(id)arg1;
- (id)tryToOptimizeReturningMutuallyExclusiveConstraints;
- (void)optimize;
- (void)dealloc;
- (id)init;
- (BOOL)tryUsingArtificialVariableToAddConstraintWithMarker:(id)arg1 rowBody:(id)arg2 usingInfeasibilityHandlingBehavior:(int)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (BOOL)tryAddingDirectly:(id)arg1;
- (id)chooseHeadForRowBody:(id)arg1;
- (id)expressionBySubstitutingForRowHeadVariablesInExpression:(id)arg1;
- (void)fixupIntegralizationViolations;
- (id)variableToWorkOnAmongVariablesWithIntegralizationViolationsIgnoringLostCauses:(id)arg1 varsAlreadyAdjusted:(id)arg2;
- (unsigned int)numberOfConstraintsEligibleForAdjustmentToIntegralizeVariable:(id)arg1 ignoringConstraintsWithMarkers:(id)arg2;
- (int)desirabilityOfAdjustingVariable:(id)arg1 delta:(float)arg2 fixingTargetVar:(BOOL)arg3;
- (float)valueForVariableWithoutIntegralizationAdjustments:(id)arg1;
- (void)performModifications:(id)arg1 withUnsatisfiableConstraintsHandler:(void)arg2;
- (id)fixUpValueRestrictionViolationsWithInfeasibilityHandlingBehavior:(int)arg1;
- (void)minimizeConstantInObjectiveRowWithHead:(id)arg1;
- (id)chooseOutgoingRowHeadForIncomingRowHead:(id)arg1;
- (id)handleUnsatisfiableRowWithHead:(id)arg1 body:(id)arg2 usingInfeasibilityHandlingBehavior:(int)arg3 mutuallyExclusiveConstraints:(id *)arg4;
- (id)fallbackMarkerForConstraintToBreakInRowWithHead:(id)arg1 body:(id)arg2;
- (id)errorVariableIntroducedByBreakingConstraintWithMarker:(id)arg1 errorIsPositive:(BOOL)arg2;
- (void)replaceMarker:(id)arg1 withMarkerPlusCoefficient:(float)arg2 timesVariable:(id)arg3;
- (void)pivotToMakeBodyVar:(id)arg1 newHeadOfRowWithHead:(id)arg2;
- (void)substituteOutAllOccurencesOfBodyVar:(id)arg1 withExpression:(id)arg2;
- (void)addExpression:(id)arg1 times:(float)arg2 toRowWithHead:(id)arg3 body:(id)arg4;
- (void)addExpression:(id)arg1 priority:(float)arg2 times:(float)arg3 toObjectiveRowWithHead:(id)arg4 body:(id)arg5;
- (void)addVariable:(id)arg1 coefficient:(float)arg2 toRowWithHead:(id)arg3 body:(id)arg4;
- (void)addVariable:(id)arg1 priority:(float)arg2 times:(float)arg3 toObjectiveRowWithHead:(id)arg4 body:(id)arg5;
- (void)removeBodyVarFromAllRows:(id)arg1;
- (void)removeRowWithHead:(id)arg1;
- (void)setRowWithHead:(id)arg1 body:(id)arg2;
- (void)setIntegralizationAdjustment:(float)arg1 forMarker:(id)arg2;
- (float)integralizationAdjustmentForMarker:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (id)markerForBrokenConstraintWithNegativeErrorVar:(id)arg1;
- (id)markerForBrokenConstraintWithPositiveErrorVar:(id)arg1;
- (void)setNegativeErrorVar:(id)arg1 forBrokenConstraintWithMarker:(id)arg2;
- (id)negativeErrorVarForBrokenConstraintWithMarker:(id)arg1;
- (id)_brokenConstraintNegativeErrorsIfAvailable;
- (id)_brokenConstraintNegativeErrors;
- (void)setPositiveErrorVar:(id)arg1 forBrokenConstraintWithMarker:(id)arg2;
- (id)positiveErrorVarForBrokenConstraintWithMarker:(id)arg1;
- (id)_brokenConstraintPositiveErrorsIfAvailable;
- (id)_brokenConstraintPositiveErrors;
- (void)rowCrossIndexNoteDroppedBodyVar:(id)arg1;
- (void)rowCrossIndexNoteBodyVariable:(id)arg1 wasRemovedFromRowWithHead:(id)arg2;
- (void)rowCrossIndexNoteBodyVariable:(id)arg1 wasAddedToRowWithHead:(id)arg2;
- (void)enumerateRowsCrossIndex:(id)arg1;
- (id)rowHeadsForRowsContainingBodyVar:(id)arg1;
- (void)rawRemoveRowWithHead:(id)arg1;
- (void)rawSetRowWithHead:(id)arg1 body:(id)arg2;
- (id)allRowHeads;
- (void)enumerateRows:(id)arg1;
- (id)rowBodyForObjectiveHead:(id)arg1;
- (id)rowBodyForNonObjectiveHead:(id)arg1;
- (id)rowBodyForHead:(id)arg1;
@property struct __CFDictionary *integralizationAdjustmentsForConstraintMarkers;

@end

@interface NSISLinearExpression : NSObject <NSCopying, NSISRowBody>
{
    float _constant;
    struct __CFArray *_sortedVarPointers;
    struct __CFArray *_sortedVarCoeffs;
    float _termScalar;
}

@property float constant; // @synthesize constant=_constant;
- (void)scaleBy:(float)arg1;
- (void)scalePrescaledVariablesBy:(double)arg1;
- (id)allVariables;
- (void)enumerateVariables:(id)arg1;
- (void)enumerateVariablesAndCoefficients:(id)arg1;
- (id)description;
- (void)replaceVariable:(id)arg1 withExpression:(id)arg2 processVariableNewToReceiver:(id)arg3 processVariableDroppedFromReceiver:(void)arg4;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2 timesVariable:(id)arg3 processVariableNewToReceiver:(id)arg4 processVariableDroppedFromReceiver:(void)arg5;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2;
- (BOOL)isConstant;
- (float)incrementConstant:(float)arg1;
- (void)addVariable:(id)arg1 coefficient:(float)arg2 processVariableNewToReceiver:(id)arg3 processVariableDroppedFromReceiver:(void)arg4;
- (void)addVariable:(id)arg1 coefficient:(float)arg2;
- (void)addExpression:(id)arg1 times:(float)arg2 processVariableNewToReceiver:(id)arg3 processVariableDroppedFromReceiver:(void)arg4;
- (void)addExpression:(id)arg1 times:(float)arg2;
- (void)dealloc;
- (void)setCoefficient:(float)arg1 forVariable:(id)arg2;
- (float)coefficientForVariable:(id)arg1;
- (void)removeVariable:(id)arg1;
- (void)_setPreScaledCoefficient:(float)arg1 forVariable:(id)arg2;
- (float)_preScaledCoefficientForVariable:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithSortedVarPointers:(struct __CFArray *)arg1 sortedVarCoefficients:(struct __CFArray *)arg2 constant:(float)arg3 termScalar:(float)arg4;

@end

@interface NSISObjectiveLinearExpression : NSObject <NSISRowBody>
{
    struct __CFDictionary *_priorityMap;
    struct __CFArray *_sortedPriorityVectors;
    struct __CFArray *_constant;
}

- (void)verifyInternalIntegrity;
- (void)leadingPriority:(float *)arg1 andValue:(float *)arg2 forVariable:(id)arg3;
- (id)restrictedVariableWithCoefficientOfLargestNegativeMagnitude;
- (void)replaceVariable:(id)arg1 withExpression:(id)arg2 processVariableNewToReceiver:(id)arg3 processVariableDroppedFromReceiver:(void)arg4;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2 timesVariable:(id)arg3 processVariableNewToReceiver:(id)arg4 processVariableDroppedFromReceiver:(void)arg5;
- (void)replaceVariable:(id)arg1 withVariablePlusDelta:(float)arg2;
- (void)addExpression:(id)arg1 priority:(float)arg2 times:(float)arg3 processVariableNewToReceiver:(id)arg4 processVariableDroppedFromReceiver:(void)arg5;
- (void)addVariable:(id)arg1 priority:(float)arg2 times:(float)arg3 processVariableNewToReceiver:(id)arg4 processVariableDroppedFromReceiver:(void)arg5;
- (void)addVariable:(id)arg1 priority:(float)arg2 times:(float)arg3;
- (void)setPriorityVector:(struct __CFArray *)arg1 forVariable:(id)arg2;
- (void)removeVariable:(id)arg1;
- (struct __CFArray *)priorityVectorForVariable:(id)arg1;
- (id)allVariables;
- (void)enumerateVariables:(id)arg1;
- (BOOL)constantTermIsZero;
- (void)incrementConstantWithPriorityVector:(struct __CFArray *)arg1;
- (void)incrementConstantWithPriority:(float)arg1 value:(float)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithLinearExpression:(id)arg1 priority:(float)arg2;
- (id)init;

@end

@interface NSISUnrestrictedVariable : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISRestrictedToNonNegativeVariable : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISRestrictedToNonNegativeVariableToBeMinimized : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISRestrictedToNonNegativeMarkerVariable : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISRestrictedToZeroMarkerVariable : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISRestrictedToNonNegativeMarkerVariableToBeMinimized : NSISVariable
{
}

- (id)markedConstraint;
- (BOOL)shouldBeMinimized;
- (int)valueRestriction;

@end

@interface NSISInlineStorageVariable : NSISVariable <NSISVariableDelegate>
{
    NSString *_name;
    int _valueRestriction;
    BOOL _shouldBeMinimized;
}

@property BOOL shouldBeMinimized; // @synthesize shouldBeMinimized=_shouldBeMinimized;
@property int valueRestriction; // @synthesize valueRestriction=_valueRestriction;
@property(copy) NSString *name; // @synthesize name=_name;
- (oneway void)dealloc;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (id)markedConstraint;

@end

@interface NSISVariable : NSObject
{
    int _refCount;
    id <NSISVariableDelegate> _delegate;
}

+ (id)variableWithName:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(BOOL)arg3;
+ (id)variableMarkingConstraint:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(BOOL)arg3;
+ (id)variableWithDelegate:(id)arg1 valueRestriction:(int)arg2 shouldBeMinimized:(BOOL)arg3;
@property id <NSISVariableDelegate> delegate; // @synthesize delegate=_delegate;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)markedConstraint;
@property(readonly) BOOL shouldBeMinimized;
@property(readonly) int valueRestriction;
- (BOOL)valueIsUserVisible;
- (BOOL)markedConstraintIsEligibleForIntegralizationAdjustment;
- (float)allowedMagnitudeForIntegralizationAdjustmentOfMarkedConstraint;
- (BOOL)shouldBeIntegral;
- (id)description;

@end

@interface NSLayoutConstraint : NSObject <NSISConstraint>
{
    id _container;
    id _firstItem;
    id _secondItem;
    float _constant;
    float _loweredConstant;
    id _markerAndPositiveExtraVar;
    id _negativeExtraVar;
    float _coefficient;
    float _priority;
    unsigned long long _layoutConstraintFlags;
    id _flange;
}

+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 constant:(float)arg4;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 constant:(float)arg6;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 multiplier:(float)arg6;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 multiplier:(float)arg6 constant:(float)arg7;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 multiplier:(float)arg6 symbolicConstant:(id)arg7;
+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 multiplier:(float)arg6 symbolicConstant:(id)arg7 theme:(id)arg8;
+ (id)constraintsWithVisualFormat:(id)arg1 options:(unsigned int)arg2 metrics:(id)arg3 views:(id)arg4;
- (void)_setSecondItem:(id)arg1;
@property id secondItem; // @synthesize secondItem=_secondItem;
- (void)_setFirstItem:(id)arg1;
@property id firstItem; // @synthesize firstItem=_firstItem;
- (BOOL)_nsib_isRedundant;
- (BOOL)_nsib_isRedundantInEngine:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (id)_loweredExpression;
- (id)_loweredExpressionReportingConstantIsRounded:(char *)arg1;
- (struct CGSize)_engineToContainerScalingCoefficients;
- (void)_makeExtraVars;
- (void)_removeFromEngine:(id)arg1;
- (void)_addToEngine:(id)arg1;
- (BOOL)_addToEngine:(id)arg1 integralizationAdjustment:(float)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (float)priorityForVariable:(id)arg1;
- (BOOL)_describesSameRestrictionAsConstraint:(id)arg1;
- (id)_constraintByReplacingView:(id)arg1 withView:(id)arg2;
- (id)_constraintByReplacingItem:(id)arg1 withItem:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)equationDescription;
- (id)descriptionAccessory;
- (id)_priorityDescription;
- (id)asciiArtDescription;
- (int)_constraintType;
- (void)dealloc;
- (id)init;
@property(copy) NSString *symbolicConstant;
- (void)_setSymbolicConstant:(id)arg1;
- (id)_symbolicConstant;
@property float constant;
- (id)_constantDescriptionForDTrace;
- (id)_descriptionforSymbolicConstant;
- (void)_setSymbolicConstant:(id)arg1 constant:(float)arg2;
- (BOOL)_effectiveConstant:(float *)arg1 error:(id *)arg2;
- (void)_containerGeometryDidChange;
- (BOOL)_tryToChangeContainerGeometryWithUndoHandler:(id)arg1;
- (void)_clearWeakContainerReference;
@property id container;
- (BOOL)_loweredConstantIsRounded;
- (void)_setPrimitiveConstraintType:(int)arg1;
- (int)_primitiveConstraintType;
- (void)_setDeferDTraceLogging:(BOOL)arg1;
- (BOOL)_deferDTraceLogging;
- (void)_setNegativeExtraVar:(id)arg1;
- (id)_negativeExtraVar;
- (void)_setMarkerAndPositiveErrorVar:(id)arg1;
- (id)_markerAndPositiveExtraVar;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)arg1;
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)arg1;
- (float)_allowedMagnitudeForIntegralizationAdjustment;
- (float)_fudgeIncrement;
- (BOOL)_isFudgeable;
- (void)setAnimations:(id)arg1;
- (id)animations;
@property(copy) NSString *identifier;
- (void)_setIdentifier:(id)arg1;
- (id)_identifier;
- (void)setHasBeenLowered:(BOOL)arg1;
@property(readonly) BOOL hasBeenLowered;
@property float priority;
@property BOOL shouldBeArchived;
- (void)_setSecondAttribute:(int)arg1;
@property int secondAttribute;
- (void)_setMultiplier:(float)arg1;
@property float multiplier;
- (void)_setRelation:(int)arg1;
@property int relation;
- (void)_setFirstAttribute:(int)arg1;
@property int firstAttribute;

@end

@interface NSAutoresizingMaskLayoutConstraint : NSLayoutConstraint
{
}

+ (id)constraintWithItem:(id)arg1 attribute:(int)arg2 relatedBy:(int)arg3 toItem:(id)arg4 attribute:(int)arg5 multiplier:(float)arg6 constant:(float)arg7;
+ (id)constraintsWithAutoresizingMask:(unsigned int)arg1 subitem:(id)arg2 frame:(struct CGRect)arg3 superitem:(id)arg4 bounds:(struct CGRect)arg5;
- (int)_constraintType;
- (id)descriptionAccessory;
- (id)_viewForAutoresizingMask;

@end

@interface NSContentSizeLayoutConstraint : NSLayoutConstraint
{
    float _huggingPriority;
    float _compressionResistancePriority;
}

- (id)_priorityDescription;
- (float)priorityForVariable:(id)arg1;
- (id)initWithLayoutItem:(id)arg1 value:(float)arg2 huggingPriority:(float)arg3 compressionResistancePriority:(float)arg4 orientation:(int)arg5;

@end

@interface NSLayoutConstraintParser : NSObject
{
    NSString *_line;
    const char *_lineChars;
    unsigned int _lineLength;
    unsigned int _opts;
    BOOL _useHorizontalArrangement;
    NSDictionary *_metrics;
    NSDictionary *_views;
    id <NSLayoutItem> _containerView;
    NSMutableArray *_constraints;
    NSMutableArray *_unflushedWidthConstraints;
    NSMutableArray *_alignmentConstraints;
    unsigned int _currentCharacter;
    NSMutableArray *_incompleteConstraints;
    id <NSLayoutItem> _parsedLeftView;
    id <NSLayoutItem> _parsedRightView;
    id <NSLayoutItem> _parsedConstrainedWidthView;
}

+ (id)constraintsWithVisualFormat:(id)arg1 options:(unsigned int)arg2 metrics:(id)arg3 views:(id)arg4;
- (void)finishConstraint;
- (void)findContainerView;
- (struct _NSRange)rangeOfName;
- (void)parseOp;
- (float)parseConstant;
- (void)parsePredicate;
- (void)parsePredicateList;
- (void)parsePredicateWithParentheses;
- (void)parseConnection;
- (void)flushWidthConstraints;
- (id)parseView;
- (void)parse;
- (id)layoutItemForKey:(id)arg1;
- (id)metricForKey:(id)arg1;
- (void)failWithDescription:(id)arg1;
- (id)description;
- (id)descriptionLineWithCurrentCharacterPointer;
- (id)constraints;
- (void)dealloc;
- (id)initWithFormat:(id)arg1 options:(unsigned int)arg2 metrics:(id)arg3 views:(id)arg4;

@end

@interface NSXPCConnection : NSObject <NSXPCProxyCreating>
{
    void *_xconnection;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_queue> *_userQueue;
    unsigned long long _state;
    id _interruptionHandler;
    id _invalidationHandler;
    id _exportInfo;
    id _replyInfo;
    id _importInfo;
    id <NSObject> _otherInfo;
    id _reserved1;
    id _lock;
    NSXPCInterface *_remoteObjectInterface;
    NSString *_serviceName;
    NSXPCListenerEndpoint *_endpoint;
    id _reserved2;
    id _reserved3;
}

+ (void)endTransaction;
+ (void)beginTransaction;
+ (id)currentConnection;
@property(retain) NSXPCInterface *remoteObjectInterface; // @synthesize remoteObjectInterface=_remoteObjectInterface;
- (void)_setUUID:(id)arg1;
@property(readonly) unsigned int effectiveGroupIdentifier;
@property(readonly) unsigned int effectiveUserIdentifier;
@property(readonly) int processIdentifier;
@property(readonly) int auditSessionIdentifier;
- (void)_removeProxy:(unsigned long long)arg1;
- (void)_addProxy:(unsigned long long)arg1;
- (id)remoteObjectProxyWithTimeout:(double)arg1 errorHandler:(id)arg2;
- (id)remoteObjectProxyWithErrorHandler:(id)arg1;
- (id)remoteObjectProxy;
@property(retain) NSXPCInterface *exportedInterface;
@property(retain) id exportedObject;
- (id)debugDescription;
- (id)replacementObjectForEncoder:(id)arg1 object:(id)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (id)valueForEntitlement:(id)arg1;
- (CDStruct_6ad76789)auditToken;
- (void)setOptions:(unsigned int)arg1;
- (id)_exportTable;
@property(readonly) NSXPCListenerEndpoint *endpoint;
@property(readonly) NSString *serviceName;
@property(copy) id invalidationHandler;
@property(copy) id interruptionHandler;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(id)arg4 timeout:(void)arg5;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(id)arg4;
- (void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3;
- (void)_sendDesistForProxyNumber:(unsigned long long)arg1;
- (void)invalidate;
- (void)stop;
- (void)start;
- (void)resume;
- (void)suspend;
- (void)finalize;
- (void)dealloc;
- (id)initWithListenerEndpoint:(id)arg1;
- (id)initWithEndpoint:(id)arg1;
- (id)initWithMachServiceName:(id)arg1;
- (id)initWithMachServiceName:(id)arg1 options:(unsigned int)arg2;
- (id)initWithServiceName:(id)arg1;
- (id)_initWithPeerConnection:(id)arg1 name:(id)arg2;
- (id)init;
- (void)_decodeAndInvokeMessageWithData:(id)arg1;
- (void)_decodeAndInvokeReplyBlockWithData:(id)arg1;

@end

@interface NSXPCCoder : NSCoder
{
    id <NSObject> _userInfo;
    id _reserved1;
}

@property(retain) id <NSObject> userInfo; // @synthesize userInfo=_userInfo;
- (void)dealloc;
- (id)decodeXPCObjectForKey:(id)arg1;
- (void)encodeXPCObject:(id)arg1 forKey:(id)arg2;
- (BOOL)requiresSecureCoding;

@end

@interface NSXPCEncoder : NSXPCCoder
{
    NSMutableArray *_containers;
    NSObject<OS_xpc_object> *_oolObjects;
    NSXPCConnection *_connection;
    struct __CFDictionary *_replacedObjects;
    struct __CFDictionary *_replacedByDelegateObjects;
    id <NSXPCEncoderDelegate> _delegate;
    BOOL _askForReplacement;
}

@property id <NSXPCEncoderDelegate> delegate; // @synthesize delegate=_delegate;
@property NSXPCConnection *_connection; // @synthesize _connection;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeXPCObject:(id)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned int)arg2 forKey:(id)arg3;
- (void)encodeInteger:(int)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_encodeArrayOfObjects:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)encodeInvocation:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)_addObject:(id)arg1 forKey:(id)arg2;
- (void)_pushContainerForKey:(id)arg1;
- (BOOL)allowsKeyedCoding;
- (id)_createRootXPCObject;
- (id)debugDescription;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)_encodeXPCObject:(id)arg1;
- (id)_topContainer;
- (void)_pushContainer:(id)arg1;
- (void)_popContainer;

@end

@interface NSXPCDecoder : NSXPCCoder
{
    NSMutableArray *_containers;
    NSObject<OS_xpc_object> *_oolObjects;
    NSXPCInterface *_interface;
    NSString *_replyToSelector;
    unsigned int _genericIndex;
    NSMutableArray *_allowedClasses;
    NSXPCConnection *_connection;
}

@property NSXPCConnection *_connection; // @synthesize _connection;
@property(copy) NSString *replyToSelector; // @synthesize replyToSelector=_replyToSelector;
@property(retain) NSXPCInterface *interface; // @synthesize interface=_interface;
- (id)decodeXPCObjectForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned int *)arg2;
- (int)decodeIntegerForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (id)_decodeArrayOfObjectsForKey:(id)arg1;
- (id)allowedClasses;
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (id)__objectStuff:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (BOOL)containsValueForKey:(id)arg1;
- (id)decodeInvocation;
- (id)decodeObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (BOOL)allowsKeyedCoding;
- (id)debugDescription;
- (void)finalize;
- (void)dealloc;
- (id)_initWithRootXPCObject:(id)arg1;
- (id)_decodeXPCObjectAtIndex:(id)arg1;
- (id)_topContainer;
- (void)_pushContainer:(id)arg1;
- (void)_popContainer;

@end

@interface NSXPCListenerEndpoint : NSObject <NSSecureCoding>
{
    void *_internal;
}

+ (BOOL)supportsSecureCoding;
- (id)_endpoint;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1;

@end

@interface NSXPCListener : NSObject
{
    void *_xconnection;
    NSObject<OS_dispatch_queue> *_userQueue;
    NSObject<OS_dispatch_queue> *_internalQueue;
    id <NSXPCListenerDelegate> _delegate;
    NSString *_serviceName;
    unsigned long long _state;
    id _reserved1;
    id _reserved2;
}

+ (id)_UUID;
+ (void)enableTransactions;
+ (id)anonymousListener;
+ (id)serviceListener;
@property id <NSXPCListenerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setOptions:(unsigned int)arg1;
- (id)endpoint;
- (id)serviceName;
- (void)invalidate;
- (void)stop;
- (void)resume;
- (void)suspend;
- (void)finalize;
- (void)dealloc;
- (id)initWithMachServiceName:(id)arg1;
- (id)initWithServiceName:(id)arg1;
- (id)_initShared;

@end

@interface NSXPCInterface : NSObject
{
    Protocol *_protocol;
    NSMutableDictionary *_methods;
    id _reserved1;
}

+ (id)signatureForBlock:(id)arg1;
+ (id)interfaceWithProtocol:(id)arg1;
- (id)_interfaceForArgument:(unsigned int)arg1 ofSelector:(id)arg2 reply:(BOOL)arg3;
- (id)_allowedClassesForSelector:(id)arg1 reply:(BOOL)arg2;
- (id)_verifiedMethodSignatureForReplyBlockOfSelector:(id)arg1;
- (id)_verifiedMethodSignatureForSelector:(id)arg1;
- (id)replyBlockSignatureForSelector:(SEL)arg1;
- (void)setReplyBlockSignature:(id)arg1 forSelector:(SEL)arg2;
- (Class)classForSelector:(SEL)arg1 argumentIndex:(unsigned int)arg2 ofReply:(BOOL)arg3;
- (void)setClass:(Class)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned int)arg3 ofReply:(BOOL)arg4;
- (id)interfaceForSelector:(SEL)arg1 argumentIndex:(unsigned int)arg2 ofReply:(BOOL)arg3;
- (void)setInterface:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned int)arg3 ofReply:(BOOL)arg4;
- (id)classesForSelector:(SEL)arg1 argumentIndex:(unsigned int)arg2 ofReply:(BOOL)arg3;
- (void)setClasses:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned int)arg3 ofReply:(BOOL)arg4;
@property Protocol *protocol;
- (id)debugDescription;
- (void)dealloc;
- (id)init;

@end

@interface _NSXPCConnectionImportInfo : NSObject
{
    NSLock *_lock;
    struct __CFDictionary *_map;
}

- (BOOL)decrement:(unsigned long long)arg1;
- (void)increment:(unsigned long long)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface _NSXPCConnectionExportInfo : NSObject
{
    id _exportedObject;
    NSXPCInterface *_exportedInterface;
}

@property(retain) NSXPCInterface *exportedInterface; // @synthesize exportedInterface=_exportedInterface;
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
- (void)dealloc;

@end

@interface _NSXPCConnectionExportedObjectTable : NSObject
{
    NSLock *_lock;
    struct __CFDictionary *_proxyNumberToObject;
    struct __CFDictionary *_objectToProxyNumber;
    unsigned long long _next;
}

- (void)releaseExportedObject:(unsigned long long)arg1;
- (unsigned long long)proxyNumberForExportedObject:(id)arg1 interface:(id)arg2;
- (id)interfaceForProxyNumber:(unsigned long long)arg1;
- (void)setInterface:(id)arg1 forProxyNumber:(unsigned long long)arg2;
- (id)exportedObjectForProxyNumber:(unsigned long long)arg1;
- (void)setExportedObject:(id)arg1 forProxyNumber:(unsigned long long)arg2;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface _NSXPCConnectionReplyInfo : NSObject
{
    NSBlock *_replyBlock;
    id _errorBlock;
    id _cleanupBlock;
    NSString *_selector;
    NSXPCInterface *_interface;
}

@property(retain) NSXPCInterface *interface; // @synthesize interface=_interface;
@property(copy) id cleanupBlock; // @synthesize cleanupBlock=_cleanupBlock;
@property(copy) id errorBlock; // @synthesize errorBlock=_errorBlock;
@property(copy) NSBlock *replyBlock; // @synthesize replyBlock=_replyBlock;
@property(copy) NSString *selector; // @synthesize selector=_selector;
- (void)dealloc;

@end

@interface _NSXPCConnectionReplyTable : NSObject
{
    NSMutableDictionary *_replyTable;
    NSLock *_replyTableLock;
    unsigned long long _sequence;
}

- (id)replyInfoForSequence:(unsigned long long)arg1;
- (unsigned long long)sequenceForReplyBlock:(id)arg1 errorBlock:(id)arg2 cleanupBlock:(void)arg3 protocol:(id)arg4 selector:(void)arg5;
- (void)invokeErrorBlockForSequence:(unsigned long)arg1 withError:(id)arg2;
- (void)cleanupReplyBlocksWithError:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _NSXPCDistantObject : NSObject <NSXPCProxyCreating, NSSecureCoding>
{
    NSXPCConnection *_connection;
    NSXPCInterface *_remoteInterface;
    NSMutableDictionary *_knownSelectors;
    NSLock *_selectorLock;
    unsigned long long _proxyNumber;
    BOOL _exported;
}

+ (BOOL)supportsSecureCoding;
@property BOOL _exported; // @synthesize _exported;
@property(retain) NSXPCInterface *_remoteInterface; // @synthesize _remoteInterface;
@property(retain) NSXPCConnection *_connection; // @synthesize _connection;
@property unsigned long long _proxyNumber; // @synthesize _proxyNumber;
- (id)remoteObjectProxyWithTimeout:(double)arg1 errorHandler:(id)arg2;
- (id)remoteObjectProxyWithErrorHandler:(id)arg1;
- (id)remoteObjectProxy;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3;
- (id)init;

@end

@interface _NSXPCDistantObjectWithError : _NSXPCDistantObject
{
    id _errorBlock;
}

@property(copy) id errorBlock; // @synthesize errorBlock=_errorBlock;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3 error:(id)arg4;

@end

@interface _NSXPCDistantObjectSynchronousWithError : _NSXPCDistantObjectWithError
{
    double _timeout;
}

@property double timeout; // @synthesize timeout=_timeout;
- (void)forwardInvocation:(id)arg1;
- (id)_initWithConnection:(id)arg1 proxyNumber:(unsigned long long)arg2 interface:(id)arg3 error:(id)arg4 timeout:(void)arg5;

@end

@interface NSUUID : NSObject <NSCopying, NSSecureCoding>
{
}

+ (BOOL)supportsSecureCoding;
+ (id)UUID;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct __CFString *)_cfUUIDString;
- (id)UUIDString;
- (void)getUUIDBytes:(unsigned char [16])arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)initWithUUIDBytes:(unsigned char [16])arg1;
- (id)initWithUUIDString:(id)arg1;
- (id)init;
- (unsigned long)_cfTypeID;

@end

@interface __NSConcreteUUID : NSUUID
{
    unsigned char _uuidBytes[16];
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (id)description;
- (id)UUIDString;
- (CDStruct_bd2f613f)_cfUUIDBytes;
- (void)getUUIDBytes:(unsigned char [16])arg1;
- (BOOL)isEqual:(id)arg1;
- (id)initWithUUIDBytes:(unsigned char [16])arg1;
- (id)initWithUUIDString:(id)arg1;
- (id)init;

@end

@interface NSOwnedDictionaryProxy : NSDictionary
{
    id _owner;
}

- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (unsigned int)count;
- (void)superRelease;
- (oneway void)release;
- (id)retain;
- (id)initWithOwner:(id)arg1;

@end

@interface NSProgressValues : NSObject <NSSecureCoding>
{
    NSMutableDictionary *_userInfo;
    long long _totalUnitCount;
    long long _completedUnitCount;
    NSString *_localizedDescription;
    BOOL _isCancellable;
    BOOL _isPausable;
    BOOL _isCancelled;
    BOOL _isPaused;
    NSMutableArray *_children;
    NSString *_kind;
}

+ (id)decodableClasses;
+ (BOOL)supportsSecureCoding;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface NSProgress : NSObject <NSProgressPublisher>
{
    NSProgress *_parent;
    long long _portionOfParentUnitCount;
    id _values;
    id _valuesSeenFromMainThread;
    id _cancellationHandler;
    id _pausingHandler;
    long long _pendingUnitCount;
    id _userInfoProxy;
    NSString *_publisherID;
    NSXPCConnection *_connection;
    int _unpublishingBlockageCount;
    int _remoteObserverCount;
    NSMutableDictionary *_acknowledgementHandlersByBundleID;
    NSMutableDictionary *_lastNotificationTimesByKey;
    NSMutableDictionary *_userInfoLastNotificationTimesByKey;
    id _reserved1;
    id _reserved2;
}

+ (void)removeSubscriber:(id)arg1;
+ (id)addSubscriberForFileURL:(id)arg1 usingBlock:(id)arg2;
+ (id)keyPathsForValuesAffectingFractionCompleted;
+ (id)keyPathsForValuesAffectingLocalizedDescription;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)progressWithTotalUnitCount:(long long)arg1;
+ (id)currentProgress;
+ (id)_registrarInterface;
+ (id)_subscriberInterface;
+ (id)_publisherInterface;
@property(readonly, getter=isOld) BOOL old;
- (void)acknowledgeWithSuccess:(BOOL)arg1;
- (oneway void)appWithBundleID:(id)arg1 didAcknowledgeWithSuccess:(BOOL)arg2;
- (oneway void)stopProvidingValues;
- (oneway void)startProvidingValuesWithInitialAcceptor:(id)arg1;
- (void)handleAcknowledgementByAppWithBundleIdentifier:(id)arg1 usingBlock:(id)arg2;
- (void)unpublish;
- (void)_unblockUnpublishing;
- (void)publish;
@property(copy) NSString *kind;
- (id)ownedDictionaryObjectForKey:(id)arg1;
- (id)ownedDictionaryKeyEnumerator;
- (unsigned int)ownedDictionaryCount;
- (id)userInfo;
- (void)pause;
- (void)_pause;
- (void)cancel;
- (void)_cancel;
@property(readonly) double fractionCompleted;
- (double)_fractionCompletedUsingValuesFinder:(id)arg1;
@property(readonly, getter=isIndeterminate) BOOL indeterminate;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
- (void)_setUserInfoValue:(id)arg1 forKey:(id)arg2;
- (void)setPausingHandler:(id)arg1;
- (void)setCancellationHandler:(id)arg1;
@property(readonly, getter=isPaused) BOOL paused;
@property(readonly, getter=isCancelled) BOOL cancelled;
@property(getter=isPausable) BOOL pausable;
@property(getter=isCancellable) BOOL cancellable;
@property(copy) NSString *localizedDescription;
@property long long completedUnitCount;
@property long long totalUnitCount;
- (void)_getValueUsingBlock:(id)arg1;
- (void)_setValueForKey:(id)arg1 usingBlock:(id)arg2;
- (void)__setValueForKey:(id)arg1 usingBlock:(id)arg2;
- (void)_notifyRemoteObserversOfValueForKey:(id)arg1 inUserInfo:(BOOL)arg2;
- (void)__notifyRemoteObserversOfValueForKey:(id)arg1 inUserInfo:(BOOL)arg2;
- (void)resignCurrent;
- (void)becomeCurrentWithPendingUnitCount:(long long)arg1;
- (void)dealloc;
- (id)initWithParent:(id)arg1 userInfo:(id)arg2;
- (id)init;
- (void)_setValue:(id)arg1 forKey:(id)arg2 inUserInfo:(BOOL)arg3;
- (id)_initWithValues:(id)arg1;
@property(readonly) NSString *localizedItemCountDescription;
- (void)acknowledge;
- (void)handleAcknowledgementByAppWithBundleIdentifer:(id)arg1 usingBlock:(id)arg2;

@end

@interface NSProgressPublisherProxy : NSObject <NSProgressPublisher>
{
    id <NSProgressPublisher> _forwarder;
    id _publisherID;
    NSFileAccessNode *_itemLocation;
    NSMutableSet *_bundleIDsOfUnacknowledgedApps;
}

- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (oneway void)appWithBundleID:(id)arg1 didAcknowledgeWithSuccess:(BOOL)arg2;
- (oneway void)pause;
- (oneway void)cancel;
- (oneway void)stopProvidingValues;
- (oneway void)startProvidingValuesWithInitialAcceptor:(id)arg1;
- (void)broadcastValue:(id)arg1 forKey:(id)arg2 inUserInfo:(BOOL)arg3;
- (void)setItemLocation:(id)arg1;
- (id)publisherID;
- (void)dealloc;
- (id)initWithForwarder:(id)arg1 publisherID:(id)arg2 acknowledgementAppBundleIDs:(id)arg3;

@end

@interface NSProgressSubscriberProxy : NSObject <NSProgressSubscriber>
{
    id <NSProgressSubscriber> _forwarder;
    id _subscriberID;
    NSFileAccessNode *_itemLocation;
    NSString *_appBundleIDOrNil;
}

- (id)description;
- (id)descriptionWithIndenting:(id)arg1;
- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(BOOL)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 withValues:(id)arg3 isOld:(BOOL)arg4;
- (void)setItemLocation:(id)arg1;
- (id)appBundleID;
- (void)dealloc;
- (id)initWithForwarder:(id)arg1 subscriberID:(id)arg2 appBundleID:(id)arg3;

@end

@interface NSProgressRegistrar : NSObject <NSXPCListenerDelegate, NSProgressRegistrar>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSFileAccessNode *_rootFileAccessNode;
    NSMutableDictionary *_publishersAndSubscribersByID;
}

- (oneway void)removeSubscriberForID:(id)arg1;
- (oneway void)addSubscriber:(id)arg1 forID:(id)arg2 appBundleID:(id)arg3 fileURL:(id)arg4;
- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(BOOL)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 acknowledgementAppBundleIDs:(id)arg3 fileURL:(id)arg4;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)finalize;
- (void)dealloc;
- (id)initWithQueue:(id)arg1 rootFileAccessNode:(id)arg2;

@end

@interface NSProgressProxy : NSProgress
{
    id <NSProgressPublisher> _forwarder;
    BOOL _isOld;
    id _unpublishingHandler;
}

- (BOOL)isOld;
- (void)acknowledgeWithSuccess:(BOOL)arg1;
- (void)pause;
- (void)cancel;
- (void)unpublish;
- (void)publish;
- (void)setKind:(id)arg1;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
- (void)setPausingHandler:(id)arg1;
- (void)setCancellationHandler:(id)arg1;
- (void)setPausable:(BOOL)arg1;
- (void)setCancellable:(BOOL)arg1;
- (void)setLocalizedDescription:(id)arg1;
- (void)setCompletedUnitCount:(long long)arg1;
- (void)setTotalUnitCount:(long long)arg1;
- (void)resignCurrent;
- (void)becomeCurrentWithPendingUnitCount:(long long)arg1;
- (void)_invokeUnpublishingHandler;
- (void)_invokePublishingHandler:(id)arg1;
- (void)dealloc;
- (id)_initWithForwarder:(id)arg1 values:(id)arg2 isOld:(BOOL)arg3;

@end

@interface NSProgressSubscriber : NSObject <NSProgressSubscriber>
{
    id _publishingHandler;
    NSString *_subscriberID;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_proxiesByPublisherID;
    NSXPCConnection *_connection;
}

- (oneway void)removePublisherForID:(id)arg1;
- (oneway void)observePublisherForID:(id)arg1 value:(id)arg2 forKey:(id)arg3 inUserInfo:(BOOL)arg4;
- (oneway void)addPublisher:(id)arg1 forID:(id)arg2 withValues:(id)arg3 isOld:(BOOL)arg4;
- (void)stop;
- (void)startForFileURL:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithPublishingHandler:(id)arg1;

@end

@interface NSByteCountFormatter : NSFormatter
{
    unsigned int _allowedUnits;
    BOOL _countStyle;
    BOOL _allowsNonnumericFormatting;
    BOOL _includesUnit;
    BOOL _includesCount;
    BOOL _includesActualByteCount;
    BOOL _adaptive;
    BOOL _zeroPadsFractionDigits;
    int _reserved[6];
}

+ (id)stringFromByteCount:(long long)arg1 countStyle:(int)arg2;
@property BOOL zeroPadsFractionDigits; // @synthesize zeroPadsFractionDigits=_zeroPadsFractionDigits;
@property(getter=isAdaptive) BOOL adaptive; // @synthesize adaptive=_adaptive;
@property BOOL includesActualByteCount; // @synthesize includesActualByteCount=_includesActualByteCount;
@property BOOL includesCount; // @synthesize includesCount=_includesCount;
@property BOOL includesUnit; // @synthesize includesUnit=_includesUnit;
@property BOOL allowsNonnumericFormatting; // @synthesize allowsNonnumericFormatting=_allowsNonnumericFormatting;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromByteCount:(long long)arg1;
- (unsigned long long)_options;
@property int countStyle;
@property unsigned int allowedUnits;

@end

@interface NSLocalizableString : NSString
{
    NSString *_stringsFileKey;
    NSString *_developmentLanguageString;
}

+ (id)localizableStringWithStringsFileKey:(id)arg1 developmentLanguageString:(id)arg2;
- (void)setDevelopmentLanguageString:(id)arg1;
@property(readonly) NSString *developmentLanguageString;
- (void)setStringsFileKey:(id)arg1;
@property(readonly) NSString *stringsFileKey;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStringsFileKey:(id)arg1 developmentLanguageString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (unsigned short)characterAtIndex:(unsigned int)arg1;
- (unsigned int)length;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface NSObject (NSArchiverCallBack)
- (id)replacementObjectForArchiver:(id)arg1;
- (Class)classForArchiver;
@end

@interface NSArray (NSArray)
+ (id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2;
+ (id)arrayWithContentsOfURL:(id)arg1;
+ (id)arrayWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (id)_stringToWrite;
- (id)sortedArrayUsingSelector:(SEL)arg1 hint:(id)arg2;
- (id)sortedArrayUsingFunction:(void *)arg1 context:(void *)arg2 hint:(id)arg3;
- (id)sortedArrayHint;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)debugDescription;
@end

@interface NSMutableArray (NSMutableArray)
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (void)removeObjectsFromIndices:(unsigned int *)arg1 numIndices:(unsigned int)arg2;
- (Class)classForCoder;
@end

@interface NSCalendar (NSCalendar)
+ (id)autoupdatingCurrentCalendar;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDateComponents (_)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDate (NSCalendarDateStuff)
- (id)descriptionWithCalendarFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3;
- (id)dateWithCalendarFormat:(id)arg1 timeZone:(id)arg2;
@end

@interface NSDate (NSNaturalLanguageDate)
+ (id)dateWithNaturalLanguageString:(id)arg1 locale:(id)arg2;
+ (id)dateWithNaturalLanguageString:(id)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
@end

@interface NSData (NSData)
+ (id)dataWithData:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
+ (id)dataWithContentsOfMappedFile:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1;
+ (id)dataWithContentsOfFile:(id)arg1;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2;
+ (id)dataWithBytes:(const void *)arg1 length:(unsigned int)arg2;
+ (id)data;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (BOOL)supportsSecureCoding;
- (id)base64Encoding;
- (id)initWithBase64Encoding:(id)arg1;
- (struct _NSRange)rangeOfData:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned int)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2;
- (id)initWithBytes:(void *)arg1 length:(unsigned int)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(id)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (BOOL)isEqualToData:(id)arg1;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (void)getBytes:(void *)arg1 length:(unsigned int)arg2;
- (void)getBytes:(void *)arg1;
- (BOOL)_bytesAreVM;
- (BOOL)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)_asciiDescription;
- (id)description;
- (unsigned long)_cfTypeID;
- (const void *)bytes;
- (unsigned int)length;
@end

@interface NSMutableData (NSMutableData)
+ (id)dataWithLength:(unsigned int)arg1;
+ (id)dataWithCapacity:(unsigned int)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithLength:(unsigned int)arg1;
- (id)initWithCapacity:(unsigned int)arg1;
- (void)setData:(id)arg1;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)increaseLengthBy:(unsigned int)arg1;
- (void)appendData:(id)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned int)arg2;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2 length:(unsigned int)arg3;
- (Class)classForCoder;
- (void)setLength:(unsigned int)arg1;
- (void *)mutableBytes;
@end

@interface NSDate (NSDate)
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDictionary (NSDictionary)
+ (id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2;
+ (id)dictionaryWithContentsOfURL:(id)arg1;
+ (id)dictionaryWithContentsOfFile:(id)arg1;
+ (BOOL)supportsSecureCoding;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (id)_stringToWrite;
- (id)descriptionInStringsFileFormat;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSMutableDictionary (NSMutableDictionary)
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (Class)classForCoder;
@end

@interface NSException (NSException)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSDictionary (NSFileAttributes)
- (id)fileGroupOwnerAccountID;
- (id)fileOwnerAccountID;
- (id)fileCreationDate;
- (BOOL)fileIsAppendOnly;
- (BOOL)fileIsImmutable;
- (unsigned long)fileHFSTypeCode;
- (unsigned long)fileHFSCreatorCode;
- (BOOL)fileExtensionHidden;
- (unsigned int)fileSystemFileNumber;
- (int)fileSystemNumber;
- (unsigned int)fileGroupOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned int)fileOwnerAccountNumber;
- (id)fileOwnerAccountName;
- (unsigned int)filePosixPermissions;
- (id)fileType;
- (id)fileModificationDate;
- (unsigned long long)fileSize;
@end

@interface NSObject (NSKeyValueCoding)
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)accessInstanceVariablesDirectly;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (BOOL)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (id)mutableOrderedSetValueForKey:(id)arg1;
- (id)mutableArrayValueForKey:(id)arg1;
- (BOOL)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
@end

@interface NSArray (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_unionOfSetsForKeyPath:(id)arg1;
- (id)_unionOfArraysForKeyPath:(id)arg1;
- (id)_unionOfObjectsForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSDictionary (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
@end

@interface NSMutableDictionary (NSKeyValueCoding)
- (void)setValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSNull (NSKeyValueCoding)
- (id)valueForKey:(id)arg1;
@end

@interface NSOrderedSet (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSSet (NSKeyValueCoding)
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_sumForKeyPath:(id)arg1;
@end

@interface NSUserDefaults (NSKeyValueCoding)
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
@end

@interface NSObject (NSKeyValueCodingPrivate)
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
@end

@interface NSArray (NSKeyValueCodingPrivate)
- (BOOL)_validateValue:(inout id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned int)arg3 error:(out id *)arg4;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned int)arg3;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_mutableOrderedSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
@end

@interface NSOrderedSet (NSKeyValueCodingPrivate)
- (BOOL)_validateValue:(inout id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned int)arg3 error:(out id *)arg4;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned int)arg3;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_mutableOrderedSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned int)arg2;
@end

@interface NSObject (NSKeyValueObserverNotifying)
- (BOOL)_isKVOA;
@end

@interface NSObject (NSKeyValueObserving)
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@interface NSObject (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4;
@end

@interface NSArray (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3;
- (void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 context:(void *)arg4;
- (void)addObserver:(id)arg1 toObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 options:(unsigned int)arg4 context:(void *)arg5;
@end

@interface NSOrderedSet (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4;
@end

@interface NSSet (NSKeyValueObserverRegistration)
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned int)arg3 context:(void *)arg4;
@end

@interface NSObject (NSKeyValueObserverNotification)
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned int)arg2 usingObjects:(id)arg3;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned int)arg2 usingObjects:(id)arg3;
- (void)didChange:(unsigned int)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)willChange:(unsigned int)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
@end

@interface NSObject (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
@end

@interface NSObject (NSDeprecatedKeyValueObservingCustomization)
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
@end

@interface NSObject (NSKeyValueObservingPrivate)
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
- (id)_implicitObservationInfo;
- (void)_changeValueForKey:(id)arg1 usingBlock:(id)arg2;
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(id)arg4;
- (void)_didChangeValuesForKeys:(id)arg1;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
@end

@interface NSObject (NSKeyedArchiverObjectSubstitution)
+ (id)classFallbacksForKeyedArchiver;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (Class)classForKeyedArchiver;
@end

@interface NSObject (NSKeyedUnarchiverObjectSubstitution)
+ (Class)classForKeyedUnarchiver;
@end

@interface NSLocale (NSLocale)
+ (id)autoupdatingCurrentLocale;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSNull (NSNull)
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSObject (NSObject)
+ (int)version;
+ (void)setVersion:(int)arg1;
+ (BOOL)implementsSelector:(SEL)arg1;
+ (BOOL)instancesImplementSelector:(SEL)arg1;
+ (void)load;
- (BOOL)implementsSelector:(SEL)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (BOOL)_allowsDirectEncoding;
- (Class)classForCoder;
- (id)awakeAfterUsingCoder:(id)arg1;
@end

@interface NSObject (NSDiscardableContentProxy)
- (id)autoContentAccessingProxy;
@end

@interface NSArray (NSArrayPathExtensions)
- (id)stringsByAppendingPathComponent:(id)arg1;
- (id)pathsMatchingExtensions:(id)arg1;
@end

@interface NSData (NSKindOfAdditions)
- (BOOL)isNSData__;
@end

@interface NSRunLoop (NSRunLoop)
+ (id)mainRunLoop;
+ (id)currentRunLoop;
+ (id)_new:(id)arg1;
- (void)cancelPerformSelectorsWithTarget:(id)arg1;
- (void)cancelPerformSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
- (void)performSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3 order:(unsigned int)arg4 modes:(id)arg5;
- (BOOL)runBeforeDate:(id)arg1;
- (void)runUntilDate:(id)arg1;
- (void)run;
- (BOOL)runMode:(id)arg1 untilDate:(id)arg2;
- (BOOL)runMode:(id)arg1 beforeDate:(id)arg2;
- (void)acceptInputForMode:(id)arg1 beforeDate:(id)arg2;
- (void)_wakeup;
- (id)limitDateForMode:(id)arg1;
- (void)_invalidateTimers;
- (id)currentMode;
- (id)allModes;
- (BOOL)containsTimer:(id)arg1 forMode:(id)arg2;
- (id)timersForMode:(id)arg1;
- (void)removeTimer:(id)arg1 forMode:(id)arg2;
- (void)addTimer:(id)arg1 forMode:(id)arg2;
- (id)portsForMode:(id)arg1;
- (BOOL)containsPort:(id)arg1 forMode:(id)arg2;
- (void)removePort:(id)arg1 forMode:(id)arg2;
- (void)addPort:(id)arg1 forMode:(id)arg2;
- (id)description;
- (struct __CFRunLoop *)getCFRunLoop;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_removePort:(id)arg1 forMode:(id)arg2;
- (void)_addPort:(id)arg1 forMode:(id)arg2;
- (BOOL)_containsPort:(id)arg1 forMode:(id)arg2;
- (void)_portInvalidated:(id)arg1;
- (void)_enumerateInfoPairsWithBlock:(id)arg1;
@end

@interface NSObject (NSDelayedPerforming)
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
@end

@interface NSSet (NSSet)
+ (BOOL)supportsSecureCoding;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSMutableSet (NSMutableSet)
- (Class)classForCoder;
@end

@interface NSSet (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSArray (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSMutableArray (NSKeyValueSorting)
- (void)sortUsingDescriptors:(id)arg1;
@end

@interface NSOrderedSet (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSMutableOrderedSet (NSKeyValueSorting)
- (void)sortUsingDescriptors:(id)arg1;
@end

@interface NSStream (NSStream)
- (id)streamError;
- (unsigned int)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
@end

@interface NSInputStream (NSInputStream)
+ (id)inputStreamWithURL:(id)arg1;
+ (id)inputStreamWithFileAtPath:(id)arg1;
+ (id)inputStreamWithData:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long)_cfTypeID;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned int *)arg2;
- (int)read:(char *)arg1 maxLength:(unsigned int)arg2;
@end

@interface NSOutputStream (NSOutputStream)
+ (id)outputStreamWithURL:(id)arg1 append:(BOOL)arg2;
+ (id)outputStreamToFileAtPath:(id)arg1 append:(BOOL)arg2;
+ (id)outputStreamToBuffer:(char *)arg1 capacity:(unsigned int)arg2;
+ (id)outputStreamToMemory;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long)_cfTypeID;
- (BOOL)hasSpaceAvailable;
- (int)write:(const char *)arg1 maxLength:(unsigned int)arg2;
@end

@interface NSInputStream (NSCFInputStreamAdditions)
- (CDStruct_1ef3fb1f)_cfStreamError;
@end

@interface NSOutputStream (NSCFOutputStreamAdditions)
- (CDStruct_1ef3fb1f)_cfStreamError;
@end

@interface NSStream (NSSocketStreamCreationExtensions)
+ (void)getStreamsToHost:(id)arg1 port:(int)arg2 inputStream:(id *)arg3 outputStream:(id *)arg4;
@end

@interface NSObject (NSThreadPerformAdditions)
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5;
@end

@interface NSTimeZone (NSTimeZone)
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@end

@interface NSTimer (NSTimer)
+ (id)timerWithFireDate:(id)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
+ (id)timerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(BOOL)arg3;
+ (id)timerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(BOOL)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (double)_cffireTime;
- (CDStruct_60d14f2d)context;
- (void)setFireTime:(double)arg1;
- (double)fireTime;
- (double)interval;
- (long)order;
- (struct __CFString *)copyDebugDescription;
- (id)userInfo;
- (void)setFireDate:(id)arg1;
- (id)fireDate;
- (void)fire;
- (double)timeInterval;
- (BOOL)isValid;
- (void)invalidate;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(BOOL)arg6;
@end

@interface NSUserDefaults (NSUserDefaults)
+ (id)standardUserDefaults;
+ (void)resetStandardUserDefaults;
+ (void)setStandardUserDefaults:(id)arg1;
- (BOOL)objectIsForcedForKey:(id)arg1 inDomain:(id)arg2;
- (BOOL)objectIsForcedForKey:(id)arg1;
- (BOOL)synchronize;
- (void)removePersistentDomainForName:(id)arg1;
- (void)setPersistentDomain:(id)arg1 forName:(id)arg2;
- (id)persistentDomainForName:(id)arg1;
- (id)persistentDomainNames;
- (void)removeVolatileDomainForName:(id)arg1;
- (void)setVolatileDomain:(id)arg1 forName:(id)arg2;
- (id)volatileDomainForName:(id)arg1;
- (id)volatileDomainNames;
- (oneway void)release;
- (id)init;
- (id)initWithUser:(id)arg1;
- (void)registerDefaults:(id)arg1;
- (void)removeSuiteNamed:(id)arg1;
- (void)addSuiteNamed:(id)arg1;
- (void)setSearchList:(id)arg1;
- (id)searchList;
- (id)dictionaryRepresentation;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setLong:(long long)arg1 forKey:(id)arg2;
- (void)setInteger:(int)arg1 forKey:(id)arg2;
- (id)URLForKey:(id)arg1;
- (BOOL)boolForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (float)floatForKey:(id)arg1;
- (long long)longForKey:(id)arg1;
- (int)integerForKey:(id)arg1;
- (id)stringArrayForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1 inDomain:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
- (id)objectForKey:(id)arg1 inDomain:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@end

@interface NSURL (NSURL)
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
+ (id)fileURLWithPath:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)URLWithString:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isFileURL;
- (id)fragment;
- (id)query;
- (id)parameterString;
- (id)path;
- (id)relativePath;
- (id)password;
- (id)user;
- (id)port;
- (id)host;
- (id)standardizedURL;
- (id)absoluteURL;
- (id)absoluteString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
- (id)initFileURLWithPath:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initWithString:(id)arg1;
- (id)init;
- (id)resourceSpecifier;
- (BOOL)_isAbsolute;
- (id)_relativeURLPath;
- (id)scheme;
- (id)baseURL;
- (id)relativeString;
- (void)finalize;
- (void)dealloc;
- (void)_freeClients;
- (struct __CFDictionary *)_clientsCreatingIfNecessary:(BOOL)arg1;
- (struct __CFURL *)_cfurl;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (id)_initWithMinimalBookmarkData:(id)arg1;
- (unsigned long)_cfTypeID;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
@end

@interface NSURL (NSURLPathUtilities)
+ (id)fileURLWithPathComponents:(id)arg1;
- (id)URLByResolvingSymlinksInPath;
- (id)URLByStandardizingPath;
- (id)URLByDeletingPathExtension;
- (id)URLByAppendingPathExtension:(id)arg1;
- (id)URLByDeletingLastPathComponent;
- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(BOOL)arg2;
- (id)pathExtension;
- (id)lastPathComponent;
- (id)pathComponents;
@end

@interface NSURL (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
@end

@interface NSUserDefaults (NSUserDefaults_NSURLExtras)
+ (id)_web_preferredLanguageCode;
+ (void)_web_addDefaultsChangeObserver;
+ (void)_web_defaultsDidChange;
+ (void)_ensureAndLockPreferredLanguageLock;
@end

@interface NSDate (NSURLExtras)
- (BOOL)_web_isToday;
- (int)_web_compareDay:(id)arg1;
- (id)_web_RFC1123DateString;
@end

@interface NSData (NSURLExtras)
- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;
- (id)_web_parseRFC822HeaderFields;
- (id)_web_guessedMIMETypeForExtension:(id)arg1;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForXML;
@end

@interface NSDictionary (NSURLExtras)
- (id)_web_objectForMIMEType:(id)arg1;
- (id)_web_numberForKey:(id)arg1;
- (id)_web_stringForKey:(id)arg1;
- (int)_web_intForKey:(id)arg1;
@end

@interface NSMutableDictionary (NSURLExtras)
- (void)_web_setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)_web_setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_web_setInt:(int)arg1 forKey:(id)arg2;
@end

@interface NSURL (NSURLExtras)
+ (id)_web_URLWithComponents:(CDStruct_2b292156)arg1;
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
- (BOOL)_web_isJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (id)_web_scriptIfJavaScriptURL;
- (CDStruct_2b292156)_web_URLComponents;
@end

@interface NSURL (NSURLExtrasInternal)
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
- (id)_hostString;
- (id)_URLByEscapingSpacesAndControlChars;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
@end

@interface NSObject (NSDistantObjectAdditions)
+ (const char *)_localClassNameForClass;
- (const char *)_localClassNameForClass;
@end

@interface NSObject (NSDOAdditions)
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;
- (BOOL)_conformsToProtocolNamed:(const char *)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
@end

@interface NSArray (NSPredicateSupport)
- (id)filteredArrayUsingPredicate:(id)arg1;
@end

@interface NSMutableArray (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSSet (NSPredicateSupport)
- (id)filteredSetUsingPredicate:(id)arg1;
@end

@interface NSMutableSet (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSOrderedSet (NSPredicateSupport)
- (id)filteredOrderedSetUsingPredicate:(id)arg1;
@end

@interface NSMutableOrderedSet (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSObject (NSObjectPortCoding)
+ (id)replacementObjectForPortCoder:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (Class)classForPortCoder;
@end

@interface NSArray (NSArrayPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSData (NSDataPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDate (NSDatePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDictionary (NSDictionaryPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSException (NSExceptionPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSNull (NSNullPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSSet (NSSetPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSTimeZone (NSTimeZonePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSInvocation (NSInvocationDebugDescription)
- (id)debugDescription;
@end

